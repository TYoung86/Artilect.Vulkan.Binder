<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>VkPhysicalDeviceFeatures Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="VkPhysicalDeviceFeatures class" /><meta name="System.Keywords" content="VkPhysicalDeviceFeatures class, about VkPhysicalDeviceFeatures class" /><meta name="Microsoft.Help.F1" content="VkPhysicalDeviceFeatures" /><meta name="Microsoft.Help.Id" content="T:VkPhysicalDeviceFeatures" /><meta name="Description" content="Structure describing the fine-grained features that can be supported by an implementation" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="default_namespace" /><meta name="file" content="T_VkPhysicalDeviceFeatures" /><meta name="guid" content="T_VkPhysicalDeviceFeatures" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vulkan Bindings for .NET Standard<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="Vulkan Bindings for .NET Standard" tocid="roottoc">Vulkan Bindings for .NET Standard</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="Generated .NET Standard Vulkan Bindings" tocid="R_Project_Documentation">Generated .NET Standard Vulkan Bindings</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_.htm" title="( Default Namespace )" tocid="N_">( Default Namespace )</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_VkPhysicalDeviceFeatures.htm" title="VkPhysicalDeviceFeatures Class" tocid="T_VkPhysicalDeviceFeatures">VkPhysicalDeviceFeatures Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Fields_T_VkPhysicalDeviceFeatures.htm" title="VkPhysicalDeviceFeatures Fields" tocid="Fields_T_VkPhysicalDeviceFeatures">VkPhysicalDeviceFeatures Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>VkPhysicalDeviceFeatures Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Structure describing the fine-grained features that can be supported by an implementation</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">System<span id="LST6619969D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6619969D_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ValueType</a><br />  <span class="selflink">(Default Namespace)<span id="LST6619969D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6619969D_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkPhysicalDeviceFeatures</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_.htm">(Default Namespace)</a><br />
    <strong>Assembly:</strong>
   Vulkan (in Vulkan.dll) Version: 1.0.53<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>]
<span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">VkPhysicalDeviceFeatures</span> : <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">VkPhysicalDeviceFeatures</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_alphaToOne.htm">alphaToOne</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_depthBiasClamp.htm">depthBiasClamp</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_depthBounds.htm">depthBounds</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_depthClamp.htm">depthClamp</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_drawIndirectFirstInstance.htm">drawIndirectFirstInstance</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_dualSrcBlend.htm">dualSrcBlend</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_fillModeNonSolid.htm">fillModeNonSolid</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_fragmentStoresAndAtomics.htm">fragmentStoresAndAtomics</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_fullDrawIndexUint32.htm">fullDrawIndexUint32</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_geometryShader.htm">geometryShader</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_imageCubeArray.htm">imageCubeArray</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_independentBlend.htm">independentBlend</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_inheritedQueries.htm">inheritedQueries</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_largePoints.htm">largePoints</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_logicOp.htm">logicOp</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_multiDrawIndirect.htm">multiDrawIndirect</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_multiViewport.htm">multiViewport</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_occlusionQueryPrecise.htm">occlusionQueryPrecise</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_pipelineStatisticsQuery.htm">pipelineStatisticsQuery</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_robustBufferAccess.htm">robustBufferAccess</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_samplerAnisotropy.htm">samplerAnisotropy</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sampleRateShading.htm">sampleRateShading</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderClipDistance.htm">shaderClipDistance</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderCullDistance.htm">shaderCullDistance</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderFloat64.htm">shaderFloat64</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderImageGatherExtended.htm">shaderImageGatherExtended</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderInt16.htm">shaderInt16</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderInt64.htm">shaderInt64</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderResourceMinLod.htm">shaderResourceMinLod</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderResourceResidency.htm">shaderResourceResidency</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderSampledImageArrayDynamicIndexing.htm">shaderSampledImageArrayDynamicIndexing</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderStorageBufferArrayDynamicIndexing.htm">shaderStorageBufferArrayDynamicIndexing</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderStorageImageArrayDynamicIndexing.htm">shaderStorageImageArrayDynamicIndexing</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderStorageImageExtendedFormats.htm">shaderStorageImageExtendedFormats</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderStorageImageMultisample.htm">shaderStorageImageMultisample</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderStorageImageReadWithoutFormat.htm">shaderStorageImageReadWithoutFormat</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderStorageImageWriteWithoutFormat.htm">shaderStorageImageWriteWithoutFormat</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderTessellationAndGeometryPointSize.htm">shaderTessellationAndGeometryPointSize</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_shaderUniformBufferArrayDynamicIndexing.htm">shaderUniformBufferArrayDynamicIndexing</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseBinding.htm">sparseBinding</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseResidency16Samples.htm">sparseResidency16Samples</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseResidency2Samples.htm">sparseResidency2Samples</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseResidency4Samples.htm">sparseResidency4Samples</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseResidency8Samples.htm">sparseResidency8Samples</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseResidencyAliased.htm">sparseResidencyAliased</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseResidencyBuffer.htm">sparseResidencyBuffer</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseResidencyImage2D.htm">sparseResidencyImage2D</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_sparseResidencyImage3D.htm">sparseResidencyImage3D</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_tessellationShader.htm">tessellationShader</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_textureCompressionASTC_LDR.htm">textureCompressionASTC_LDR</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_textureCompressionBC.htm">textureCompressionBC</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_textureCompressionETC2.htm">textureCompressionETC2</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_variableMultisampleRate.htm">variableMultisampleRate</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_vertexPipelineStoresAndAtomics.htm">vertexPipelineStoresAndAtomics</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_VkPhysicalDeviceFeatures_wideLines.htm">wideLines</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection"><ul><li><span class="code">robustBufferAccess</span>
indicates that accesses to buffers are bounds-checked against the range
of the buffer descriptor (as determined by
<span class="code">VkDescriptorBufferInfo</span>::<span class="code">range</span>,
<span class="code">VkBufferViewCreateInfo</span>::<span class="code">range</span>, or the size of the buffer).
Out of bounds accesses  must  not cause application termination, and the
effects of shader loads, stores, and atomics  must  conform to an
implementation-dependent behavior as described below.  <ul><li> A buffer access is considered to be out of bounds if any of the
following are true:  <ul><li> The pointer was formed by <span class="code">OpImageTexelPointer</span> and the coordinate
is less than zero or greater than or equal to the number of whole
elements in the bound range. </li><li> The pointer was not formed by <span class="code">OpImageTexelPointer</span> and the object
pointed to is not wholly contained within the bound range.  <div class="tableSection"><table /></div></li><li> If any buffer access in a given SPIR-V block is determined to be out
of bounds, then any other access of the same type (load, store, or
atomic) in the same SPIR-V block that accesses an address less than 16
bytes away from the out of bounds address  may  also be considered out
of bounds. </li></ul></li><li> Out-of-bounds buffer loads will return any of the following values:  <ul><li> Values from anywhere within the memory range(s) bound to the buffer
(possibly including bytes of memory past the end of the buffer, up to
the end of the bound range). </li><li> Zero values, or  (0,0,0,x)  vectors for vector reads where x is a
valid value represented in the type of the vector components and  may 
be any of:  <ul><li> 0, 1, or the maximum representable positive integer value, for signed
or unsigned integer components </li><li> 0.0 or 1.0, for floating-point components </li></ul></li></ul></li><li> Out-of-bounds writes  may  modify values within the memory range(s)
bound to the buffer, but  must  not modify any other memory. </li><li> Out-of-bounds atomics  may  modify values within the memory range(s)
bound to the buffer, but  must  not modify any other memory, and return
an undefined value. </li><li> Vertex input attributes are considered out of bounds if the address of
the attribute plus the size of the attribute is greater than the size
of the bound buffer.
Further, if any vertex input attribute using a specific vertex input
binding is out of bounds, then all vertex input attributes using that
vertex input binding for that vertex shader invocation are considered
out of bounds.  <ul><li> If a vertex input attribute is out of bounds, it will be assigned one
of the following values:  <ul><li> Values from anywhere within the memory range(s) bound to the buffer,
converted according to the format of the attribute. </li><li> Zero values, format converted according to the format of the
attribute. </li><li> Zero values, or  (0,0,0,x)  vectors, as described above. </li></ul></li></ul></li><li> If <span class="code">robustBufferAccess</span> is not enabled, out of bounds accesses  may 
corrupt any memory within the process and cause undefined behavior up
to and including application termination. </li></ul></li><li><span class="code">fullDrawIndexUint32</span>
indicates the full 32-bit range of indices is supported for indexed draw
calls when using a <a href="T_VkIndexType.htm">VkIndexType</a> of <span class="code">VK_INDEX_TYPE_UINT32</span>.
<span class="code">maxDrawIndexedIndexValue</span> is the maximum index value that  may  be
used (aside from the primitive restart index, which is always 2<sup>32</sup>-1
when the <a href="T_VkIndexType.htm">VkIndexType</a> is <span class="code">VK_INDEX_TYPE_UINT32</span>).
If this feature is supported, <span class="code">maxDrawIndexedIndexValue</span> must  be
2<sup>32</sup>-1; otherwise it  must  be no smaller than 2<sup>24</sup>-1.
See
<a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxDrawIndexedIndexValue">maxDrawIndexedIndexValue</a>. </li><li><span class="code">imageCubeArray</span> indicates
whether image views with a <a href="T_VkImageViewType.htm">VkImageViewType</a> of
<span class="code">VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</span> can  be created, and that the
corresponding <span class="code">SampledCubeArray</span> and <span class="code">ImageCubeArray</span> SPIR-V
capabilities  can  be used in shader code. </li><li><span class="code">independentBlend</span> indicates
whether the <span class="code">VkPipelineColorBlendAttachmentState</span> settings are
controlled independently per-attachment.
If this feature is not enabled, the
<span class="code">VkPipelineColorBlendAttachmentState</span> settings for all color
attachments  must  be identical.
Otherwise, a different <span class="code">VkPipelineColorBlendAttachmentState</span> can  be
provided for each bound color attachment. </li><li><span class="code">geometryShader</span> indicates
whether geometry shaders are supported.
If this feature is not enabled, the <span class="code">VK_SHADER_STAGE_GEOMETRY_BIT</span>
and <span class="code">VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</span> enum values  must  not be
used.
This also indicates whether shader modules  can  declare the
<span class="code">Geometry</span> capability. </li><li><span class="code">tessellationShader</span>
indicates whether tessellation control and evaluation shaders are
supported.
If this feature is not enabled, the
<span class="code">VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT</span>,
<span class="code">VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT</span>,
<span class="code">VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</span>,
<span class="code">VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</span>, and
<span class="code">VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO</span> enum
values  must  not be used.
This also indicates whether shader modules  can  declare the
<span class="code">Tessellation</span> capability. </li><li><span class="code">sampleRateShading</span>
indicates whether per-sample shading and multisample interpolation are
supported.
If this feature is not enabled, the <span class="code">sampleShadingEnable</span> member of
the <span class="code">VkPipelineMultisampleStateCreateInfo</span> structure  must  be set to
<span class="code">VK_FALSE</span> and the <span class="code">minSampleShading</span> member is ignored.
This also indicates whether shader modules  can  declare the
<span class="code">SampleRateShading</span> capability. </li><li><span class="code">dualSrcBlend</span> indicates whether
blend operations which take two sources are supported.
If this feature is not enabled, the <span class="code">VK_BLEND_FACTOR_SRC1_COLOR</span>,
<span class="code">VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR</span>,
<span class="code">VK_BLEND_FACTOR_SRC1_ALPHA</span>, and
<span class="code">VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA</span> enum values  must  not be used
as source or destination blending factors.
See <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-dsb">../../html/vkspec.html#framebuffer-dsb</a>. </li><li><span class="code">logicOp</span> indicates whether logic
operations are supported.
If this feature is not enabled, the <span class="code">logicOpEnable</span> member of the
<span class="code">VkPipelineColorBlendStateCreateInfo</span> structure  must  be set to
<span class="code">VK_FALSE</span>, and the <span class="code">logicOp</span> member is ignored. </li><li><span class="code">multiDrawIndirect</span>
indicates whether multiple draw indirect is supported.
If this feature is not enabled, the <span class="code">drawCount</span> parameter to the
<span class="code">vkCmdDrawIndirect</span> and <span class="code">vkCmdDrawIndexedIndirect</span> commands
 must  be 0 or 1.
The <span class="code">maxDrawIndirectCount</span> member of the
<span class="code">VkPhysicalDeviceLimits</span> structure  must  also be 1 if this feature
is not supported.
See <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxDrawIndirectCount">maxDrawIndirectCount</a>. </li><li><span class="code">drawIndirectFirstInstance</span> indicates whether indirect draw calls
support the <span class="code">firstInstance</span> parameter.
If this feature is not enabled, the <span class="code">firstInstance</span> member of all
<span class="code">VkDrawIndirectCommand</span> and <span class="code">VkDrawIndexedIndirectCommand</span>
structures that are provided to the <span class="code">vkCmdDrawIndirect</span> and
<span class="code">vkCmdDrawIndexedIndirect</span> commands  must  be 0. </li><li><span class="code">depthClamp</span> indicates whether
depth clamping is supported.
If this feature is not enabled, the <span class="code">depthClampEnable</span> member of the
<span class="code">VkPipelineRasterizationStateCreateInfo</span> structure  must  be set to
<span class="code">VK_FALSE</span>.
Otherwise, setting <span class="code">depthClampEnable</span> to <span class="code">VK_TRUE</span> will enable
depth clamping. </li><li><span class="code">depthBiasClamp</span> indicates
whether depth bias clamping is supported.
If this feature is not enabled, the <span class="code">depthBiasClamp</span> member of the
<span class="code">VkPipelineRasterizationStateCreateInfo</span> structure  must  be set to
0.0 unless the <span class="code">VK_DYNAMIC_STATE_DEPTH_BIAS</span> dynamic state is
enabled, and the <span class="code">depthBiasClamp</span> parameter to
<span class="code">vkCmdSetDepthBias</span> must  be set to 0.0. </li><li><span class="code">fillModeNonSolid</span> indicates
whether point and wireframe fill modes are supported.
If this feature is not enabled, the <span class="code">VK_POLYGON_MODE_POINT</span> and
<span class="code">VK_POLYGON_MODE_LINE</span> enum values  must  not be used. </li><li><span class="code">depthBounds</span> indicates whether
depth bounds tests are supported.
If this feature is not enabled, the <span class="code">depthBoundsTestEnable</span> member
of the <span class="code">VkPipelineDepthStencilStateCreateInfo</span> structure  must  be
set to <span class="code">VK_FALSE</span>.
When <span class="code">depthBoundsTestEnable</span> is set to <span class="code">VK_FALSE</span>, the
<span class="code">minDepthBounds</span> and <span class="code">maxDepthBounds</span> members of the
<span class="code">VkPipelineDepthStencilStateCreateInfo</span> structure are ignored. </li><li><span class="code">wideLines</span> indicates whether lines
with width other than 1.0 are supported.
If this feature is not enabled, the <span class="code">lineWidth</span> member of the
<span class="code">VkPipelineRasterizationStateCreateInfo</span> structure  must  be set to
1.0 unless the <span class="code">VK_DYNAMIC_STATE_LINE_WIDTH</span> dynamic state is
enabled, and the <span class="code">lineWidth</span> parameter to <span class="code">vkCmdSetLineWidth</span> must  be set to 1.0.
When this feature is supported, the range and granularity of supported
line widths are indicated by the <span class="code">lineWidthRange</span> and
<span class="code">lineWidthGranularity</span> members of the <span class="code">VkPhysicalDeviceLimits</span>
structure, respectively. </li><li><span class="code">largePoints</span> indicates whether
points with size greater than 1.0 are supported.
If this feature is not enabled, only a point size of 1.0 written by a
shader is supported.
The range and granularity of supported point sizes are indicated by the
<span class="code">pointSizeRange</span> and <span class="code">pointSizeGranularity</span> members of the
<span class="code">VkPhysicalDeviceLimits</span> structure, respectively. </li><li><span class="code">alphaToOne</span> indicates whether the
implementation is able to replace the alpha value of the color fragment
output from the fragment shader with the maximum representable alpha
value for fixed-point colors or 1.0 for floating-point colors.
If this feature is not enabled, then the <span class="code">alphaToOneEnable</span> member
of the <span class="code">VkPipelineMultisampleStateCreateInfo</span> structure  must  be set
to <span class="code">VK_FALSE</span>.
Otherwise setting <span class="code">alphaToOneEnable</span> to <span class="code">VK_TRUE</span> will enable
alpha-to-one behavior. </li><li><span class="code">multiViewport</span> indicates
whether more than one viewport is supported.
If this feature is not enabled, the <span class="code">viewportCount</span> and
<span class="code">scissorCount</span> members of the
<span class="code">VkPipelineViewportStateCreateInfo</span> structure  must  be set to 1.
Similarly, the <span class="code">viewportCount</span> parameter to the
<span class="code">vkCmdSetViewport</span> command and the <span class="code">scissorCount</span> parameter to
the <span class="code">vkCmdSetScissor</span> command  must  be 1, and the
<span class="code">firstViewport</span> parameter to the <span class="code">vkCmdSetViewport</span> command and
the <span class="code">firstScissor</span> parameter to the <span class="code">vkCmdSetScissor</span> command
 must  be 0. </li><li><span class="code">samplerAnisotropy</span>
indicates whether anisotropic filtering is supported.
If this feature is not enabled, the <span class="code">maxAnisotropy</span> member of the
<span class="code">VkSamplerCreateInfo</span> structure  must  be 1.0. </li><li><span class="code">textureCompressionETC2</span> indicates whether all of the ETC2 and EAC
compressed texture formats are supported.
If this feature is enabled, then the
<span class="code">VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT</span>,
<span class="code">VK_FORMAT_FEATURE_BLIT_SRC_BIT</span> and
<span class="code">VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</span> features  must 
be supported in <span class="code">optimalTilingFeatures</span> for the following formats:  <ul><li><span class="code">VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_EAC_R11_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_EAC_R11_SNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_EAC_R11G11_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_EAC_R11G11_SNORM_BLOCK</span></li></ul><a href="T_vkGetPhysicalDeviceFormatProperties.htm">vkGetPhysicalDeviceFormatProperties</a> and
<a href="T_vkGetPhysicalDeviceImageFormatProperties.htm">vkGetPhysicalDeviceImageFormatProperties</a> can  be used to check for
additional supported properties of individual formats.  </li><li><span class="code">textureCompressionASTC_LDR</span> indicates whether all of the ASTC LDR
compressed texture formats are supported.
If this feature is enabled, then the
<span class="code">VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT</span>,
<span class="code">VK_FORMAT_FEATURE_BLIT_SRC_BIT</span> and
<span class="code">VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</span> features  must 
be supported in <span class="code">optimalTilingFeatures</span> for the following formats:  <ul><li><span class="code">VK_FORMAT_ASTC_4x4_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_4x4_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_5x4_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_5x4_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_5x5_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_5x5_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_6x5_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_6x5_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_6x6_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_6x6_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_8x5_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_8x5_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_8x6_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_8x6_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_8x8_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_8x8_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_10x5_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_10x5_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_10x6_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_10x6_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_10x8_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_10x8_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_10x10_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_10x10_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_12x10_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_12x10_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_12x12_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_ASTC_12x12_SRGB_BLOCK</span></li></ul><a href="T_vkGetPhysicalDeviceFormatProperties.htm">vkGetPhysicalDeviceFormatProperties</a> and
<a href="T_vkGetPhysicalDeviceImageFormatProperties.htm">vkGetPhysicalDeviceImageFormatProperties</a> can  be used to check for
additional supported properties of individual formats.  </li><li><span class="code">textureCompressionBC</span>
indicates whether all of the BC compressed texture formats are
supported.
If this feature is enabled, then the
<span class="code">VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT</span>,
<span class="code">VK_FORMAT_FEATURE_BLIT_SRC_BIT</span> and
<span class="code">VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</span> features  must 
be supported in <span class="code">optimalTilingFeatures</span> for the following formats:  <ul><li><span class="code">VK_FORMAT_BC1_RGB_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC1_RGB_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_BC1_RGBA_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC1_RGBA_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_BC2_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC2_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_BC3_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC3_SRGB_BLOCK</span></li><li><span class="code">VK_FORMAT_BC4_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC4_SNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC5_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC5_SNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC6H_UFLOAT_BLOCK</span></li><li><span class="code">VK_FORMAT_BC6H_SFLOAT_BLOCK</span></li><li><span class="code">VK_FORMAT_BC7_UNORM_BLOCK</span></li><li><span class="code">VK_FORMAT_BC7_SRGB_BLOCK</span></li></ul><a href="T_vkGetPhysicalDeviceFormatProperties.htm">vkGetPhysicalDeviceFormatProperties</a> and
<a href="T_vkGetPhysicalDeviceImageFormatProperties.htm">vkGetPhysicalDeviceImageFormatProperties</a> can  be used to check for
additional supported properties of individual formats.  </li><li><span class="code">occlusionQueryPrecise</span>
indicates whether occlusion queries returning actual sample counts are
supported.
Occlusion queries are created in a <span class="code">VkQueryPool</span> by specifying the
<span class="code">queryType</span> of <span class="code">VK_QUERY_TYPE_OCCLUSION</span> in the
<span class="code">VkQueryPoolCreateInfo</span> structure which is passed to
<span class="code">vkCreateQueryPool</span>.
If this feature is enabled, queries of this type  can  enable
<span class="code">VK_QUERY_CONTROL_PRECISE_BIT</span> in the <span class="code">flags</span> parameter to
<span class="code">vkCmdBeginQuery</span>.
If this feature is not supported, the implementation supports only
boolean occlusion queries.
When any samples are passed, boolean queries will return a non-zero
result value, otherwise a result value of zero is returned.
When this feature is enabled and <span class="code">VK_QUERY_CONTROL_PRECISE_BIT</span> is
set, occlusion queries will report the actual number of samples passed. </li><li><span class="code">pipelineStatisticsQuery</span> indicates whether the pipeline statistics
queries are supported.
If this feature is not enabled, queries of type
<span class="code">VK_QUERY_TYPE_PIPELINE_STATISTICS</span> cannot  be created, and none of
the <a href="T_VkQueryPipelineStatisticFlags.htm">VkQueryPipelineStatisticFlags</a> bits  can  be set in the
<span class="code">pipelineStatistics</span> member of the <span class="code">VkQueryPoolCreateInfo</span>
structure. </li><li><span class="code">vertexPipelineStoresAndAtomics</span> indicates whether storage buffers
and images support stores and atomic operations in the vertex,
tessellation, and geometry shader stages.
If this feature is not enabled, all storage image, storage texel
buffers, and storage buffer variables used by these stages in shader
modules  must  be decorated with the <span class="code">NonWriteable</span> decoration (or the
<span class="code">readonly</span> memory qualifier in GLSL). </li><li><span class="code">fragmentStoresAndAtomics</span> indicates whether storage buffers and
images support stores and atomic operations in the fragment shader
stage.
If this feature is not enabled, all storage image, storage texel
buffers, and storage buffer variables used by the fragment stage in
shader modules  must  be decorated with the <span class="code">NonWriteable</span> decoration
(or the <span class="code">readonly</span> memory qualifier in GLSL). </li><li><span class="code">shaderTessellationAndGeometryPointSize</span> indicates whether the
<span class="code">PointSize</span> built-in decoration is available in the tessellation
control, tessellation evaluation, and geometry shader stages.
If this feature is not enabled, members decorated with the
<span class="code">PointSize</span> built-in decoration  must  not be read from or written to
and all points written from a tessellation or geometry shader will have
a size of 1.0.
This also indicates whether shader modules  can  declare the
<span class="code">TessellationPointSize</span> capability for tessellation control and
evaluation shaders, or if the shader modules  can  declare the
<span class="code">GeometryPointSize</span> capability for geometry shaders.
An implementation supporting this feature  must  also support one or both
of the <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader"><span class="code">tessellationShader</span></a>
or <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader"><span class="code">geometryShader</span></a> features. </li><li><span class="code">shaderImageGatherExtended</span> indicates whether the extended set of
image gather instructions are available in shader code.
If this feature is not enabled, the <span class="code">OpImage</span>*<span class="code">Gather</span>
instructions do not support the <span class="code">Offset</span> and <span class="code">ConstOffsets</span>
operands.
This also indicates whether shader modules  can  declare the
<span class="code">ImageGatherExtended</span> capability. </li><li><span class="code">shaderStorageImageExtendedFormats</span> indicates whether the extended
storage image formats are available in shader code.
If this feature is not enabled, the formats requiring the
<span class="code">StorageImageExtendedFormats</span> capability are not supported for
storage images.
This also indicates whether shader modules  can  declare the
<span class="code">StorageImageExtendedFormats</span> capability. </li><li><span class="code">shaderStorageImageMultisample</span> indicates whether multisampled
storage images are supported.
If this feature is not enabled, images that are created with a
<span class="code">usage</span> that includes <span class="code">VK_IMAGE_USAGE_STORAGE_BIT</span> must  be
created with <span class="code">samples</span> equal to <span class="code">VK_SAMPLE_COUNT_1_BIT</span>.
This also indicates whether shader modules  can  declare the
<span class="code">StorageImageMultisample</span> capability. </li><li><span class="code">shaderStorageImageReadWithoutFormat</span> indicates whether storage
images require a format qualifier to be specified when reading from
storage images.
If this feature is not enabled, the <span class="code">OpImageRead</span> instruction  must 
not have an <span class="code">OpTypeImage</span> of <span class="code">Unknown</span>.
This also indicates whether shader modules  can  declare the
<span class="code">StorageImageReadWithoutFormat</span> capability. </li><li><span class="code">shaderStorageImageWriteWithoutFormat</span> indicates whether storage
images require a format qualifier to be specified when writing to
storage images.
If this feature is not enabled, the <span class="code">OpImageWrite</span> instruction  must 
not have an <span class="code">OpTypeImage</span> of <span class="code">Unknown</span>.
This also indicates whether shader modules  can  declare the
<span class="code">StorageImageWriteWithoutFormat</span> capability. </li><li><span class="code">shaderUniformBufferArrayDynamicIndexing</span> indicates whether arrays
of uniform buffers  can  be indexed by  dynamically uniform  integer
expressions in shader code.
If this feature is not enabled, resources with a descriptor type of
<span class="code">VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</span> or
<span class="code">VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</span> must  be indexed only by
constant integral expressions when aggregated into arrays in shader
code.
This also indicates whether shader modules  can  declare the
<span class="code">UniformBufferArrayDynamicIndexing</span> capability. </li><li><span class="code">shaderSampledImageArrayDynamicIndexing</span> indicates whether arrays of
samplers or sampled images  can  be indexed by dynamically uniform
integer expressions in shader code.
If this feature is not enabled, resources with a descriptor type of
<span class="code">VK_DESCRIPTOR_TYPE_SAMPLER</span>,
<span class="code">VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</span>, or
<span class="code">VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</span> must  be indexed only by constant
integral expressions when aggregated into arrays in shader code.
This also indicates whether shader modules  can  declare the
<span class="code">SampledImageArrayDynamicIndexing</span> capability. </li><li><span class="code">shaderStorageBufferArrayDynamicIndexing</span> indicates whether arrays
of storage buffers  can  be indexed by dynamically uniform integer
expressions in shader code.
If this feature is not enabled, resources with a descriptor type of
<span class="code">VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</span> or
<span class="code">VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</span> must  be indexed only by
constant integral expressions when aggregated into arrays in shader
code.
This also indicates whether shader modules  can  declare the
<span class="code">StorageBufferArrayDynamicIndexing</span> capability. </li><li><span class="code">shaderStorageImageArrayDynamicIndexing</span> indicates whether arrays of
storage images  can  be indexed by dynamically uniform integer
expressions in shader code.
If this feature is not enabled, resources with a descriptor type of
<span class="code">VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</span> must  be indexed only by constant
integral expressions when aggregated into arrays in shader code.
This also indicates whether shader modules  can  declare the
<span class="code">StorageImageArrayDynamicIndexing</span> capability. </li><li><span class="code">shaderClipDistance</span>
indicates whether clip distances are supported in shader code.
If this feature is not enabled, any members decorated with the
<span class="code">ClipDistance</span> built-in decoration  must  not be read from or written
to in shader modules.
This also indicates whether shader modules  can  declare the
<span class="code">ClipDistance</span> capability. </li><li><span class="code">shaderCullDistance</span>
indicates whether cull distances are supported in shader code.
If this feature is not enabled, any members decorated with the
<span class="code">CullDistance</span> built-in decoration  must  not be read from or written
to in shader modules.
This also indicates whether shader modules  can  declare the
<span class="code">CullDistance</span> capability. </li><li><span class="code">shaderFloat64</span> indicates
whether 64-bit floats (doubles) are supported in shader code.
If this feature is not enabled, 64-bit floating-point types  must  not be
used in shader code.
This also indicates whether shader modules  can  declare the <span class="code">Float64</span>
capability. </li><li><span class="code">shaderInt64</span> indicates whether
64-bit integers (signed and unsigned) are supported in shader code.
If this feature is not enabled, 64-bit integer types  must  not be used
in shader code.
This also indicates whether shader modules  can  declare the <span class="code">Int64</span>
capability. </li><li><span class="code">shaderInt16</span> indicates whether
16-bit integers (signed and unsigned) are supported in shader code.
If this feature is not enabled, 16-bit integer types  must  not be used
in shader code.
This also indicates whether shader modules  can  declare the <span class="code">Int16</span>
capability. </li><li><span class="code">shaderResourceResidency</span> indicates whether image operations that
return resource residency information are supported in shader code.
If this feature is not enabled, the <span class="code">OpImageSparse</span>* instructions
 must  not be used in shader code.
This also indicates whether shader modules  can  declare the
<span class="code">SparseResidency</span> capability.
The feature requires at least one of the <span class="code">sparseResidency</span>* features
to be supported. </li><li><span class="code">shaderResourceMinLod</span>
indicates whether image operations that specify the minimum resource
level-of-detail (LOD) are supported in shader code.
If this feature is not enabled, the <span class="code">MinLod</span> image operand  must  not
be used in shader code.
This also indicates whether shader modules  can  declare the <span class="code">MinLod</span>
capability. </li><li><span class="code">sparseBinding</span> indicates
whether resource memory  can  be managed at opaque sparse block level
instead of at the object level.
If this feature is not enabled, resource memory  must  be bound only on a
per-object basis using the <span class="code">vkBindBufferMemory</span> and
<span class="code">vkBindImageMemory</span> commands.
In this case, buffers and images  must  not be created with
<span class="code">VK_BUFFER_CREATE_SPARSE_BINDING_BIT</span> and
<span class="code">VK_IMAGE_CREATE_SPARSE_BINDING_BIT</span> set in the <span class="code">flags</span> member
of the <span class="code">VkBufferCreateInfo</span> and <span class="code">VkImageCreateInfo</span> structures,
respectively.
Otherwise resource memory  can  be managed as described in
<a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures">Sparse Resource Features</a>. </li><li><span class="code">sparseResidencyBuffer</span>
indicates whether the device  can  access partially resident buffers.
If this feature is not enabled, buffers  must  not be created with
<span class="code">VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</span> set in the <span class="code">flags</span>
member of the <span class="code">VkBufferCreateInfo</span> structure. </li><li><span class="code">sparseResidencyImage2D</span> indicates whether the device  can  access
partially resident 2D images with 1 sample per pixel.
If this feature is not enabled, images with an <span class="code">imageType</span> of
<span class="code">VK_IMAGE_TYPE_2D</span> and <span class="code">samples</span> set to
<span class="code">VK_SAMPLE_COUNT_1_BIT</span> must  not be created with
<span class="code">VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</span> set in the <span class="code">flags</span> member
of the <span class="code">VkImageCreateInfo</span> structure. </li><li><span class="code">sparseResidencyImage3D</span> indicates whether the device  can  access
partially resident 3D images.
If this feature is not enabled, images with an <span class="code">imageType</span> of
<span class="code">VK_IMAGE_TYPE_3D</span> must  not be created with
<span class="code">VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</span> set in the <span class="code">flags</span> member
of the <span class="code">VkImageCreateInfo</span> structure. </li><li><span class="code">sparseResidency2Samples</span> indicates whether the physical device  can 
access partially resident 2D images with 2 samples per pixel.
If this feature is not enabled, images with an <span class="code">imageType</span> of
<span class="code">VK_IMAGE_TYPE_2D</span> and <span class="code">samples</span> set to
<span class="code">VK_SAMPLE_COUNT_2_BIT</span> must  not be created with
<span class="code">VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</span> set in the <span class="code">flags</span> member
of the <span class="code">VkImageCreateInfo</span> structure. </li><li><span class="code">sparseResidency4Samples</span> indicates whether the physical device  can 
access partially resident 2D images with 4 samples per pixel.
If this feature is not enabled, images with an <span class="code">imageType</span> of
<span class="code">VK_IMAGE_TYPE_2D</span> and <span class="code">samples</span> set to
<span class="code">VK_SAMPLE_COUNT_4_BIT</span> must  not be created with
<span class="code">VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</span> set in the <span class="code">flags</span> member
of the <span class="code">VkImageCreateInfo</span> structure. </li><li><span class="code">sparseResidency8Samples</span> indicates whether the physical device  can 
access partially resident 2D images with 8 samples per pixel.
If this feature is not enabled, images with an <span class="code">imageType</span> of
<span class="code">VK_IMAGE_TYPE_2D</span> and <span class="code">samples</span> set to
<span class="code">VK_SAMPLE_COUNT_8_BIT</span> must  not be created with
<span class="code">VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</span> set in the <span class="code">flags</span> member
of the <span class="code">VkImageCreateInfo</span> structure. </li><li><span class="code">sparseResidency16Samples</span> indicates whether the physical device
 can  access partially resident 2D images with 16 samples per pixel.
If this feature is not enabled, images with an <span class="code">imageType</span> of
<span class="code">VK_IMAGE_TYPE_2D</span> and <span class="code">samples</span> set to
<span class="code">VK_SAMPLE_COUNT_16_BIT</span> must  not be created with
<span class="code">VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</span> set in the <span class="code">flags</span> member
of the <span class="code">VkImageCreateInfo</span> structure. </li><li><span class="code">sparseResidencyAliased</span> indicates whether the physical device  can 
correctly access data aliased into multiple locations.
If this feature is not enabled, the
<span class="code">VK_BUFFER_CREATE_SPARSE_ALIASED_BIT</span> and
<span class="code">VK_IMAGE_CREATE_SPARSE_ALIASED_BIT</span> enum values  must  not be used
in <span class="code">flags</span> members of the <span class="code">VkBufferCreateInfo</span> and
<span class="code">VkImageCreateInfo</span> structures, respectively. </li><li><span class="code">variableMultisampleRate</span> indicates whether all pipelines that will
be bound to a command buffer during a subpass with no attachments  must 
have the same value for
<span class="code">VkPipelineMultisampleStateCreateInfo</span>::<span class="code">rasterizationSamples</span>.
If set to <span class="code">VK_TRUE</span>, the implementation supports variable
multisample rates in a subpass with no attachments.
If set to <span class="code">VK_FALSE</span>, then all pipelines bound in such a subpass
 must  have the same multisample rate.
This has no effect in situations where a subpass uses any attachments. </li><li><span class="code">inheritedQueries</span> indicates
whether a secondary command buffer  may  be executed while a query is
active. </li></ul>   The <span class="code">VkPhysicalDeviceFeatures</span> structure is defined as:    <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span> <span class="highlight-keyword">typedef</span> <span class="highlight-keyword">struct</span> VkPhysicalDeviceFeatures {
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    robustBufferAccess;
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    fullDrawIndexUint32;
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    imageCubeArray;
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    independentBlend;
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    geometryShader;
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    tessellationShader;
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sampleRateShading;
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    dualSrcBlend;
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    logicOp;
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    multiDrawIndirect;
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    drawIndirectFirstInstance;
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    depthClamp;
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    depthBiasClamp;
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    fillModeNonSolid;
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    depthBounds;
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    wideLines;
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    largePoints;
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    alphaToOne;
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    multiViewport;
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    samplerAnisotropy;
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    textureCompressionETC2;
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    textureCompressionASTC_LDR;
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    textureCompressionBC;
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    occlusionQueryPrecise;
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    pipelineStatisticsQuery;
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    vertexPipelineStoresAndAtomics;
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    fragmentStoresAndAtomics;
<span class="highlight-lineno">29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderTessellationAndGeometryPointSize;
<span class="highlight-lineno">30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderImageGatherExtended;
<span class="highlight-lineno">31</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderStorageImageExtendedFormats;
<span class="highlight-lineno">32</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderStorageImageMultisample;
<span class="highlight-lineno">33</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderStorageImageReadWithoutFormat;
<span class="highlight-lineno">34</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderStorageImageWriteWithoutFormat;
<span class="highlight-lineno">35</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderUniformBufferArrayDynamicIndexing;
<span class="highlight-lineno">36</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderSampledImageArrayDynamicIndexing;
<span class="highlight-lineno">37</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderStorageBufferArrayDynamicIndexing;
<span class="highlight-lineno">38</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderStorageImageArrayDynamicIndexing;
<span class="highlight-lineno">39</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderClipDistance;
<span class="highlight-lineno">40</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderCullDistance;
<span class="highlight-lineno">41</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderFloat64;
<span class="highlight-lineno">42</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderInt64;
<span class="highlight-lineno">43</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderInt16;
<span class="highlight-lineno">44</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderResourceResidency;
<span class="highlight-lineno">45</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    shaderResourceMinLod;
<span class="highlight-lineno">46</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseBinding;
<span class="highlight-lineno">47</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseResidencyBuffer;
<span class="highlight-lineno">48</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseResidencyImage2D;
<span class="highlight-lineno">49</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseResidencyImage3D;
<span class="highlight-lineno">50</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseResidency2Samples;
<span class="highlight-lineno">51</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseResidency4Samples;
<span class="highlight-lineno">52</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseResidency8Samples;
<span class="highlight-lineno">53</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseResidency16Samples;
<span class="highlight-lineno">54</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    sparseResidencyAliased;
<span class="highlight-lineno">55</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    variableMultisampleRate;
<span class="highlight-lineno">56</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkBool32    inheritedQueries;
<span class="highlight-lineno">57</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>} VkPhysicalDeviceFeatures;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAACBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_.htm">(Default Namespace) Namespace</a></div><div class="seeAlsoStyle"><a href="T_IVkDeviceCreateInfo.htm">(Default Namespace)<span id="LST6619969D_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6619969D_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkDeviceCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_vkGetPhysicalDeviceFeatures.htm">(Default Namespace)<span id="LST6619969D_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6619969D_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>vkGetPhysicalDeviceFeatures</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>