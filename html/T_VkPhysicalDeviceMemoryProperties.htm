<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>VkPhysicalDeviceMemoryProperties Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="VkPhysicalDeviceMemoryProperties class" /><meta name="System.Keywords" content="VkPhysicalDeviceMemoryProperties class, about VkPhysicalDeviceMemoryProperties class" /><meta name="Microsoft.Help.F1" content="VkPhysicalDeviceMemoryProperties" /><meta name="Microsoft.Help.Id" content="T:VkPhysicalDeviceMemoryProperties" /><meta name="Description" content="Structure specifying physical device memory properties" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="defaultNamespace" /><meta name="file" content="T_VkPhysicalDeviceMemoryProperties" /><meta name="guid" content="T_VkPhysicalDeviceMemoryProperties" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vulkan Bindings for .NET Standard<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="Vulkan Bindings for .NET Standard" tocid="roottoc">Vulkan Bindings for .NET Standard</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="Namespaces" tocid="R_Project_Documentation">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_.htm" title="Global" tocid="N_">Global</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_VkPhysicalDeviceMemoryProperties.htm" title="VkPhysicalDeviceMemoryProperties Class" tocid="T_VkPhysicalDeviceMemoryProperties">VkPhysicalDeviceMemoryProperties Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Fields_T_VkPhysicalDeviceMemoryProperties.htm" title="VkPhysicalDeviceMemoryProperties Fields" tocid="Fields_T_VkPhysicalDeviceMemoryProperties">VkPhysicalDeviceMemoryProperties Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><picture><source srcset="../icons/Vulkan_RGB_Dec16.svg" /><img alt="Vulkan" height="100" src="../icons/Vulkan_100px_Dec16.png" /></picture></td><td class="titleColumn"><h1>VkPhysicalDeviceMemoryProperties Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Structure specifying physical device memory properties</div><div class="collapsibleAreaRegion"><span id="ID0RBToggle" class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0">Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">System<span id="LSTF081731E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF081731E_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ValueType</a><br />  <span class="selflink">(Default Namespace)<span id="LSTF081731E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF081731E_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkPhysicalDeviceMemoryProperties</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_.htm">(Default Namespace)</a><br />
    <strong>Assembly:</strong>
   Vulkan (in Vulkan.dll) Version: 1.0.53<div class="collapsibleAreaRegion"><span id="ID2RBToggle" class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0">Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<a href="http://msdn2.microsoft.com/en-us/library/bcfsa90a" target="_blank">SerializableAttribute</a>]
<span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">VkPhysicalDeviceMemoryProperties</span> : <a href="http://msdn2.microsoft.com/en-us/library/aey3s293" target="_blank">ValueType</a></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">VkPhysicalDeviceMemoryProperties</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span id="ID3RBToggle" class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0">Fields</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><picture class="member-icon"><source srcset="../icons/FieldPublic.svg" /><img src="../icons/FieldPublic.png" alt="Public field" title="Public field" /></picture></td><td><a href="F_VkPhysicalDeviceMemoryProperties_memoryHeapCount.htm">memoryHeapCount</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><picture class="member-icon"><source srcset="../icons/FieldPublic.svg" /><img src="../icons/FieldPublic.png" alt="Public field" title="Public field" /></picture></td><td><a href="F_VkPhysicalDeviceMemoryProperties_memoryHeaps.htm">memoryHeaps</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><picture class="member-icon"><source srcset="../icons/FieldPublic.svg" /><img src="../icons/FieldPublic.png" alt="Public field" title="Public field" /></picture></td><td><a href="F_VkPhysicalDeviceMemoryProperties_memoryTypeCount.htm">memoryTypeCount</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><picture class="member-icon"><source srcset="../icons/FieldPublic.svg" /><img src="../icons/FieldPublic.png" alt="Public field" title="Public field" /></picture></td><td><a href="F_VkPhysicalDeviceMemoryProperties_memoryTypes.htm">memoryTypes</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span id="ID4RBToggle" class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0">Remarks</span></div><div id="ID4RBSection" class="collapsibleSection">

The <span class="code">VkPhysicalDeviceMemoryProperties</span> structure describes a number of
 memory heaps as well as a number of  memory types that  can be used to
access memory allocated in those heaps.
Each heap describes a memory resource of a particular size, and each memory
type describes a set of memory properties (e.g. host cached vs uncached)
that  can be used with a given memory heap.
Allocations using a particular memory type will consume resources from the
heap indicated by that memory type&amp;#8217;s heap index.
More than one memory type  may share each heap, and the heaps and memory
types provide a mechanism to advertise an accurate size of the physical
memory resources while allowing the memory to be used with a variety of
different properties.


The number of memory heaps is given by <span class="code">memoryHeapCount</span> and is less
than or equal to <span class="code">VK_MAX_MEMORY_HEAPS</span>.
Each heap is described by an element of the <span class="code">memoryHeaps</span> array, as a
<span class="code">VkMemoryHeap</span> structure.
The number of memory types available across all memory heaps is given by
<span class="code">memoryTypeCount</span> and is less than or equal to
<span class="code">VK_MAX_MEMORY_TYPES</span>.
Each memory type is described by an element of the <span class="code">memoryTypes</span> array,
as a <span class="code">VkMemoryType</span> structure.


At least one heap  must include <span class="code">VK_MEMORY_HEAP_DEVICE_LOCAL_BIT</span> in
<a href="T_VkMemoryHeap.htm">VkMemoryHeap</a>::<span class="code">flags</span>.
If there are multiple heaps that all have similar performance
characteristics, they  may all include
<span class="code">VK_MEMORY_HEAP_DEVICE_LOCAL_BIT</span>.
In a unified memory architecture (UMA) system, there is often only a single
memory heap which is considered to be equally &amp;#8220;local&amp;#8221; to the host and to
the device, and such an implementation  must advertise the heap as
device-local.


Each memory type returned by <a href="T_vkGetPhysicalDeviceMemoryProperties.htm">vkGetPhysicalDeviceMemoryProperties</a> must
have its <span class="code">propertyFlags</span> set to one of the following values:

<ul><li>
0
</li><li><span class="code">VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_COHERENT_BIT</span></li><li><span class="code">VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_CACHED_BIT</span></li><li><span class="code">VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_CACHED_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_COHERENT_BIT</span></li><li><span class="code">VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT</span></li><li><span class="code">VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_COHERENT_BIT</span></li><li><span class="code">VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_CACHED_BIT</span></li><li><span class="code">VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_CACHED_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_HOST_COHERENT_BIT</span></li><li><span class="code">VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT</span> |
<span class="code">VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT</span></li></ul>

There  must be at least one memory type with both the
<span class="code">VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT</span> and
<span class="code">VK_MEMORY_PROPERTY_HOST_COHERENT_BIT</span> bits set in its
<span class="code">propertyFlags</span>.
There  must be at least one memory type with the
<span class="code">VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT</span> bit set in its
<span class="code">propertyFlags</span>.


The memory types are sorted according to a preorder which serves to aid in
easily selecting an appropriate memory type.
Given two memory types X and Y, the preorder defines  X ≤ Y if:

<ul><li>
the memory property bits set for X are a strict subset of the memory
property bits set for Y.
Or,
</li><li>
the memory property bits set for X are the same as the memory property
bits set for Y, and X uses a memory heap with greater or equal
performance (as determined in an implementation-specific manner).
</li></ul>

Memory types are ordered in the list such that X is assigned a lesser
<span class="code">memoryTypeIndex</span> than Y if  (X ≤ Y) ∧ ¬ (Y ≤ X)
according to the preorder.
Note that the list of all allowed memory property flag combinations above
satisfies this preorder, but other orders would as well.
The goal of this ordering is to enable applications to use a simple search
loop in selecting the proper memory type, along the lines of:


<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAIDBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAIDBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAIDBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span> <span class="highlight-comment">// Find a memory type in "memoryTypeBits" that includes all of "properties"</span>
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>int32_t FindProperties(uint32_t memoryTypeBits, VkMemoryPropertyFlags properties)
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">for</span> (int32_t i = <span class="highlight-number">0</span>; i &lt; memoryTypeCount; ++i)
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">if</span> ((memoryTypeBits &amp; (<span class="highlight-number">1</span> &lt;&lt; i)) &amp;&amp;
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            ((memoryTypes[i].propertyFlags &amp; properties) == properties))
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>            <span class="highlight-keyword">return</span> i;
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-number">-1</span>;
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Try to find an optimal memory type, or if it does not exist</span>
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// find any compatible memory type</span>
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>VkMemoryRequirements memoryRequirements;
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>vkGetImageMemoryRequirements(device, image, &amp;memoryRequirements);
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>int32_t memoryType = FindProperties(memoryRequirements.memoryTypeBits, optimalProperties);
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">if</span> (memoryType == <span class="highlight-number">-1</span>)
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    memoryType = FindProperties(memoryRequirements.memoryTypeBits, requiredProperties);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAIDBA");</script>


The loop will find the first supported memory type that has all bits
requested in <span class="code">properties</span> set.
If there is no exact match, it will find a closest match (i.e. a memory type
with the fewest additional bits set), which has some additional bits set but
which are not detrimental to the behaviors requested by <span class="code">properties</span>.
The application  can first search for the optimal properties, e.g. a memory
type that is device-local or supports coherent cached accesses, as
appropriate for the intended usage, and if such a memory type is not present
 can fallback to searching for a less optimal but guaranteed set of
properties such as "0" or "host-visible and coherent".



The <span class="code">VkPhysicalDeviceMemoryProperties</span> structure is defined as:


<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAADBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAADBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAADBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno">1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span> <span class="highlight-keyword">typedef</span> <span class="highlight-keyword">struct</span> VkPhysicalDeviceMemoryProperties {
<span class="highlight-lineno">2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    uint32_t        memoryTypeCount;
<span class="highlight-lineno">3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkMemoryType    memoryTypes[VK_MAX_MEMORY_TYPES];
<span class="highlight-lineno">4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    uint32_t        memoryHeapCount;
<span class="highlight-lineno">5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkMemoryHeap    memoryHeaps[VK_MAX_MEMORY_HEAPS];
<span class="highlight-lineno">6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>} VkPhysicalDeviceMemoryProperties;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAADBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span id="ID5RBToggle" class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0">See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_.htm">(Default Namespace) Namespace</a></div><div class="seeAlsoStyle"><a href="T_VkMemoryHeap.htm">(Default Namespace)<span id="LSTF081731E_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF081731E_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkMemoryHeap</a></div><div class="seeAlsoStyle"><a href="T_VkMemoryType.htm">(Default Namespace)<span id="LSTF081731E_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF081731E_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkMemoryType</a></div><div class="seeAlsoStyle"><a href="T_vkGetPhysicalDeviceMemoryProperties.htm">(Default Namespace)<span id="LSTF081731E_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF081731E_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>vkGetPhysicalDeviceMemoryProperties</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>