<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IVkGraphicsPipelineCreateInfo Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IVkGraphicsPipelineCreateInfo interface" /><meta name="System.Keywords" content="IVkGraphicsPipelineCreateInfo interface, about IVkGraphicsPipelineCreateInfo interface" /><meta name="Microsoft.Help.F1" content="IVkGraphicsPipelineCreateInfo" /><meta name="Microsoft.Help.Id" content="T:IVkGraphicsPipelineCreateInfo" /><meta name="Description" content="Structure specifying parameters of a newly created graphics pipeline" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="default_namespace" /><meta name="file" content="T_IVkGraphicsPipelineCreateInfo" /><meta name="guid" content="T_IVkGraphicsPipelineCreateInfo" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vulkan Bindings for .NET Standard<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="Vulkan Bindings for .NET Standard" tocid="roottoc">Vulkan Bindings for .NET Standard</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Documentation.htm" title="Generated .NET Standard Vulkan Bindings" tocid="R_Project_Documentation">Generated .NET Standard Vulkan Bindings</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_.htm" title="( Default Namespace )" tocid="N_">( Default Namespace )</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_IVkGraphicsPipelineCreateInfo.htm" title="IVkGraphicsPipelineCreateInfo Interface" tocid="T_IVkGraphicsPipelineCreateInfo">IVkGraphicsPipelineCreateInfo Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_IVkGraphicsPipelineCreateInfo.htm" title="IVkGraphicsPipelineCreateInfo Properties" tocid="Properties_T_IVkGraphicsPipelineCreateInfo">IVkGraphicsPipelineCreateInfo Properties</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>IVkGraphicsPipelineCreateInfo Interface</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Structure specifying parameters of a newly created graphics pipeline</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_.htm">(Default Namespace)</a><br />
    <strong>Assembly:</strong>
   Vulkan (in Vulkan.dll) Version: 1.0.53<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IVkGraphicsPipelineCreateInfo</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script></div><p>The <span class="selflink">IVkGraphicsPipelineCreateInfo</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_basePipelineHandle.htm">basePipelineHandle</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_basePipelineIndex.htm">basePipelineIndex</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_flags.htm">flags</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_layout.htm">layout</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pColorBlendState.htm">pColorBlendState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pDepthStencilState.htm">pDepthStencilState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pDynamicState.htm">pDynamicState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pInputAssemblyState.htm">pInputAssemblyState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pMultisampleState.htm">pMultisampleState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pNext.htm">pNext</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pRasterizationState.htm">pRasterizationState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pStages.htm">pStages</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pTessellationState.htm">pTessellationState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pVertexInputState.htm">pVertexInputState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_pViewportState.htm">pViewportState</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_renderPass.htm">renderPass</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_stageCount.htm">stageCount</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_sType.htm">sType</a></td><td /></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_IVkGraphicsPipelineCreateInfo_subpass.htm">subpass</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection">

The parameters <span class="code">basePipelineHandle</span> and <span class="code">basePipelineIndex</span> are
described in more detail in <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives">Pipeline
Derivatives</a>.


<span class="code">pStages</span> points to an array of <a href="T_IVkPipelineShaderStageCreateInfo.htm">IVkPipelineShaderStageCreateInfo</a>
structures, which were previously described in <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-compute">Compute
Pipelines</a>.


<span class="code">pDynamicState</span> points to a structure of type
<span class="code">VkPipelineDynamicStateCreateInfo</span>.



Valid Usage
<ul><li>

If <span class="code">flags</span> contains the <span class="code">VK_PIPELINE_CREATE_DERIVATIVE_BIT</span>
flag, and <span class="code">basePipelineIndex</span> is -1, <span class="code">basePipelineHandle</span> must 
be a valid handle to a graphics <span class="code">VkPipeline</span></li><li>

If <span class="code">flags</span> contains the <span class="code">VK_PIPELINE_CREATE_DERIVATIVE_BIT</span>
flag, and <span class="code">basePipelineHandle</span> is <span class="nolink">[!:VK_NULL_HANDLE]</span>,
<span class="code">basePipelineIndex</span> must be a valid index into the calling
command&amp;#8217;s <span class="code">pCreateInfos</span> parameter
</li><li>

If <span class="code">flags</span> contains the <span class="code">VK_PIPELINE_CREATE_DERIVATIVE_BIT</span>
flag, and <span class="code">basePipelineIndex</span> is not -1, <span class="code">basePipelineHandle</span> must be <span class="nolink">[!:VK_NULL_HANDLE]</span></li><li>

If <span class="code">flags</span> contains the <span class="code">VK_PIPELINE_CREATE_DERIVATIVE_BIT</span>
flag, and <span class="code">basePipelineHandle</span> is not <span class="nolink">[!:VK_NULL_HANDLE]</span>,
<span class="code">basePipelineIndex</span> must be -1
</li><li>

The <span class="code">stage</span> member of each element of <span class="code">pStages</span> must be unique
</li><li>

The <span class="code">stage</span> member of one element of <span class="code">pStages</span> must be
<span class="code">VK_SHADER_STAGE_VERTEX_BIT</span></li><li>

The <span class="code">stage</span> member of any given element of <span class="code">pStages</span> must not
be <span class="code">VK_SHADER_STAGE_COMPUTE_BIT</span></li><li>

If <span class="code">pStages</span> includes a tessellation control shader stage, it must 
include a tessellation evaluation shader stage
</li><li>

If <span class="code">pStages</span> includes a tessellation evaluation shader stage, it
 must include a tessellation control shader stage
</li><li>

If <span class="code">pStages</span> includes a tessellation control shader stage and a
tessellation evaluation shader stage, <span class="code">pTessellationState</span> must be
a pointer to a valid <span class="code">VkPipelineTessellationStateCreateInfo</span>
structure
</li><li>

If <span class="code">pStages</span> includes tessellation shader stages, the shader code of
at least one stage must contain an <span class="code">OpExecutionMode</span> instruction
that specifies the type of subdivision in the pipeline
</li><li>

If <span class="code">pStages</span> includes tessellation shader stages, and the shader
code of both stages contain an <span class="code">OpExecutionMode</span> instruction that
specifies the type of subdivision in the pipeline, they must both
specify the same subdivision mode
</li><li>

If <span class="code">pStages</span> includes tessellation shader stages, the shader code of
at least one stage must contain an <span class="code">OpExecutionMode</span> instruction
that specifies the output patch size in the pipeline
</li><li>

If <span class="code">pStages</span> includes tessellation shader stages, and the shader
code of both contain an <span class="code">OpExecutionMode</span> instruction that specifies
the out patch size in the pipeline, they must both specify the same
patch size
</li><li>

If <span class="code">pStages</span> includes tessellation shader stages, the <span class="code">topology</span>
member of <span class="code">pInputAssembly</span> must be
<span class="code">VK_PRIMITIVE_TOPOLOGY_PATCH_LIST</span></li><li>

If the <span class="code">topology</span> member of <span class="code">pInputAssembly</span> is
<span class="code">VK_PRIMITIVE_TOPOLOGY_PATCH_LIST</span>, <span class="code">pStages</span> must include
tessellation shader stages
</li><li>

If <span class="code">pStages</span> includes a geometry shader stage, and does not include
any tessellation shader stages, its shader code must contain an
<span class="code">OpExecutionMode</span> instruction that specifies an input primitive type
that is <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution">compatible</a> with the primitive
topology specified in <span class="code">pInputAssembly</span></li><li>

If <span class="code">pStages</span> includes a geometry shader stage, and also includes
tessellation shader stages, its shader code must contain an
<span class="code">OpExecutionMode</span> instruction that specifies an input primitive type
that is <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution">compatible</a> with the primitive
topology that is output by the tessellation stages
</li><li>

If <span class="code">pStages</span> includes a fragment shader stage and a geometry shader
stage, and the fragment shader code reads from an input variable that is
decorated with <span class="code">PrimitiveID</span>, then the geometry shader code must 
write to a matching output variable, decorated with <span class="code">PrimitiveID</span>, in
all execution paths
</li><li>

If <span class="code">pStages</span> includes a fragment shader stage, its shader code must 
not read from any input attachment that is defined as
<span class="code">VK_ATTACHMENT_UNUSED</span> in <span class="code">subpass</span></li><li>

The shader code for the entry points identified by <span class="code">pStages</span>, and
the rest of the state identified by this structure must adhere to the
pipeline linking rules described in the <a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces">Shader Interfaces</a>
chapter
</li><li>

If rasterization is not disabled and <span class="code">subpass</span> uses a depth/stencil
attachment in <span class="code">renderpass</span> that has a layout of
<span class="code">VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</span> in the
<span class="code">VkAttachmentReference</span> defined by <span class="code">subpass</span>, the
<span class="code">depthWriteEnable</span> member of <span class="code">pDepthStencilState</span> must be
<span class="code">VK_FALSE</span></li><li>

If rasterization is not disabled and <span class="code">subpass</span> uses a depth/stencil
attachment in <span class="code">renderpass</span> that has a layout of
<span class="code">VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</span> in the
<span class="code">VkAttachmentReference</span> defined by <span class="code">subpass</span>, the <span class="code">failOp</span>,
<span class="code">passOp</span> and <span class="code">depthFailOp</span> members of each of the <span class="code">front</span>
and <span class="code">back</span> members of <span class="code">pDepthStencilState</span> must be
<span class="code">VK_STENCIL_OP_KEEP</span></li><li>

If rasterization is not disabled and the subpass uses color attachments,
then for each color attachment in the subpass the <span class="code">blendEnable</span>
member of the corresponding element of the <span class="code">pAttachment</span> member of
<span class="code">pColorBlendState</span> must be <span class="code">VK_FALSE</span> if the <span class="code">format</span> of
the attachment does not support color blend operations, as specified by
the <span class="code">VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT</span> flag in
<span class="code">VkFormatProperties</span>::<span class="code">linearTilingFeatures</span> or
<span class="code">VkFormatProperties</span>::<span class="code">optimalTilingFeatures</span> returned by
<span class="code">vkGetPhysicalDeviceFormatProperties</span></li><li>

If rasterization is not disabled and the subpass uses color attachments,
the <span class="code">attachmentCount</span> member of <span class="code">pColorBlendState</span> must be
equal to the <span class="code">colorAttachmentCount</span> used to create <span class="code">subpass</span></li><li>

If no element of the <span class="code">pDynamicStates</span> member of <span class="code">pDynamicState</span>
is <span class="code">VK_DYNAMIC_STATE_VIEWPORT</span>, the <span class="code">pViewports</span> member of
<span class="code">pViewportState</span> must be a pointer to an array of
<span class="code">pViewportState</span>::<span class="code">viewportCount</span><span class="code">VkViewport</span> structures
</li><li>

If no element of the <span class="code">pDynamicStates</span> member of <span class="code">pDynamicState</span>
is <span class="code">VK_DYNAMIC_STATE_SCISSOR</span>, the <span class="code">pScissors</span> member of
<span class="code">pViewportState</span> must be a pointer to an array of
<span class="code">pViewportState</span>::<span class="code">scissorCount</span><span class="code">VkRect2D</span> structures
</li><li>

If the wide lines feature is not enabled, and no element of the
<span class="code">pDynamicStates</span> member of <span class="code">pDynamicState</span> is
<span class="code">VK_DYNAMIC_STATE_LINE_WIDTH</span>, the <span class="code">lineWidth</span> member of
<span class="code">pRasterizationState</span> must be <span class="code">1.0</span></li><li>

If the <span class="code">rasterizerDiscardEnable</span> member of <span class="code">pRasterizationState</span>
is <span class="code">VK_FALSE</span>, <span class="code">pViewportState</span> must be a pointer to a valid
<span class="code">VkPipelineViewportStateCreateInfo</span> structure
</li><li>

If the <span class="code">rasterizerDiscardEnable</span> member of <span class="code">pRasterizationState</span>
is <span class="code">VK_FALSE</span>, <span class="code">pMultisampleState</span> must be a pointer to a valid
<span class="code">VkPipelineMultisampleStateCreateInfo</span> structure
</li><li>

If the <span class="code">rasterizerDiscardEnable</span> member of <span class="code">pRasterizationState</span>
is <span class="code">VK_FALSE</span>, and <span class="code">subpass</span> uses a depth/stencil attachment,
<span class="code">pDepthStencilState</span> must be a pointer to a valid
<span class="code">VkPipelineDepthStencilStateCreateInfo</span> structure
</li><li>

If the <span class="code">rasterizerDiscardEnable</span> member of <span class="code">pRasterizationState</span>
is <span class="code">VK_FALSE</span>, and <span class="code">subpass</span> uses color attachments,
<span class="code">pColorBlendState</span> must be a pointer to a valid
<span class="code">VkPipelineColorBlendStateCreateInfo</span> structure
</li><li>

If the depth bias clamping feature is not enabled, no element of the
<span class="code">pDynamicStates</span> member of <span class="code">pDynamicState</span> is
<span class="code">VK_DYNAMIC_STATE_DEPTH_BIAS</span>, and the <span class="code">depthBiasEnable</span> member
of <span class="code">pDepthStencil</span> is <span class="code">VK_TRUE</span>, the <span class="code">depthBiasClamp</span> member
of <span class="code">pDepthStencil</span> must be <span class="code">0.0</span></li><li>

If no element of the <span class="code">pDynamicStates</span> member of <span class="code">pDynamicState</span>
is <span class="code">VK_DYNAMIC_STATE_DEPTH_BOUNDS</span>, and the
<span class="code">depthBoundsTestEnable</span> member of <span class="code">pDepthStencil</span> is
<span class="code">VK_TRUE</span>, the <span class="code">minDepthBounds</span> and <span class="code">maxDepthBounds</span> members
of <span class="code">pDepthStencil</span> must be between <span class="code">0.0</span> and <span class="code">1.0</span>, inclusive
</li><li><span class="code">layout</span> must be
<a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-pipelinelayout-consistency">consistent</a> with all
shaders specified in <span class="code">pStages</span></li><li>

If <span class="code">subpass</span> uses color and/or depth/stencil attachments, then the
<span class="code">rasterizationSamples</span> member of <span class="code">pMultisampleState</span> must be
the same as the sample count for those subpass attachments
</li><li>

If <span class="code">subpass</span> does not use any color and/or depth/stencil
attachments, then the <span class="code">rasterizationSamples</span> member of
<span class="code">pMultisampleState</span> must follow the rules for a
<a href="https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-noattachments">zero-attachment subpass</a></li><li><span class="code">subpass</span> must be a valid subpass within <span class="code">renderpass</span></li></ul>




Valid Usage (Implicit)
<ul><li><span class="code">sType</span> must be <span class="code">VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO</span></li><li><span class="code">pNext</span> must be <span class="code">NULL</span></li><li><span class="code">flags</span> must be a valid combination of <a href="T_VkPipelineCreateFlags.htm">VkPipelineCreateFlags</a> values
</li><li><span class="code">pStages</span> must be a pointer to an array of <span class="code">stageCount</span> valid <span class="code">VkPipelineShaderStageCreateInfo</span> structures
</li><li><span class="code">pVertexInputState</span> must be a pointer to a valid <span class="code">VkPipelineVertexInputStateCreateInfo</span> structure
</li><li><span class="code">pInputAssemblyState</span> must be a pointer to a valid <span class="code">VkPipelineInputAssemblyStateCreateInfo</span> structure
</li><li><span class="code">pRasterizationState</span> must be a pointer to a valid <span class="code">VkPipelineRasterizationStateCreateInfo</span> structure
</li><li>
 If <span class="code">pDynamicState</span> is not <span class="code">NULL</span>, <span class="code">pDynamicState</span> must be a pointer to a valid <span class="code">VkPipelineDynamicStateCreateInfo</span> structure
</li><li><span class="code">layout</span> must be a valid <span class="code">VkPipelineLayout</span> handle
</li><li><span class="code">renderPass</span> must be a valid <span class="code">VkRenderPass</span> handle
</li><li><span class="code">stageCount</span> must be greater than <span class="code">0</span></li><li>
 Each of <span class="code">basePipelineHandle</span>, <span class="code">layout</span>, and <span class="code">renderPass</span> that are valid handles must have been created, allocated, or retrieved from the same <span class="code">VkDevice</span></li></ul>




The <span class="code">VkGraphicsPipelineCreateInfo</span> structure is defined as:


<div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAQBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAQBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAQBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span> <span class="highlight-keyword">typedef</span> <span class="highlight-keyword">struct</span> VkGraphicsPipelineCreateInfo {
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkStructureType                                  sType;
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> <span class="highlight-keyword">void</span>*                                      pNext;
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkPipelineCreateFlags                            flags;
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    uint32_t                                         stageCount;
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineShaderStageCreateInfo*           pStages;
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineVertexInputStateCreateInfo*      pVertexInputState;
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineInputAssemblyStateCreateInfo*    pInputAssemblyState;
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineTessellationStateCreateInfo*     pTessellationState;
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineViewportStateCreateInfo*         pViewportState;
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineRasterizationStateCreateInfo*    pRasterizationState;
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineMultisampleStateCreateInfo*      pMultisampleState;
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineDepthStencilStateCreateInfo*     pDepthStencilState;
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineColorBlendStateCreateInfo*       pColorBlendState;
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">const</span> VkPipelineDynamicStateCreateInfo*          pDynamicState;
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkPipelineLayout                                 layout;
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkRenderPass                                     renderPass;
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    uint32_t                                         subpass;
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    VkPipeline                                       basePipelineHandle;
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    int32_t                                          basePipelineIndex;
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>} VkGraphicsPipelineCreateInfo;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAQBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_.htm">(Default Namespace) Namespace</a></div><div class="seeAlsoStyle"><a href="T_VkPipeline.htm">(Default Namespace)<span id="LSTA5BA5FC3_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkPipeline</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineColorBlendStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineColorBlendStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_VkPipelineCreateFlags.htm">(Default Namespace)<span id="LSTA5BA5FC3_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkPipelineCreateFlags</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineDepthStencilStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineDepthStencilStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineDynamicStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineDynamicStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineInputAssemblyStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineInputAssemblyStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_VkPipelineLayout.htm">(Default Namespace)<span id="LSTA5BA5FC3_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkPipelineLayout</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineMultisampleStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineMultisampleStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineRasterizationStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineRasterizationStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineShaderStageCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineShaderStageCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineTessellationStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineTessellationStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineVertexInputStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineVertexInputStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_IVkPipelineViewportStateCreateInfo.htm">(Default Namespace)<span id="LSTA5BA5FC3_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_12?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IVkPipelineViewportStateCreateInfo</a></div><div class="seeAlsoStyle"><a href="T_VkRenderPass.htm">(Default Namespace)<span id="LSTA5BA5FC3_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_13?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkRenderPass</a></div><div class="seeAlsoStyle"><a href="T_VkStructureType.htm">(Default Namespace)<span id="LSTA5BA5FC3_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_14?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>VkStructureType</a></div><div class="seeAlsoStyle"><a href="T_vkCreateGraphicsPipelines.htm">(Default Namespace)<span id="LSTA5BA5FC3_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA5BA5FC3_15?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>vkCreateGraphicsPipelines</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>