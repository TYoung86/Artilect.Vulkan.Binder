<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Vulkan</name>
  </assembly>
  <members>
    <member name="T:IVkAcquireNextImageInfoKHX"></member>
    <member name="P:IVkAcquireNextImageInfoKHX.deviceMask"></member>
    <member name="P:IVkAcquireNextImageInfoKHX.fence"></member>
    <member name="P:IVkAcquireNextImageInfoKHX.pNext"></member>
    <member name="P:IVkAcquireNextImageInfoKHX.semaphore"></member>
    <member name="P:IVkAcquireNextImageInfoKHX.sType"></member>
    <member name="P:IVkAcquireNextImageInfoKHX.swapchain"></member>
    <member name="P:IVkAcquireNextImageInfoKHX.timeout"></member>
    <member name="T:IVkAllocationCallbacks">
      <summary>Structure containing callback function pointers for memory allocation</summary>
    </member>
    <member name="P:IVkAllocationCallbacks.pfnAllocation"></member>
    <member name="P:IVkAllocationCallbacks.pfnFree"></member>
    <member name="P:IVkAllocationCallbacks.pfnInternalAllocation"></member>
    <member name="P:IVkAllocationCallbacks.pfnInternalFree"></member>
    <member name="P:IVkAllocationCallbacks.pfnReallocation"></member>
    <member name="P:IVkAllocationCallbacks.pUserData"></member>
    <member name="T:IVkApplicationInfo">
      <summary>Structure specifying application info</summary>
    </member>
    <member name="P:IVkApplicationInfo.apiVersion"></member>
    <member name="P:IVkApplicationInfo.applicationVersion"></member>
    <member name="P:IVkApplicationInfo.engineVersion"></member>
    <member name="P:IVkApplicationInfo.pApplicationName"></member>
    <member name="P:IVkApplicationInfo.pEngineName"></member>
    <member name="P:IVkApplicationInfo.pNext"></member>
    <member name="P:IVkApplicationInfo.sType"></member>
    <member name="T:IVkBindBufferMemoryInfoKHX"></member>
    <member name="P:IVkBindBufferMemoryInfoKHX.buffer"></member>
    <member name="P:IVkBindBufferMemoryInfoKHX.deviceIndexCount"></member>
    <member name="P:IVkBindBufferMemoryInfoKHX.memory"></member>
    <member name="P:IVkBindBufferMemoryInfoKHX.memoryOffset"></member>
    <member name="P:IVkBindBufferMemoryInfoKHX.pDeviceIndices"></member>
    <member name="P:IVkBindBufferMemoryInfoKHX.pNext"></member>
    <member name="P:IVkBindBufferMemoryInfoKHX.sType"></member>
    <member name="T:IVkBindImageMemoryInfoKHX"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.deviceIndexCount"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.image"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.memory"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.memoryOffset"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.pDeviceIndices"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.pNext"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.pSFRRects"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.SFRRectCount"></member>
    <member name="P:IVkBindImageMemoryInfoKHX.sType"></member>
    <member name="T:IVkBindImageMemorySwapchainInfoKHX"></member>
    <member name="P:IVkBindImageMemorySwapchainInfoKHX.imageIndex"></member>
    <member name="P:IVkBindImageMemorySwapchainInfoKHX.pNext"></member>
    <member name="P:IVkBindImageMemorySwapchainInfoKHX.sType"></member>
    <member name="P:IVkBindImageMemorySwapchainInfoKHX.swapchain"></member>
    <member name="T:IVkBindSparseInfo">
      <summary>Structure specifying a sparse binding operation</summary>
    </member>
    <member name="P:IVkBindSparseInfo.bufferBindCount"></member>
    <member name="P:IVkBindSparseInfo.imageBindCount"></member>
    <member name="P:IVkBindSparseInfo.imageOpaqueBindCount"></member>
    <member name="P:IVkBindSparseInfo.pBufferBinds"></member>
    <member name="P:IVkBindSparseInfo.pImageBinds"></member>
    <member name="P:IVkBindSparseInfo.pImageOpaqueBinds"></member>
    <member name="P:IVkBindSparseInfo.pNext"></member>
    <member name="P:IVkBindSparseInfo.pSignalSemaphores"></member>
    <member name="P:IVkBindSparseInfo.pWaitSemaphores"></member>
    <member name="P:IVkBindSparseInfo.signalSemaphoreCount"></member>
    <member name="P:IVkBindSparseInfo.sType"></member>
    <member name="P:IVkBindSparseInfo.waitSemaphoreCount"></member>
    <member name="T:IVkBufferCreateInfo">
      <summary>Structure specifying the parameters of a newly created buffer object</summary>
    </member>
    <member name="P:IVkBufferCreateInfo.flags"></member>
    <member name="P:IVkBufferCreateInfo.pNext"></member>
    <member name="P:IVkBufferCreateInfo.pQueueFamilyIndices"></member>
    <member name="P:IVkBufferCreateInfo.queueFamilyIndexCount"></member>
    <member name="P:IVkBufferCreateInfo.sharingMode"></member>
    <member name="P:IVkBufferCreateInfo.size"></member>
    <member name="P:IVkBufferCreateInfo.sType"></member>
    <member name="P:IVkBufferCreateInfo.usage"></member>
    <member name="T:IVkBufferMemoryBarrier">
      <summary>Structure specifying a buffer memory barrier</summary>
    </member>
    <member name="P:IVkBufferMemoryBarrier.buffer"></member>
    <member name="P:IVkBufferMemoryBarrier.dstAccessMask"></member>
    <member name="P:IVkBufferMemoryBarrier.dstQueueFamilyIndex"></member>
    <member name="P:IVkBufferMemoryBarrier.offset"></member>
    <member name="P:IVkBufferMemoryBarrier.pNext"></member>
    <member name="P:IVkBufferMemoryBarrier.size"></member>
    <member name="P:IVkBufferMemoryBarrier.srcAccessMask"></member>
    <member name="P:IVkBufferMemoryBarrier.srcQueueFamilyIndex"></member>
    <member name="P:IVkBufferMemoryBarrier.sType"></member>
    <member name="T:IVkBufferViewCreateInfo">
      <summary>Structure specifying parameters of a newly created buffer view</summary>
    </member>
    <member name="P:IVkBufferViewCreateInfo.buffer"></member>
    <member name="P:IVkBufferViewCreateInfo.flags"></member>
    <member name="P:IVkBufferViewCreateInfo.format"></member>
    <member name="P:IVkBufferViewCreateInfo.offset"></member>
    <member name="P:IVkBufferViewCreateInfo.pNext"></member>
    <member name="P:IVkBufferViewCreateInfo.range"></member>
    <member name="P:IVkBufferViewCreateInfo.sType"></member>
    <member name="T:IVkCmdProcessCommandsInfoNVX"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.indirectCommandsLayout"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.indirectCommandsTokenCount"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.maxSequencesCount"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.objectTable"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.pIndirectCommandsTokens"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.pNext"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.sequencesCountBuffer"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.sequencesCountOffset"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.sequencesIndexBuffer"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.sequencesIndexOffset"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.sType"></member>
    <member name="P:IVkCmdProcessCommandsInfoNVX.targetCommandBuffer"></member>
    <member name="T:IVkCmdReserveSpaceForCommandsInfoNVX"></member>
    <member name="P:IVkCmdReserveSpaceForCommandsInfoNVX.indirectCommandsLayout"></member>
    <member name="P:IVkCmdReserveSpaceForCommandsInfoNVX.maxSequencesCount"></member>
    <member name="P:IVkCmdReserveSpaceForCommandsInfoNVX.objectTable"></member>
    <member name="P:IVkCmdReserveSpaceForCommandsInfoNVX.pNext"></member>
    <member name="P:IVkCmdReserveSpaceForCommandsInfoNVX.sType"></member>
    <member name="T:IVkCommandBufferAllocateInfo">
      <summary>Structure specifying the allocation parameters for command buffer object</summary>
    </member>
    <member name="P:IVkCommandBufferAllocateInfo.commandBufferCount"></member>
    <member name="P:IVkCommandBufferAllocateInfo.commandPool"></member>
    <member name="P:IVkCommandBufferAllocateInfo.level"></member>
    <member name="P:IVkCommandBufferAllocateInfo.pNext"></member>
    <member name="P:IVkCommandBufferAllocateInfo.sType"></member>
    <member name="T:IVkCommandBufferBeginInfo">
      <summary>Structure specifying a command buffer begin operation</summary>
    </member>
    <member name="P:IVkCommandBufferBeginInfo.flags"></member>
    <member name="P:IVkCommandBufferBeginInfo.pInheritanceInfo"></member>
    <member name="P:IVkCommandBufferBeginInfo.pNext"></member>
    <member name="P:IVkCommandBufferBeginInfo.sType"></member>
    <member name="T:IVkCommandBufferInheritanceInfo">
      <summary>Structure specifying command buffer inheritance info</summary>
    </member>
    <member name="P:IVkCommandBufferInheritanceInfo.framebuffer"></member>
    <member name="P:IVkCommandBufferInheritanceInfo.occlusionQueryEnable"></member>
    <member name="P:IVkCommandBufferInheritanceInfo.pipelineStatistics"></member>
    <member name="P:IVkCommandBufferInheritanceInfo.pNext"></member>
    <member name="P:IVkCommandBufferInheritanceInfo.queryFlags"></member>
    <member name="P:IVkCommandBufferInheritanceInfo.renderPass"></member>
    <member name="P:IVkCommandBufferInheritanceInfo.sType"></member>
    <member name="P:IVkCommandBufferInheritanceInfo.subpass"></member>
    <member name="T:IVkCommandPoolCreateInfo">
      <summary>Structure specifying parameters of a newly created command pool</summary>
    </member>
    <member name="P:IVkCommandPoolCreateInfo.flags"></member>
    <member name="P:IVkCommandPoolCreateInfo.pNext"></member>
    <member name="P:IVkCommandPoolCreateInfo.queueFamilyIndex"></member>
    <member name="P:IVkCommandPoolCreateInfo.sType"></member>
    <member name="T:IVkComputePipelineCreateInfo">
      <summary>Structure specifying parameters of a newly created compute pipeline</summary>
    </member>
    <member name="P:IVkComputePipelineCreateInfo.basePipelineHandle"></member>
    <member name="P:IVkComputePipelineCreateInfo.basePipelineIndex"></member>
    <member name="P:IVkComputePipelineCreateInfo.flags"></member>
    <member name="P:IVkComputePipelineCreateInfo.layout"></member>
    <member name="P:IVkComputePipelineCreateInfo.pNext"></member>
    <member name="P:IVkComputePipelineCreateInfo.stage"></member>
    <member name="P:IVkComputePipelineCreateInfo.sType"></member>
    <member name="T:IVkCopyDescriptorSet">
      <summary>Structure specifying a copy descriptor set operation</summary>
    </member>
    <member name="P:IVkCopyDescriptorSet.descriptorCount"></member>
    <member name="P:IVkCopyDescriptorSet.dstArrayElement"></member>
    <member name="P:IVkCopyDescriptorSet.dstBinding"></member>
    <member name="P:IVkCopyDescriptorSet.dstSet"></member>
    <member name="P:IVkCopyDescriptorSet.pNext"></member>
    <member name="P:IVkCopyDescriptorSet.srcArrayElement"></member>
    <member name="P:IVkCopyDescriptorSet.srcBinding"></member>
    <member name="P:IVkCopyDescriptorSet.srcSet"></member>
    <member name="P:IVkCopyDescriptorSet.sType"></member>
    <member name="T:IVkDebugMarkerMarkerInfoEXT"></member>
    <member name="M:IVkDebugMarkerMarkerInfoEXT.color(System.Int32)"></member>
    <member name="P:IVkDebugMarkerMarkerInfoEXT.pMarkerName"></member>
    <member name="P:IVkDebugMarkerMarkerInfoEXT.pNext"></member>
    <member name="P:IVkDebugMarkerMarkerInfoEXT.sType"></member>
    <member name="T:IVkDebugMarkerObjectNameInfoEXT"></member>
    <member name="P:IVkDebugMarkerObjectNameInfoEXT.object"></member>
    <member name="P:IVkDebugMarkerObjectNameInfoEXT.objectType"></member>
    <member name="P:IVkDebugMarkerObjectNameInfoEXT.pNext"></member>
    <member name="P:IVkDebugMarkerObjectNameInfoEXT.pObjectName"></member>
    <member name="P:IVkDebugMarkerObjectNameInfoEXT.sType"></member>
    <member name="T:IVkDebugMarkerObjectTagInfoEXT"></member>
    <member name="P:IVkDebugMarkerObjectTagInfoEXT.object"></member>
    <member name="P:IVkDebugMarkerObjectTagInfoEXT.objectType"></member>
    <member name="P:IVkDebugMarkerObjectTagInfoEXT.pNext"></member>
    <member name="P:IVkDebugMarkerObjectTagInfoEXT.pTag"></member>
    <member name="P:IVkDebugMarkerObjectTagInfoEXT.sType"></member>
    <member name="P:IVkDebugMarkerObjectTagInfoEXT.tagName"></member>
    <member name="P:IVkDebugMarkerObjectTagInfoEXT.tagSize"></member>
    <member name="T:IVkDebugReportCallbackCreateInfoEXT"></member>
    <member name="P:IVkDebugReportCallbackCreateInfoEXT.flags"></member>
    <member name="P:IVkDebugReportCallbackCreateInfoEXT.pfnCallback"></member>
    <member name="P:IVkDebugReportCallbackCreateInfoEXT.pNext"></member>
    <member name="P:IVkDebugReportCallbackCreateInfoEXT.pUserData"></member>
    <member name="P:IVkDebugReportCallbackCreateInfoEXT.sType"></member>
    <member name="T:IVkDedicatedAllocationBufferCreateInfoNV"></member>
    <member name="P:IVkDedicatedAllocationBufferCreateInfoNV.dedicatedAllocation"></member>
    <member name="P:IVkDedicatedAllocationBufferCreateInfoNV.pNext"></member>
    <member name="P:IVkDedicatedAllocationBufferCreateInfoNV.sType"></member>
    <member name="T:IVkDedicatedAllocationImageCreateInfoNV"></member>
    <member name="P:IVkDedicatedAllocationImageCreateInfoNV.dedicatedAllocation"></member>
    <member name="P:IVkDedicatedAllocationImageCreateInfoNV.pNext"></member>
    <member name="P:IVkDedicatedAllocationImageCreateInfoNV.sType"></member>
    <member name="T:IVkDedicatedAllocationMemoryAllocateInfoNV"></member>
    <member name="P:IVkDedicatedAllocationMemoryAllocateInfoNV.buffer"></member>
    <member name="P:IVkDedicatedAllocationMemoryAllocateInfoNV.image"></member>
    <member name="P:IVkDedicatedAllocationMemoryAllocateInfoNV.pNext"></member>
    <member name="P:IVkDedicatedAllocationMemoryAllocateInfoNV.sType"></member>
    <member name="T:IVkDescriptorPoolCreateInfo">
      <summary>Structure specifying parameters of a newly created descriptor pool</summary>
    </member>
    <member name="P:IVkDescriptorPoolCreateInfo.flags"></member>
    <member name="P:IVkDescriptorPoolCreateInfo.maxSets"></member>
    <member name="P:IVkDescriptorPoolCreateInfo.pNext"></member>
    <member name="P:IVkDescriptorPoolCreateInfo.poolSizeCount"></member>
    <member name="P:IVkDescriptorPoolCreateInfo.pPoolSizes"></member>
    <member name="P:IVkDescriptorPoolCreateInfo.sType"></member>
    <member name="T:IVkDescriptorSetAllocateInfo">
      <summary>Structure specifying the allocation parameters for descriptor sets</summary>
    </member>
    <member name="P:IVkDescriptorSetAllocateInfo.descriptorPool"></member>
    <member name="P:IVkDescriptorSetAllocateInfo.descriptorSetCount"></member>
    <member name="P:IVkDescriptorSetAllocateInfo.pNext"></member>
    <member name="P:IVkDescriptorSetAllocateInfo.pSetLayouts"></member>
    <member name="P:IVkDescriptorSetAllocateInfo.sType"></member>
    <member name="T:IVkDescriptorSetLayoutBinding">
      <summary>Structure specifying a descriptor set layout binding</summary>
    </member>
    <member name="P:IVkDescriptorSetLayoutBinding.binding"></member>
    <member name="P:IVkDescriptorSetLayoutBinding.descriptorCount"></member>
    <member name="P:IVkDescriptorSetLayoutBinding.descriptorType"></member>
    <member name="P:IVkDescriptorSetLayoutBinding.pImmutableSamplers"></member>
    <member name="P:IVkDescriptorSetLayoutBinding.stageFlags"></member>
    <member name="T:IVkDescriptorSetLayoutCreateInfo">
      <summary>Structure specifying parameters of a newly created descriptor set layout</summary>
    </member>
    <member name="P:IVkDescriptorSetLayoutCreateInfo.bindingCount"></member>
    <member name="P:IVkDescriptorSetLayoutCreateInfo.flags"></member>
    <member name="P:IVkDescriptorSetLayoutCreateInfo.pBindings"></member>
    <member name="P:IVkDescriptorSetLayoutCreateInfo.pNext"></member>
    <member name="P:IVkDescriptorSetLayoutCreateInfo.sType"></member>
    <member name="T:IVkDescriptorUpdateTemplateCreateInfoKHR"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.descriptorSetLayout"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.descriptorUpdateEntryCount"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.flags"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.pDescriptorUpdateEntries"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.pipelineBindPoint"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.pipelineLayout"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.pNext"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.set"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.sType"></member>
    <member name="P:IVkDescriptorUpdateTemplateCreateInfoKHR.templateType"></member>
    <member name="T:IVkDescriptorUpdateTemplateEntryKHR"></member>
    <member name="P:IVkDescriptorUpdateTemplateEntryKHR.descriptorCount"></member>
    <member name="P:IVkDescriptorUpdateTemplateEntryKHR.descriptorType"></member>
    <member name="P:IVkDescriptorUpdateTemplateEntryKHR.dstArrayElement"></member>
    <member name="P:IVkDescriptorUpdateTemplateEntryKHR.dstBinding"></member>
    <member name="P:IVkDescriptorUpdateTemplateEntryKHR.offset"></member>
    <member name="P:IVkDescriptorUpdateTemplateEntryKHR.stride"></member>
    <member name="T:IVkDeviceCreateInfo">
      <summary>Structure specifying parameters of a newly created device</summary>
    </member>
    <member name="P:IVkDeviceCreateInfo.enabledExtensionCount"></member>
    <member name="P:IVkDeviceCreateInfo.enabledLayerCount"></member>
    <member name="P:IVkDeviceCreateInfo.flags"></member>
    <member name="P:IVkDeviceCreateInfo.pEnabledFeatures"></member>
    <member name="P:IVkDeviceCreateInfo.pNext"></member>
    <member name="P:IVkDeviceCreateInfo.ppEnabledExtensionNames"></member>
    <member name="P:IVkDeviceCreateInfo.ppEnabledLayerNames"></member>
    <member name="P:IVkDeviceCreateInfo.pQueueCreateInfos"></member>
    <member name="P:IVkDeviceCreateInfo.queueCreateInfoCount"></member>
    <member name="P:IVkDeviceCreateInfo.sType"></member>
    <member name="T:IVkDeviceEventInfoEXT"></member>
    <member name="P:IVkDeviceEventInfoEXT.deviceEvent"></member>
    <member name="P:IVkDeviceEventInfoEXT.pNext"></member>
    <member name="P:IVkDeviceEventInfoEXT.sType"></member>
    <member name="T:IVkDeviceGeneratedCommandsFeaturesNVX"></member>
    <member name="P:IVkDeviceGeneratedCommandsFeaturesNVX.computeBindingPointSupport"></member>
    <member name="P:IVkDeviceGeneratedCommandsFeaturesNVX.pNext"></member>
    <member name="P:IVkDeviceGeneratedCommandsFeaturesNVX.sType"></member>
    <member name="T:IVkDeviceGeneratedCommandsLimitsNVX"></member>
    <member name="P:IVkDeviceGeneratedCommandsLimitsNVX.maxIndirectCommandsLayoutTokenCount"></member>
    <member name="P:IVkDeviceGeneratedCommandsLimitsNVX.maxObjectEntryCounts"></member>
    <member name="P:IVkDeviceGeneratedCommandsLimitsNVX.minCommandsTokenBufferOffsetAlignment"></member>
    <member name="P:IVkDeviceGeneratedCommandsLimitsNVX.minSequenceCountBufferOffsetAlignment"></member>
    <member name="P:IVkDeviceGeneratedCommandsLimitsNVX.minSequenceIndexBufferOffsetAlignment"></member>
    <member name="P:IVkDeviceGeneratedCommandsLimitsNVX.pNext"></member>
    <member name="P:IVkDeviceGeneratedCommandsLimitsNVX.sType"></member>
    <member name="T:IVkDeviceGroupBindSparseInfoKHX"></member>
    <member name="P:IVkDeviceGroupBindSparseInfoKHX.memoryDeviceIndex"></member>
    <member name="P:IVkDeviceGroupBindSparseInfoKHX.pNext"></member>
    <member name="P:IVkDeviceGroupBindSparseInfoKHX.resourceDeviceIndex"></member>
    <member name="P:IVkDeviceGroupBindSparseInfoKHX.sType"></member>
    <member name="T:IVkDeviceGroupCommandBufferBeginInfoKHX"></member>
    <member name="P:IVkDeviceGroupCommandBufferBeginInfoKHX.deviceMask"></member>
    <member name="P:IVkDeviceGroupCommandBufferBeginInfoKHX.pNext"></member>
    <member name="P:IVkDeviceGroupCommandBufferBeginInfoKHX.sType"></member>
    <member name="T:IVkDeviceGroupDeviceCreateInfoKHX"></member>
    <member name="P:IVkDeviceGroupDeviceCreateInfoKHX.physicalDeviceCount"></member>
    <member name="P:IVkDeviceGroupDeviceCreateInfoKHX.pNext"></member>
    <member name="P:IVkDeviceGroupDeviceCreateInfoKHX.pPhysicalDevices"></member>
    <member name="P:IVkDeviceGroupDeviceCreateInfoKHX.sType"></member>
    <member name="T:IVkDeviceGroupPresentCapabilitiesKHX"></member>
    <member name="P:IVkDeviceGroupPresentCapabilitiesKHX.modes"></member>
    <member name="P:IVkDeviceGroupPresentCapabilitiesKHX.pNext"></member>
    <member name="M:IVkDeviceGroupPresentCapabilitiesKHX.presentMask(System.Int32)"></member>
    <member name="P:IVkDeviceGroupPresentCapabilitiesKHX.sType"></member>
    <member name="T:IVkDeviceGroupPresentInfoKHX"></member>
    <member name="P:IVkDeviceGroupPresentInfoKHX.mode"></member>
    <member name="P:IVkDeviceGroupPresentInfoKHX.pDeviceMasks"></member>
    <member name="P:IVkDeviceGroupPresentInfoKHX.pNext"></member>
    <member name="P:IVkDeviceGroupPresentInfoKHX.sType"></member>
    <member name="P:IVkDeviceGroupPresentInfoKHX.swapchainCount"></member>
    <member name="T:IVkDeviceGroupRenderPassBeginInfoKHX"></member>
    <member name="P:IVkDeviceGroupRenderPassBeginInfoKHX.deviceMask"></member>
    <member name="P:IVkDeviceGroupRenderPassBeginInfoKHX.deviceRenderAreaCount"></member>
    <member name="P:IVkDeviceGroupRenderPassBeginInfoKHX.pDeviceRenderAreas"></member>
    <member name="P:IVkDeviceGroupRenderPassBeginInfoKHX.pNext"></member>
    <member name="P:IVkDeviceGroupRenderPassBeginInfoKHX.sType"></member>
    <member name="T:IVkDeviceGroupSubmitInfoKHX"></member>
    <member name="P:IVkDeviceGroupSubmitInfoKHX.commandBufferCount"></member>
    <member name="P:IVkDeviceGroupSubmitInfoKHX.pCommandBufferDeviceMasks"></member>
    <member name="P:IVkDeviceGroupSubmitInfoKHX.pNext"></member>
    <member name="P:IVkDeviceGroupSubmitInfoKHX.pSignalSemaphoreDeviceIndices"></member>
    <member name="P:IVkDeviceGroupSubmitInfoKHX.pWaitSemaphoreDeviceIndices"></member>
    <member name="P:IVkDeviceGroupSubmitInfoKHX.signalSemaphoreCount"></member>
    <member name="P:IVkDeviceGroupSubmitInfoKHX.sType"></member>
    <member name="P:IVkDeviceGroupSubmitInfoKHX.waitSemaphoreCount"></member>
    <member name="T:IVkDeviceGroupSwapchainCreateInfoKHX"></member>
    <member name="P:IVkDeviceGroupSwapchainCreateInfoKHX.modes"></member>
    <member name="P:IVkDeviceGroupSwapchainCreateInfoKHX.pNext"></member>
    <member name="P:IVkDeviceGroupSwapchainCreateInfoKHX.sType"></member>
    <member name="T:IVkDeviceQueueCreateInfo">
      <summary>Structure specifying parameters of a newly created device queue</summary>
    </member>
    <member name="P:IVkDeviceQueueCreateInfo.flags"></member>
    <member name="P:IVkDeviceQueueCreateInfo.pNext"></member>
    <member name="P:IVkDeviceQueueCreateInfo.pQueuePriorities"></member>
    <member name="P:IVkDeviceQueueCreateInfo.queueCount"></member>
    <member name="P:IVkDeviceQueueCreateInfo.queueFamilyIndex"></member>
    <member name="P:IVkDeviceQueueCreateInfo.sType"></member>
    <member name="T:IVkDisplayEventInfoEXT"></member>
    <member name="P:IVkDisplayEventInfoEXT.displayEvent"></member>
    <member name="P:IVkDisplayEventInfoEXT.pNext"></member>
    <member name="P:IVkDisplayEventInfoEXT.sType"></member>
    <member name="T:IVkDisplayModeCreateInfoKHR"></member>
    <member name="P:IVkDisplayModeCreateInfoKHR.flags"></member>
    <member name="P:IVkDisplayModeCreateInfoKHR.parameters"></member>
    <member name="P:IVkDisplayModeCreateInfoKHR.pNext"></member>
    <member name="P:IVkDisplayModeCreateInfoKHR.sType"></member>
    <member name="T:IVkDisplayPowerInfoEXT"></member>
    <member name="P:IVkDisplayPowerInfoEXT.pNext"></member>
    <member name="P:IVkDisplayPowerInfoEXT.powerState"></member>
    <member name="P:IVkDisplayPowerInfoEXT.sType"></member>
    <member name="T:IVkDisplayPresentInfoKHR"></member>
    <member name="P:IVkDisplayPresentInfoKHR.dstRect"></member>
    <member name="P:IVkDisplayPresentInfoKHR.persistent"></member>
    <member name="P:IVkDisplayPresentInfoKHR.pNext"></member>
    <member name="P:IVkDisplayPresentInfoKHR.srcRect"></member>
    <member name="P:IVkDisplayPresentInfoKHR.sType"></member>
    <member name="T:IVkDisplayPropertiesKHR"></member>
    <member name="P:IVkDisplayPropertiesKHR.display"></member>
    <member name="P:IVkDisplayPropertiesKHR.displayName"></member>
    <member name="P:IVkDisplayPropertiesKHR.persistentContent"></member>
    <member name="P:IVkDisplayPropertiesKHR.physicalDimensions"></member>
    <member name="P:IVkDisplayPropertiesKHR.physicalResolution"></member>
    <member name="P:IVkDisplayPropertiesKHR.planeReorderPossible"></member>
    <member name="P:IVkDisplayPropertiesKHR.supportedTransforms"></member>
    <member name="T:IVkDisplaySurfaceCreateInfoKHR"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.alphaMode"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.displayMode"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.flags"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.globalAlpha"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.imageExtent"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.planeIndex"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.planeStackIndex"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.pNext"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.sType"></member>
    <member name="P:IVkDisplaySurfaceCreateInfoKHR.transform"></member>
    <member name="T:IVkEventCreateInfo">
      <summary>Structure specifying parameters of a newly created event</summary>
    </member>
    <member name="P:IVkEventCreateInfo.flags"></member>
    <member name="P:IVkEventCreateInfo.pNext"></member>
    <member name="P:IVkEventCreateInfo.sType"></member>
    <member name="T:IVkExportMemoryAllocateInfoKHX"></member>
    <member name="P:IVkExportMemoryAllocateInfoKHX.handleTypes"></member>
    <member name="P:IVkExportMemoryAllocateInfoKHX.pNext"></member>
    <member name="P:IVkExportMemoryAllocateInfoKHX.sType"></member>
    <member name="T:IVkExportMemoryAllocateInfoNV"></member>
    <member name="P:IVkExportMemoryAllocateInfoNV.handleTypes"></member>
    <member name="P:IVkExportMemoryAllocateInfoNV.pNext"></member>
    <member name="P:IVkExportMemoryAllocateInfoNV.sType"></member>
    <member name="T:IVkExportSemaphoreCreateInfoKHX"></member>
    <member name="P:IVkExportSemaphoreCreateInfoKHX.handleTypes"></member>
    <member name="P:IVkExportSemaphoreCreateInfoKHX.pNext"></member>
    <member name="P:IVkExportSemaphoreCreateInfoKHX.sType"></member>
    <member name="T:IVkExternalBufferPropertiesKHX"></member>
    <member name="P:IVkExternalBufferPropertiesKHX.externalMemoryProperties"></member>
    <member name="P:IVkExternalBufferPropertiesKHX.pNext"></member>
    <member name="P:IVkExternalBufferPropertiesKHX.sType"></member>
    <member name="T:IVkExternalImageFormatPropertiesKHX"></member>
    <member name="P:IVkExternalImageFormatPropertiesKHX.externalMemoryProperties"></member>
    <member name="P:IVkExternalImageFormatPropertiesKHX.pNext"></member>
    <member name="P:IVkExternalImageFormatPropertiesKHX.sType"></member>
    <member name="T:IVkExternalMemoryBufferCreateInfoKHX"></member>
    <member name="P:IVkExternalMemoryBufferCreateInfoKHX.handleTypes"></member>
    <member name="P:IVkExternalMemoryBufferCreateInfoKHX.pNext"></member>
    <member name="P:IVkExternalMemoryBufferCreateInfoKHX.sType"></member>
    <member name="T:IVkExternalMemoryImageCreateInfoKHX"></member>
    <member name="P:IVkExternalMemoryImageCreateInfoKHX.handleTypes"></member>
    <member name="P:IVkExternalMemoryImageCreateInfoKHX.pNext"></member>
    <member name="P:IVkExternalMemoryImageCreateInfoKHX.sType"></member>
    <member name="T:IVkExternalMemoryImageCreateInfoNV"></member>
    <member name="P:IVkExternalMemoryImageCreateInfoNV.handleTypes"></member>
    <member name="P:IVkExternalMemoryImageCreateInfoNV.pNext"></member>
    <member name="P:IVkExternalMemoryImageCreateInfoNV.sType"></member>
    <member name="T:IVkExternalSemaphorePropertiesKHX"></member>
    <member name="P:IVkExternalSemaphorePropertiesKHX.compatibleHandleTypes"></member>
    <member name="P:IVkExternalSemaphorePropertiesKHX.exportFromImportedHandleTypes"></member>
    <member name="P:IVkExternalSemaphorePropertiesKHX.externalSemaphoreFeatures"></member>
    <member name="P:IVkExternalSemaphorePropertiesKHX.pNext"></member>
    <member name="P:IVkExternalSemaphorePropertiesKHX.sType"></member>
    <member name="T:IVkFenceCreateInfo">
      <summary>Structure specifying parameters of a newly created fence</summary>
    </member>
    <member name="P:IVkFenceCreateInfo.flags"></member>
    <member name="P:IVkFenceCreateInfo.pNext"></member>
    <member name="P:IVkFenceCreateInfo.sType"></member>
    <member name="T:IVkFormatProperties2KHR"></member>
    <member name="P:IVkFormatProperties2KHR.formatProperties"></member>
    <member name="P:IVkFormatProperties2KHR.pNext"></member>
    <member name="P:IVkFormatProperties2KHR.sType"></member>
    <member name="T:IVkFramebufferCreateInfo">
      <summary>Structure specifying parameters of a newly created framebuffer</summary>
    </member>
    <member name="P:IVkFramebufferCreateInfo.attachmentCount"></member>
    <member name="P:IVkFramebufferCreateInfo.flags"></member>
    <member name="P:IVkFramebufferCreateInfo.height"></member>
    <member name="P:IVkFramebufferCreateInfo.layers"></member>
    <member name="P:IVkFramebufferCreateInfo.pAttachments"></member>
    <member name="P:IVkFramebufferCreateInfo.pNext"></member>
    <member name="P:IVkFramebufferCreateInfo.renderPass"></member>
    <member name="P:IVkFramebufferCreateInfo.sType"></member>
    <member name="P:IVkFramebufferCreateInfo.width"></member>
    <member name="T:IVkGraphicsPipelineCreateInfo">
      <summary>Structure specifying parameters of a newly created graphics pipeline</summary>
    </member>
    <member name="P:IVkGraphicsPipelineCreateInfo.basePipelineHandle"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.basePipelineIndex"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.flags"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.layout"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pColorBlendState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pDepthStencilState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pDynamicState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pInputAssemblyState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pMultisampleState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pNext"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pRasterizationState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pStages"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pTessellationState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pVertexInputState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.pViewportState"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.renderPass"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.stageCount"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.sType"></member>
    <member name="P:IVkGraphicsPipelineCreateInfo.subpass"></member>
    <member name="T:IVkHdrMetadataEXT"></member>
    <member name="P:IVkHdrMetadataEXT.displayPrimaryBlue"></member>
    <member name="P:IVkHdrMetadataEXT.displayPrimaryGreen"></member>
    <member name="P:IVkHdrMetadataEXT.displayPrimaryRed"></member>
    <member name="P:IVkHdrMetadataEXT.maxContentLightLevel"></member>
    <member name="P:IVkHdrMetadataEXT.maxFrameAverageLightLevel"></member>
    <member name="P:IVkHdrMetadataEXT.maxLuminance"></member>
    <member name="P:IVkHdrMetadataEXT.minLuminance"></member>
    <member name="P:IVkHdrMetadataEXT.pNext"></member>
    <member name="P:IVkHdrMetadataEXT.sType"></member>
    <member name="P:IVkHdrMetadataEXT.whitePoint"></member>
    <member name="T:IVkImageCreateInfo">
      <summary>Structure specifying the parameters of a newly created image object</summary>
    </member>
    <member name="P:IVkImageCreateInfo.arrayLayers"></member>
    <member name="P:IVkImageCreateInfo.extent"></member>
    <member name="P:IVkImageCreateInfo.flags"></member>
    <member name="P:IVkImageCreateInfo.format"></member>
    <member name="P:IVkImageCreateInfo.imageType"></member>
    <member name="P:IVkImageCreateInfo.initialLayout"></member>
    <member name="P:IVkImageCreateInfo.mipLevels"></member>
    <member name="P:IVkImageCreateInfo.pNext"></member>
    <member name="P:IVkImageCreateInfo.pQueueFamilyIndices"></member>
    <member name="P:IVkImageCreateInfo.queueFamilyIndexCount"></member>
    <member name="P:IVkImageCreateInfo.samples"></member>
    <member name="P:IVkImageCreateInfo.sharingMode"></member>
    <member name="P:IVkImageCreateInfo.sType"></member>
    <member name="P:IVkImageCreateInfo.tiling"></member>
    <member name="P:IVkImageCreateInfo.usage"></member>
    <member name="T:IVkImageFormatProperties2KHR"></member>
    <member name="P:IVkImageFormatProperties2KHR.imageFormatProperties"></member>
    <member name="P:IVkImageFormatProperties2KHR.pNext"></member>
    <member name="P:IVkImageFormatProperties2KHR.sType"></member>
    <member name="T:IVkImageMemoryBarrier">
      <summary>Structure specifying the parameters of an image memory barrier</summary>
    </member>
    <member name="P:IVkImageMemoryBarrier.dstAccessMask"></member>
    <member name="P:IVkImageMemoryBarrier.dstQueueFamilyIndex"></member>
    <member name="P:IVkImageMemoryBarrier.image"></member>
    <member name="P:IVkImageMemoryBarrier.newLayout"></member>
    <member name="P:IVkImageMemoryBarrier.oldLayout"></member>
    <member name="P:IVkImageMemoryBarrier.pNext"></member>
    <member name="P:IVkImageMemoryBarrier.srcAccessMask"></member>
    <member name="P:IVkImageMemoryBarrier.srcQueueFamilyIndex"></member>
    <member name="P:IVkImageMemoryBarrier.sType"></member>
    <member name="P:IVkImageMemoryBarrier.subresourceRange"></member>
    <member name="T:IVkImageSwapchainCreateInfoKHX"></member>
    <member name="P:IVkImageSwapchainCreateInfoKHX.pNext"></member>
    <member name="P:IVkImageSwapchainCreateInfoKHX.sType"></member>
    <member name="P:IVkImageSwapchainCreateInfoKHX.swapchain"></member>
    <member name="T:IVkImageViewCreateInfo">
      <summary>Structure specifying parameters of a newly created image view</summary>
    </member>
    <member name="P:IVkImageViewCreateInfo.components"></member>
    <member name="P:IVkImageViewCreateInfo.flags"></member>
    <member name="P:IVkImageViewCreateInfo.format"></member>
    <member name="P:IVkImageViewCreateInfo.image"></member>
    <member name="P:IVkImageViewCreateInfo.pNext"></member>
    <member name="P:IVkImageViewCreateInfo.sType"></member>
    <member name="P:IVkImageViewCreateInfo.subresourceRange"></member>
    <member name="P:IVkImageViewCreateInfo.viewType"></member>
    <member name="T:IVkImportMemoryFdInfoKHX"></member>
    <member name="P:IVkImportMemoryFdInfoKHX.fd"></member>
    <member name="P:IVkImportMemoryFdInfoKHX.handleType"></member>
    <member name="P:IVkImportMemoryFdInfoKHX.pNext"></member>
    <member name="P:IVkImportMemoryFdInfoKHX.sType"></member>
    <member name="T:IVkImportSemaphoreFdInfoKHX"></member>
    <member name="P:IVkImportSemaphoreFdInfoKHX.fd"></member>
    <member name="P:IVkImportSemaphoreFdInfoKHX.handleType"></member>
    <member name="P:IVkImportSemaphoreFdInfoKHX.pNext"></member>
    <member name="P:IVkImportSemaphoreFdInfoKHX.semaphore"></member>
    <member name="P:IVkImportSemaphoreFdInfoKHX.sType"></member>
    <member name="T:IVkIndirectCommandsLayoutCreateInfoNVX"></member>
    <member name="P:IVkIndirectCommandsLayoutCreateInfoNVX.flags"></member>
    <member name="P:IVkIndirectCommandsLayoutCreateInfoNVX.pipelineBindPoint"></member>
    <member name="P:IVkIndirectCommandsLayoutCreateInfoNVX.pNext"></member>
    <member name="P:IVkIndirectCommandsLayoutCreateInfoNVX.pTokens"></member>
    <member name="P:IVkIndirectCommandsLayoutCreateInfoNVX.sType"></member>
    <member name="P:IVkIndirectCommandsLayoutCreateInfoNVX.tokenCount"></member>
    <member name="T:IVkInstanceCreateInfo">
      <summary>Structure specifying parameters of a newly created instance</summary>
    </member>
    <member name="P:IVkInstanceCreateInfo.enabledExtensionCount"></member>
    <member name="P:IVkInstanceCreateInfo.enabledLayerCount"></member>
    <member name="P:IVkInstanceCreateInfo.flags"></member>
    <member name="P:IVkInstanceCreateInfo.pApplicationInfo"></member>
    <member name="P:IVkInstanceCreateInfo.pNext"></member>
    <member name="P:IVkInstanceCreateInfo.ppEnabledExtensionNames"></member>
    <member name="P:IVkInstanceCreateInfo.ppEnabledLayerNames"></member>
    <member name="P:IVkInstanceCreateInfo.sType"></member>
    <member name="T:IVkMappedMemoryRange">
      <summary>Structure specifying a mapped memory range</summary>
    </member>
    <member name="P:IVkMappedMemoryRange.memory"></member>
    <member name="P:IVkMappedMemoryRange.offset"></member>
    <member name="P:IVkMappedMemoryRange.pNext"></member>
    <member name="P:IVkMappedMemoryRange.size"></member>
    <member name="P:IVkMappedMemoryRange.sType"></member>
    <member name="T:IVkMemoryAllocateFlagsInfoKHX"></member>
    <member name="P:IVkMemoryAllocateFlagsInfoKHX.deviceMask"></member>
    <member name="P:IVkMemoryAllocateFlagsInfoKHX.flags"></member>
    <member name="P:IVkMemoryAllocateFlagsInfoKHX.pNext"></member>
    <member name="P:IVkMemoryAllocateFlagsInfoKHX.sType"></member>
    <member name="T:IVkMemoryAllocateInfo">
      <summary>Structure containing parameters of a memory allocation</summary>
    </member>
    <member name="P:IVkMemoryAllocateInfo.allocationSize"></member>
    <member name="P:IVkMemoryAllocateInfo.memoryTypeIndex"></member>
    <member name="P:IVkMemoryAllocateInfo.pNext"></member>
    <member name="P:IVkMemoryAllocateInfo.sType"></member>
    <member name="T:IVkMemoryBarrier">
      <summary>Structure specifying a global memory barrier</summary>
    </member>
    <member name="P:IVkMemoryBarrier.dstAccessMask"></member>
    <member name="P:IVkMemoryBarrier.pNext"></member>
    <member name="P:IVkMemoryBarrier.srcAccessMask"></member>
    <member name="P:IVkMemoryBarrier.sType"></member>
    <member name="T:IVkMemoryFdPropertiesKHX"></member>
    <member name="P:IVkMemoryFdPropertiesKHX.memoryTypeBits"></member>
    <member name="P:IVkMemoryFdPropertiesKHX.pNext"></member>
    <member name="P:IVkMemoryFdPropertiesKHX.sType"></member>
    <member name="T:IVkObjectTableCreateInfoNVX"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.maxPipelineLayouts"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.maxSampledImagesPerDescriptor"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.maxStorageBuffersPerDescriptor"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.maxStorageImagesPerDescriptor"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.maxUniformBuffersPerDescriptor"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.objectCount"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.pNext"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.pObjectEntryCounts"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.pObjectEntryTypes"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.pObjectEntryUsageFlags"></member>
    <member name="P:IVkObjectTableCreateInfoNVX.sType"></member>
    <member name="T:IVkPhysicalDeviceDiscardRectanglePropertiesEXT"></member>
    <member name="P:IVkPhysicalDeviceDiscardRectanglePropertiesEXT.maxDiscardRectangles"></member>
    <member name="P:IVkPhysicalDeviceDiscardRectanglePropertiesEXT.pNext"></member>
    <member name="P:IVkPhysicalDeviceDiscardRectanglePropertiesEXT.sType"></member>
    <member name="T:IVkPhysicalDeviceExternalBufferInfoKHX"></member>
    <member name="P:IVkPhysicalDeviceExternalBufferInfoKHX.flags"></member>
    <member name="P:IVkPhysicalDeviceExternalBufferInfoKHX.handleType"></member>
    <member name="P:IVkPhysicalDeviceExternalBufferInfoKHX.pNext"></member>
    <member name="P:IVkPhysicalDeviceExternalBufferInfoKHX.sType"></member>
    <member name="P:IVkPhysicalDeviceExternalBufferInfoKHX.usage"></member>
    <member name="T:IVkPhysicalDeviceExternalImageFormatInfoKHX"></member>
    <member name="P:IVkPhysicalDeviceExternalImageFormatInfoKHX.handleType"></member>
    <member name="P:IVkPhysicalDeviceExternalImageFormatInfoKHX.pNext"></member>
    <member name="P:IVkPhysicalDeviceExternalImageFormatInfoKHX.sType"></member>
    <member name="T:IVkPhysicalDeviceExternalSemaphoreInfoKHX"></member>
    <member name="P:IVkPhysicalDeviceExternalSemaphoreInfoKHX.handleType"></member>
    <member name="P:IVkPhysicalDeviceExternalSemaphoreInfoKHX.pNext"></member>
    <member name="P:IVkPhysicalDeviceExternalSemaphoreInfoKHX.sType"></member>
    <member name="T:IVkPhysicalDeviceFeatures2KHR"></member>
    <member name="P:IVkPhysicalDeviceFeatures2KHR.features"></member>
    <member name="P:IVkPhysicalDeviceFeatures2KHR.pNext"></member>
    <member name="P:IVkPhysicalDeviceFeatures2KHR.sType"></member>
    <member name="T:IVkPhysicalDeviceGroupPropertiesKHX"></member>
    <member name="P:IVkPhysicalDeviceGroupPropertiesKHX.physicalDeviceCount"></member>
    <member name="M:IVkPhysicalDeviceGroupPropertiesKHX.physicalDevices(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceGroupPropertiesKHX.pNext"></member>
    <member name="P:IVkPhysicalDeviceGroupPropertiesKHX.sType"></member>
    <member name="P:IVkPhysicalDeviceGroupPropertiesKHX.subsetAllocation"></member>
    <member name="T:IVkPhysicalDeviceIDPropertiesKHX"></member>
    <member name="M:IVkPhysicalDeviceIDPropertiesKHX.deviceLUID(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceIDPropertiesKHX.deviceLUIDValid"></member>
    <member name="M:IVkPhysicalDeviceIDPropertiesKHX.deviceUUID(System.Int32)"></member>
    <member name="M:IVkPhysicalDeviceIDPropertiesKHX.driverUUID(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceIDPropertiesKHX.pNext"></member>
    <member name="P:IVkPhysicalDeviceIDPropertiesKHX.sType"></member>
    <member name="T:IVkPhysicalDeviceImageFormatInfo2KHR"></member>
    <member name="P:IVkPhysicalDeviceImageFormatInfo2KHR.flags"></member>
    <member name="P:IVkPhysicalDeviceImageFormatInfo2KHR.format"></member>
    <member name="P:IVkPhysicalDeviceImageFormatInfo2KHR.pNext"></member>
    <member name="P:IVkPhysicalDeviceImageFormatInfo2KHR.sType"></member>
    <member name="P:IVkPhysicalDeviceImageFormatInfo2KHR.tiling"></member>
    <member name="P:IVkPhysicalDeviceImageFormatInfo2KHR.type"></member>
    <member name="P:IVkPhysicalDeviceImageFormatInfo2KHR.usage"></member>
    <member name="T:IVkPhysicalDeviceLimits">
      <summary>Structure reporting implementation-dependent physical device limits</summary>
    </member>
    <member name="P:IVkPhysicalDeviceLimits.bufferImageGranularity"></member>
    <member name="P:IVkPhysicalDeviceLimits.discreteQueuePriorities"></member>
    <member name="P:IVkPhysicalDeviceLimits.framebufferColorSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.framebufferDepthSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.framebufferNoAttachmentsSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.framebufferStencilSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.lineWidthGranularity"></member>
    <member name="M:IVkPhysicalDeviceLimits.lineWidthRange(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxBoundDescriptorSets"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxClipDistances"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxColorAttachments"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxCombinedClipAndCullDistances"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxComputeSharedMemorySize"></member>
    <member name="M:IVkPhysicalDeviceLimits.maxComputeWorkGroupCount(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxComputeWorkGroupInvocations"></member>
    <member name="M:IVkPhysicalDeviceLimits.maxComputeWorkGroupSize(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxCullDistances"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDescriptorSetInputAttachments"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDescriptorSetSampledImages"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDescriptorSetSamplers"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDescriptorSetStorageBuffers"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDescriptorSetStorageBuffersDynamic"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDescriptorSetStorageImages"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDescriptorSetUniformBuffers"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDescriptorSetUniformBuffersDynamic"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDrawIndexedIndexValue"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxDrawIndirectCount"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxFragmentCombinedOutputResources"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxFragmentDualSrcAttachments"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxFragmentInputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxFragmentOutputAttachments"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxFramebufferHeight"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxFramebufferLayers"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxFramebufferWidth"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxGeometryInputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxGeometryOutputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxGeometryOutputVertices"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxGeometryShaderInvocations"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxGeometryTotalOutputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxImageArrayLayers"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxImageDimension1D"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxImageDimension2D"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxImageDimension3D"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxImageDimensionCube"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxInterpolationOffset"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxMemoryAllocationCount"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxPerStageDescriptorInputAttachments"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxPerStageDescriptorSampledImages"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxPerStageDescriptorSamplers"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxPerStageDescriptorStorageBuffers"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxPerStageDescriptorStorageImages"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxPerStageDescriptorUniformBuffers"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxPerStageResources"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxPushConstantsSize"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxSampleMaskWords"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxSamplerAllocationCount"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxSamplerAnisotropy"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxSamplerLodBias"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxStorageBufferRange"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTessellationControlPerPatchOutputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTessellationControlPerVertexInputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTessellationControlPerVertexOutputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTessellationControlTotalOutputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTessellationEvaluationInputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTessellationEvaluationOutputComponents"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTessellationGenerationLevel"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTessellationPatchSize"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTexelBufferElements"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTexelGatherOffset"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxTexelOffset"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxUniformBufferRange"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxVertexInputAttributeOffset"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxVertexInputAttributes"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxVertexInputBindings"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxVertexInputBindingStride"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxVertexOutputComponents"></member>
    <member name="M:IVkPhysicalDeviceLimits.maxViewportDimensions(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceLimits.maxViewports"></member>
    <member name="P:IVkPhysicalDeviceLimits.minInterpolationOffset"></member>
    <member name="P:IVkPhysicalDeviceLimits.minMemoryMapAlignment"></member>
    <member name="P:IVkPhysicalDeviceLimits.minStorageBufferOffsetAlignment"></member>
    <member name="P:IVkPhysicalDeviceLimits.minTexelBufferOffsetAlignment"></member>
    <member name="P:IVkPhysicalDeviceLimits.minTexelGatherOffset"></member>
    <member name="P:IVkPhysicalDeviceLimits.minTexelOffset"></member>
    <member name="P:IVkPhysicalDeviceLimits.minUniformBufferOffsetAlignment"></member>
    <member name="P:IVkPhysicalDeviceLimits.mipmapPrecisionBits"></member>
    <member name="P:IVkPhysicalDeviceLimits.nonCoherentAtomSize"></member>
    <member name="P:IVkPhysicalDeviceLimits.optimalBufferCopyOffsetAlignment"></member>
    <member name="P:IVkPhysicalDeviceLimits.optimalBufferCopyRowPitchAlignment"></member>
    <member name="P:IVkPhysicalDeviceLimits.pointSizeGranularity"></member>
    <member name="M:IVkPhysicalDeviceLimits.pointSizeRange(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceLimits.sampledImageColorSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.sampledImageDepthSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.sampledImageIntegerSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.sampledImageStencilSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.sparseAddressSpaceSize"></member>
    <member name="P:IVkPhysicalDeviceLimits.standardSampleLocations"></member>
    <member name="P:IVkPhysicalDeviceLimits.storageImageSampleCounts"></member>
    <member name="P:IVkPhysicalDeviceLimits.strictLines"></member>
    <member name="P:IVkPhysicalDeviceLimits.subPixelInterpolationOffsetBits"></member>
    <member name="P:IVkPhysicalDeviceLimits.subPixelPrecisionBits"></member>
    <member name="P:IVkPhysicalDeviceLimits.subTexelPrecisionBits"></member>
    <member name="P:IVkPhysicalDeviceLimits.timestampComputeAndGraphics"></member>
    <member name="P:IVkPhysicalDeviceLimits.timestampPeriod"></member>
    <member name="M:IVkPhysicalDeviceLimits.viewportBoundsRange(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceLimits.viewportSubPixelBits"></member>
    <member name="T:IVkPhysicalDeviceMemoryProperties2KHR"></member>
    <member name="P:IVkPhysicalDeviceMemoryProperties2KHR.memoryProperties"></member>
    <member name="P:IVkPhysicalDeviceMemoryProperties2KHR.pNext"></member>
    <member name="P:IVkPhysicalDeviceMemoryProperties2KHR.sType"></member>
    <member name="T:IVkPhysicalDeviceMultiviewFeaturesKHX"></member>
    <member name="P:IVkPhysicalDeviceMultiviewFeaturesKHX.multiview"></member>
    <member name="P:IVkPhysicalDeviceMultiviewFeaturesKHX.multiviewGeometryShader"></member>
    <member name="P:IVkPhysicalDeviceMultiviewFeaturesKHX.multiviewTessellationShader"></member>
    <member name="P:IVkPhysicalDeviceMultiviewFeaturesKHX.pNext"></member>
    <member name="P:IVkPhysicalDeviceMultiviewFeaturesKHX.sType"></member>
    <member name="T:IVkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX"></member>
    <member name="P:IVkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX.perViewPositionAllComponents"></member>
    <member name="P:IVkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX.pNext"></member>
    <member name="P:IVkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX.sType"></member>
    <member name="T:IVkPhysicalDeviceMultiviewPropertiesKHX"></member>
    <member name="P:IVkPhysicalDeviceMultiviewPropertiesKHX.maxMultiviewInstanceIndex"></member>
    <member name="P:IVkPhysicalDeviceMultiviewPropertiesKHX.maxMultiviewViewCount"></member>
    <member name="P:IVkPhysicalDeviceMultiviewPropertiesKHX.pNext"></member>
    <member name="P:IVkPhysicalDeviceMultiviewPropertiesKHX.sType"></member>
    <member name="T:IVkPhysicalDeviceProperties">
      <summary>Structure specifying physical device properties</summary>
    </member>
    <member name="P:IVkPhysicalDeviceProperties.apiVersion"></member>
    <member name="P:IVkPhysicalDeviceProperties.deviceID"></member>
    <member name="M:IVkPhysicalDeviceProperties.deviceName(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceProperties.deviceType"></member>
    <member name="P:IVkPhysicalDeviceProperties.driverVersion"></member>
    <member name="P:IVkPhysicalDeviceProperties.limits"></member>
    <member name="M:IVkPhysicalDeviceProperties.pipelineCacheUUID(System.Int32)"></member>
    <member name="P:IVkPhysicalDeviceProperties.sparseProperties"></member>
    <member name="P:IVkPhysicalDeviceProperties.vendorID"></member>
    <member name="T:IVkPhysicalDeviceProperties2KHR"></member>
    <member name="P:IVkPhysicalDeviceProperties2KHR.pNext"></member>
    <member name="P:IVkPhysicalDeviceProperties2KHR.properties"></member>
    <member name="P:IVkPhysicalDeviceProperties2KHR.sType"></member>
    <member name="T:IVkPhysicalDevicePushDescriptorPropertiesKHR"></member>
    <member name="P:IVkPhysicalDevicePushDescriptorPropertiesKHR.maxPushDescriptors"></member>
    <member name="P:IVkPhysicalDevicePushDescriptorPropertiesKHR.pNext"></member>
    <member name="P:IVkPhysicalDevicePushDescriptorPropertiesKHR.sType"></member>
    <member name="T:IVkPhysicalDeviceSparseImageFormatInfo2KHR"></member>
    <member name="P:IVkPhysicalDeviceSparseImageFormatInfo2KHR.format"></member>
    <member name="P:IVkPhysicalDeviceSparseImageFormatInfo2KHR.pNext"></member>
    <member name="P:IVkPhysicalDeviceSparseImageFormatInfo2KHR.samples"></member>
    <member name="P:IVkPhysicalDeviceSparseImageFormatInfo2KHR.sType"></member>
    <member name="P:IVkPhysicalDeviceSparseImageFormatInfo2KHR.tiling"></member>
    <member name="P:IVkPhysicalDeviceSparseImageFormatInfo2KHR.type"></member>
    <member name="P:IVkPhysicalDeviceSparseImageFormatInfo2KHR.usage"></member>
    <member name="T:IVkPhysicalDeviceSurfaceInfo2KHR"></member>
    <member name="P:IVkPhysicalDeviceSurfaceInfo2KHR.pNext"></member>
    <member name="P:IVkPhysicalDeviceSurfaceInfo2KHR.sType"></member>
    <member name="P:IVkPhysicalDeviceSurfaceInfo2KHR.surface"></member>
    <member name="T:IVkPipelineCacheCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline cache</summary>
    </member>
    <member name="P:IVkPipelineCacheCreateInfo.flags"></member>
    <member name="P:IVkPipelineCacheCreateInfo.initialDataSize"></member>
    <member name="P:IVkPipelineCacheCreateInfo.pInitialData"></member>
    <member name="P:IVkPipelineCacheCreateInfo.pNext"></member>
    <member name="P:IVkPipelineCacheCreateInfo.sType"></member>
    <member name="T:IVkPipelineColorBlendStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline color blend state</summary>
    </member>
    <member name="P:IVkPipelineColorBlendStateCreateInfo.attachmentCount"></member>
    <member name="M:IVkPipelineColorBlendStateCreateInfo.blendConstants(System.Int32)"></member>
    <member name="P:IVkPipelineColorBlendStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineColorBlendStateCreateInfo.logicOp"></member>
    <member name="P:IVkPipelineColorBlendStateCreateInfo.logicOpEnable"></member>
    <member name="P:IVkPipelineColorBlendStateCreateInfo.pAttachments"></member>
    <member name="P:IVkPipelineColorBlendStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineColorBlendStateCreateInfo.sType"></member>
    <member name="T:IVkPipelineDepthStencilStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline depth stencil state</summary>
    </member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.back"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.depthBoundsTestEnable"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.depthCompareOp"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.depthTestEnable"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.depthWriteEnable"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.front"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.maxDepthBounds"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.minDepthBounds"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.stencilTestEnable"></member>
    <member name="P:IVkPipelineDepthStencilStateCreateInfo.sType"></member>
    <member name="T:IVkPipelineDiscardRectangleStateCreateInfoEXT"></member>
    <member name="P:IVkPipelineDiscardRectangleStateCreateInfoEXT.discardRectangleCount"></member>
    <member name="P:IVkPipelineDiscardRectangleStateCreateInfoEXT.discardRectangleMode"></member>
    <member name="P:IVkPipelineDiscardRectangleStateCreateInfoEXT.flags"></member>
    <member name="P:IVkPipelineDiscardRectangleStateCreateInfoEXT.pDiscardRectangles"></member>
    <member name="P:IVkPipelineDiscardRectangleStateCreateInfoEXT.pNext"></member>
    <member name="P:IVkPipelineDiscardRectangleStateCreateInfoEXT.sType"></member>
    <member name="T:IVkPipelineDynamicStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline dynamic state</summary>
    </member>
    <member name="P:IVkPipelineDynamicStateCreateInfo.dynamicStateCount"></member>
    <member name="P:IVkPipelineDynamicStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineDynamicStateCreateInfo.pDynamicStates"></member>
    <member name="P:IVkPipelineDynamicStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineDynamicStateCreateInfo.sType"></member>
    <member name="T:IVkPipelineInputAssemblyStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline input assembly state</summary>
    </member>
    <member name="P:IVkPipelineInputAssemblyStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineInputAssemblyStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineInputAssemblyStateCreateInfo.primitiveRestartEnable"></member>
    <member name="P:IVkPipelineInputAssemblyStateCreateInfo.sType"></member>
    <member name="P:IVkPipelineInputAssemblyStateCreateInfo.topology"></member>
    <member name="T:IVkPipelineLayoutCreateInfo">
      <summary>Structure specifying the parameters of a newly created pipeline layout object</summary>
    </member>
    <member name="P:IVkPipelineLayoutCreateInfo.flags"></member>
    <member name="P:IVkPipelineLayoutCreateInfo.pNext"></member>
    <member name="P:IVkPipelineLayoutCreateInfo.pPushConstantRanges"></member>
    <member name="P:IVkPipelineLayoutCreateInfo.pSetLayouts"></member>
    <member name="P:IVkPipelineLayoutCreateInfo.pushConstantRangeCount"></member>
    <member name="P:IVkPipelineLayoutCreateInfo.setLayoutCount"></member>
    <member name="P:IVkPipelineLayoutCreateInfo.sType"></member>
    <member name="T:IVkPipelineMultisampleStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline multisample state</summary>
    </member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.alphaToCoverageEnable"></member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.alphaToOneEnable"></member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.minSampleShading"></member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.pSampleMask"></member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.rasterizationSamples"></member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.sampleShadingEnable"></member>
    <member name="P:IVkPipelineMultisampleStateCreateInfo.sType"></member>
    <member name="T:IVkPipelineRasterizationStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline rasterization state</summary>
    </member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.cullMode"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.depthBiasClamp"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.depthBiasConstantFactor"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.depthBiasEnable"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.depthBiasSlopeFactor"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.depthClampEnable"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.frontFace"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.lineWidth"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.polygonMode"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.rasterizerDiscardEnable"></member>
    <member name="P:IVkPipelineRasterizationStateCreateInfo.sType"></member>
    <member name="T:IVkPipelineRasterizationStateRasterizationOrderAMD"></member>
    <member name="P:IVkPipelineRasterizationStateRasterizationOrderAMD.pNext"></member>
    <member name="P:IVkPipelineRasterizationStateRasterizationOrderAMD.rasterizationOrder"></member>
    <member name="P:IVkPipelineRasterizationStateRasterizationOrderAMD.sType"></member>
    <member name="T:IVkPipelineShaderStageCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline shader stage</summary>
    </member>
    <member name="P:IVkPipelineShaderStageCreateInfo.flags"></member>
    <member name="P:IVkPipelineShaderStageCreateInfo.module"></member>
    <member name="P:IVkPipelineShaderStageCreateInfo.pName"></member>
    <member name="P:IVkPipelineShaderStageCreateInfo.pNext"></member>
    <member name="P:IVkPipelineShaderStageCreateInfo.pSpecializationInfo"></member>
    <member name="P:IVkPipelineShaderStageCreateInfo.stage"></member>
    <member name="P:IVkPipelineShaderStageCreateInfo.sType"></member>
    <member name="T:IVkPipelineTessellationStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline tessellation state</summary>
    </member>
    <member name="P:IVkPipelineTessellationStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineTessellationStateCreateInfo.patchControlPoints"></member>
    <member name="P:IVkPipelineTessellationStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineTessellationStateCreateInfo.sType"></member>
    <member name="T:IVkPipelineVertexInputStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline vertex input state</summary>
    </member>
    <member name="P:IVkPipelineVertexInputStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineVertexInputStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineVertexInputStateCreateInfo.pVertexAttributeDescriptions"></member>
    <member name="P:IVkPipelineVertexInputStateCreateInfo.pVertexBindingDescriptions"></member>
    <member name="P:IVkPipelineVertexInputStateCreateInfo.sType"></member>
    <member name="P:IVkPipelineVertexInputStateCreateInfo.vertexAttributeDescriptionCount"></member>
    <member name="P:IVkPipelineVertexInputStateCreateInfo.vertexBindingDescriptionCount"></member>
    <member name="T:IVkPipelineViewportStateCreateInfo">
      <summary>Structure specifying parameters of a newly created pipeline viewport state</summary>
    </member>
    <member name="P:IVkPipelineViewportStateCreateInfo.flags"></member>
    <member name="P:IVkPipelineViewportStateCreateInfo.pNext"></member>
    <member name="P:IVkPipelineViewportStateCreateInfo.pScissors"></member>
    <member name="P:IVkPipelineViewportStateCreateInfo.pViewports"></member>
    <member name="P:IVkPipelineViewportStateCreateInfo.scissorCount"></member>
    <member name="P:IVkPipelineViewportStateCreateInfo.sType"></member>
    <member name="P:IVkPipelineViewportStateCreateInfo.viewportCount"></member>
    <member name="T:IVkPipelineViewportSwizzleStateCreateInfoNV"></member>
    <member name="P:IVkPipelineViewportSwizzleStateCreateInfoNV.flags"></member>
    <member name="P:IVkPipelineViewportSwizzleStateCreateInfoNV.pNext"></member>
    <member name="P:IVkPipelineViewportSwizzleStateCreateInfoNV.pViewportSwizzles"></member>
    <member name="P:IVkPipelineViewportSwizzleStateCreateInfoNV.sType"></member>
    <member name="P:IVkPipelineViewportSwizzleStateCreateInfoNV.viewportCount"></member>
    <member name="T:IVkPipelineViewportWScalingStateCreateInfoNV"></member>
    <member name="P:IVkPipelineViewportWScalingStateCreateInfoNV.pNext"></member>
    <member name="P:IVkPipelineViewportWScalingStateCreateInfoNV.pViewportWScalings"></member>
    <member name="P:IVkPipelineViewportWScalingStateCreateInfoNV.sType"></member>
    <member name="P:IVkPipelineViewportWScalingStateCreateInfoNV.viewportCount"></member>
    <member name="P:IVkPipelineViewportWScalingStateCreateInfoNV.viewportWScalingEnable"></member>
    <member name="T:IVkPresentInfoKHR"></member>
    <member name="P:IVkPresentInfoKHR.pImageIndices"></member>
    <member name="P:IVkPresentInfoKHR.pNext"></member>
    <member name="P:IVkPresentInfoKHR.pResults"></member>
    <member name="P:IVkPresentInfoKHR.pSwapchains"></member>
    <member name="P:IVkPresentInfoKHR.pWaitSemaphores"></member>
    <member name="P:IVkPresentInfoKHR.sType"></member>
    <member name="P:IVkPresentInfoKHR.swapchainCount"></member>
    <member name="P:IVkPresentInfoKHR.waitSemaphoreCount"></member>
    <member name="T:IVkPresentRegionKHR"></member>
    <member name="P:IVkPresentRegionKHR.pRectangles"></member>
    <member name="P:IVkPresentRegionKHR.rectangleCount"></member>
    <member name="T:IVkPresentRegionsKHR"></member>
    <member name="P:IVkPresentRegionsKHR.pNext"></member>
    <member name="P:IVkPresentRegionsKHR.pRegions"></member>
    <member name="P:IVkPresentRegionsKHR.sType"></member>
    <member name="P:IVkPresentRegionsKHR.swapchainCount"></member>
    <member name="T:IVkPresentTimesInfoGOOGLE"></member>
    <member name="P:IVkPresentTimesInfoGOOGLE.pNext"></member>
    <member name="P:IVkPresentTimesInfoGOOGLE.pTimes"></member>
    <member name="P:IVkPresentTimesInfoGOOGLE.sType"></member>
    <member name="P:IVkPresentTimesInfoGOOGLE.swapchainCount"></member>
    <member name="T:IVkQueryPoolCreateInfo">
      <summary>Structure specifying parameters of a newly created query pool</summary>
    </member>
    <member name="P:IVkQueryPoolCreateInfo.flags"></member>
    <member name="P:IVkQueryPoolCreateInfo.pipelineStatistics"></member>
    <member name="P:IVkQueryPoolCreateInfo.pNext"></member>
    <member name="P:IVkQueryPoolCreateInfo.queryCount"></member>
    <member name="P:IVkQueryPoolCreateInfo.queryType"></member>
    <member name="P:IVkQueryPoolCreateInfo.sType"></member>
    <member name="T:IVkQueueFamilyProperties2KHR"></member>
    <member name="P:IVkQueueFamilyProperties2KHR.pNext"></member>
    <member name="P:IVkQueueFamilyProperties2KHR.queueFamilyProperties"></member>
    <member name="P:IVkQueueFamilyProperties2KHR.sType"></member>
    <member name="T:IVkRenderPassBeginInfo">
      <summary>Structure specifying render pass begin info</summary>
    </member>
    <member name="P:IVkRenderPassBeginInfo.clearValueCount"></member>
    <member name="P:IVkRenderPassBeginInfo.framebuffer"></member>
    <member name="P:IVkRenderPassBeginInfo.pClearValues"></member>
    <member name="P:IVkRenderPassBeginInfo.pNext"></member>
    <member name="P:IVkRenderPassBeginInfo.renderArea"></member>
    <member name="P:IVkRenderPassBeginInfo.renderPass"></member>
    <member name="P:IVkRenderPassBeginInfo.sType"></member>
    <member name="T:IVkRenderPassCreateInfo">
      <summary>Structure specifying parameters of a newly created render pass</summary>
    </member>
    <member name="P:IVkRenderPassCreateInfo.attachmentCount"></member>
    <member name="P:IVkRenderPassCreateInfo.dependencyCount"></member>
    <member name="P:IVkRenderPassCreateInfo.flags"></member>
    <member name="P:IVkRenderPassCreateInfo.pAttachments"></member>
    <member name="P:IVkRenderPassCreateInfo.pDependencies"></member>
    <member name="P:IVkRenderPassCreateInfo.pNext"></member>
    <member name="P:IVkRenderPassCreateInfo.pSubpasses"></member>
    <member name="P:IVkRenderPassCreateInfo.sType"></member>
    <member name="P:IVkRenderPassCreateInfo.subpassCount"></member>
    <member name="T:IVkRenderPassMultiviewCreateInfoKHX"></member>
    <member name="P:IVkRenderPassMultiviewCreateInfoKHX.correlationMaskCount"></member>
    <member name="P:IVkRenderPassMultiviewCreateInfoKHX.dependencyCount"></member>
    <member name="P:IVkRenderPassMultiviewCreateInfoKHX.pCorrelationMasks"></member>
    <member name="P:IVkRenderPassMultiviewCreateInfoKHX.pNext"></member>
    <member name="P:IVkRenderPassMultiviewCreateInfoKHX.pViewMasks"></member>
    <member name="P:IVkRenderPassMultiviewCreateInfoKHX.pViewOffsets"></member>
    <member name="P:IVkRenderPassMultiviewCreateInfoKHX.sType"></member>
    <member name="P:IVkRenderPassMultiviewCreateInfoKHX.subpassCount"></member>
    <member name="T:IVkSamplerCreateInfo">
      <summary>Structure specifying parameters of a newly created sampler</summary>
    </member>
    <member name="P:IVkSamplerCreateInfo.addressModeU"></member>
    <member name="P:IVkSamplerCreateInfo.addressModeV"></member>
    <member name="P:IVkSamplerCreateInfo.addressModeW"></member>
    <member name="P:IVkSamplerCreateInfo.anisotropyEnable"></member>
    <member name="P:IVkSamplerCreateInfo.borderColor"></member>
    <member name="P:IVkSamplerCreateInfo.compareEnable"></member>
    <member name="P:IVkSamplerCreateInfo.compareOp"></member>
    <member name="P:IVkSamplerCreateInfo.flags"></member>
    <member name="P:IVkSamplerCreateInfo.magFilter"></member>
    <member name="P:IVkSamplerCreateInfo.maxAnisotropy"></member>
    <member name="P:IVkSamplerCreateInfo.maxLod"></member>
    <member name="P:IVkSamplerCreateInfo.minFilter"></member>
    <member name="P:IVkSamplerCreateInfo.minLod"></member>
    <member name="P:IVkSamplerCreateInfo.mipLodBias"></member>
    <member name="P:IVkSamplerCreateInfo.mipmapMode"></member>
    <member name="P:IVkSamplerCreateInfo.pNext"></member>
    <member name="P:IVkSamplerCreateInfo.sType"></member>
    <member name="P:IVkSamplerCreateInfo.unnormalizedCoordinates"></member>
    <member name="T:IVkSemaphoreCreateInfo">
      <summary>Structure specifying parameters of a newly created semaphore</summary>
    </member>
    <member name="P:IVkSemaphoreCreateInfo.flags"></member>
    <member name="P:IVkSemaphoreCreateInfo.pNext"></member>
    <member name="P:IVkSemaphoreCreateInfo.sType"></member>
    <member name="T:IVkShaderModuleCreateInfo">
      <summary>Structure specifying parameters of a newly created shader module</summary>
    </member>
    <member name="P:IVkShaderModuleCreateInfo.codeSize"></member>
    <member name="P:IVkShaderModuleCreateInfo.flags"></member>
    <member name="P:IVkShaderModuleCreateInfo.pCode"></member>
    <member name="P:IVkShaderModuleCreateInfo.pNext"></member>
    <member name="P:IVkShaderModuleCreateInfo.sType"></member>
    <member name="T:IVkSharedPresentSurfaceCapabilitiesKHR"></member>
    <member name="P:IVkSharedPresentSurfaceCapabilitiesKHR.pNext"></member>
    <member name="P:IVkSharedPresentSurfaceCapabilitiesKHR.sharedPresentSupportedUsageFlags"></member>
    <member name="P:IVkSharedPresentSurfaceCapabilitiesKHR.sType"></member>
    <member name="T:IVkSparseBufferMemoryBindInfo">
      <summary>Structure specifying a sparse buffer memory bind operation</summary>
    </member>
    <member name="P:IVkSparseBufferMemoryBindInfo.bindCount"></member>
    <member name="P:IVkSparseBufferMemoryBindInfo.buffer"></member>
    <member name="P:IVkSparseBufferMemoryBindInfo.pBinds"></member>
    <member name="T:IVkSparseImageFormatProperties2KHR"></member>
    <member name="P:IVkSparseImageFormatProperties2KHR.pNext"></member>
    <member name="P:IVkSparseImageFormatProperties2KHR.properties"></member>
    <member name="P:IVkSparseImageFormatProperties2KHR.sType"></member>
    <member name="T:IVkSparseImageMemoryBindInfo">
      <summary>Structure specifying sparse image memory bind info</summary>
    </member>
    <member name="P:IVkSparseImageMemoryBindInfo.bindCount"></member>
    <member name="P:IVkSparseImageMemoryBindInfo.image"></member>
    <member name="P:IVkSparseImageMemoryBindInfo.pBinds"></member>
    <member name="T:IVkSparseImageOpaqueMemoryBindInfo">
      <summary>Structure specifying sparse image opaque memory bind info</summary>
    </member>
    <member name="P:IVkSparseImageOpaqueMemoryBindInfo.bindCount"></member>
    <member name="P:IVkSparseImageOpaqueMemoryBindInfo.image"></member>
    <member name="P:IVkSparseImageOpaqueMemoryBindInfo.pBinds"></member>
    <member name="T:IVkSpecializationInfo">
      <summary>Structure specifying specialization info</summary>
    </member>
    <member name="P:IVkSpecializationInfo.dataSize"></member>
    <member name="P:IVkSpecializationInfo.mapEntryCount"></member>
    <member name="P:IVkSpecializationInfo.pData"></member>
    <member name="P:IVkSpecializationInfo.pMapEntries"></member>
    <member name="T:IVkSpecializationMapEntry">
      <summary>Structure specifying a specialization map entry</summary>
    </member>
    <member name="P:IVkSpecializationMapEntry.constantID"></member>
    <member name="P:IVkSpecializationMapEntry.offset"></member>
    <member name="P:IVkSpecializationMapEntry.size"></member>
    <member name="T:IVkSubmitInfo">
      <summary>Structure specifying a queue submit operation</summary>
    </member>
    <member name="P:IVkSubmitInfo.commandBufferCount"></member>
    <member name="P:IVkSubmitInfo.pCommandBuffers"></member>
    <member name="P:IVkSubmitInfo.pNext"></member>
    <member name="P:IVkSubmitInfo.pSignalSemaphores"></member>
    <member name="P:IVkSubmitInfo.pWaitDstStageMask"></member>
    <member name="P:IVkSubmitInfo.pWaitSemaphores"></member>
    <member name="P:IVkSubmitInfo.signalSemaphoreCount"></member>
    <member name="P:IVkSubmitInfo.sType"></member>
    <member name="P:IVkSubmitInfo.waitSemaphoreCount"></member>
    <member name="T:IVkSubpassDescription">
      <summary>Structure specifying a subpass description</summary>
    </member>
    <member name="P:IVkSubpassDescription.colorAttachmentCount"></member>
    <member name="P:IVkSubpassDescription.flags"></member>
    <member name="P:IVkSubpassDescription.inputAttachmentCount"></member>
    <member name="P:IVkSubpassDescription.pColorAttachments"></member>
    <member name="P:IVkSubpassDescription.pDepthStencilAttachment"></member>
    <member name="P:IVkSubpassDescription.pInputAttachments"></member>
    <member name="P:IVkSubpassDescription.pipelineBindPoint"></member>
    <member name="P:IVkSubpassDescription.pPreserveAttachments"></member>
    <member name="P:IVkSubpassDescription.preserveAttachmentCount"></member>
    <member name="P:IVkSubpassDescription.pResolveAttachments"></member>
    <member name="T:IVkSurfaceCapabilities2EXT"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.currentExtent"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.currentTransform"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.maxImageArrayLayers"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.maxImageCount"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.maxImageExtent"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.minImageCount"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.minImageExtent"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.pNext"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.sType"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.supportedCompositeAlpha"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.supportedSurfaceCounters"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.supportedTransforms"></member>
    <member name="P:IVkSurfaceCapabilities2EXT.supportedUsageFlags"></member>
    <member name="T:IVkSurfaceCapabilities2KHR"></member>
    <member name="P:IVkSurfaceCapabilities2KHR.pNext"></member>
    <member name="P:IVkSurfaceCapabilities2KHR.sType"></member>
    <member name="P:IVkSurfaceCapabilities2KHR.surfaceCapabilities"></member>
    <member name="T:IVkSurfaceFormat2KHR"></member>
    <member name="P:IVkSurfaceFormat2KHR.pNext"></member>
    <member name="P:IVkSurfaceFormat2KHR.sType"></member>
    <member name="P:IVkSurfaceFormat2KHR.surfaceFormat"></member>
    <member name="T:IVkSwapchainCounterCreateInfoEXT"></member>
    <member name="P:IVkSwapchainCounterCreateInfoEXT.pNext"></member>
    <member name="P:IVkSwapchainCounterCreateInfoEXT.sType"></member>
    <member name="P:IVkSwapchainCounterCreateInfoEXT.surfaceCounters"></member>
    <member name="T:IVkSwapchainCreateInfoKHR"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.clipped"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.compositeAlpha"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.flags"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.imageArrayLayers"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.imageColorSpace"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.imageExtent"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.imageFormat"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.imageSharingMode"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.imageUsage"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.minImageCount"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.oldSwapchain"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.pNext"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.pQueueFamilyIndices"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.presentMode"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.preTransform"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.queueFamilyIndexCount"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.sType"></member>
    <member name="P:IVkSwapchainCreateInfoKHR.surface"></member>
    <member name="T:IVkTextureLODGatherFormatPropertiesAMD"></member>
    <member name="P:IVkTextureLODGatherFormatPropertiesAMD.pNext"></member>
    <member name="P:IVkTextureLODGatherFormatPropertiesAMD.sType"></member>
    <member name="P:IVkTextureLODGatherFormatPropertiesAMD.supportsTextureGatherLODBiasAMD"></member>
    <member name="T:IVkValidationFlagsEXT"></member>
    <member name="P:IVkValidationFlagsEXT.disabledValidationCheckCount"></member>
    <member name="P:IVkValidationFlagsEXT.pDisabledValidationChecks"></member>
    <member name="P:IVkValidationFlagsEXT.pNext"></member>
    <member name="P:IVkValidationFlagsEXT.sType"></member>
    <member name="T:IVkWriteDescriptorSet">
      <summary>Structure specifying the parameters of a descriptor set write operation</summary>
    </member>
    <member name="P:IVkWriteDescriptorSet.descriptorCount"></member>
    <member name="P:IVkWriteDescriptorSet.descriptorType"></member>
    <member name="P:IVkWriteDescriptorSet.dstArrayElement"></member>
    <member name="P:IVkWriteDescriptorSet.dstBinding"></member>
    <member name="P:IVkWriteDescriptorSet.dstSet"></member>
    <member name="P:IVkWriteDescriptorSet.pBufferInfo"></member>
    <member name="P:IVkWriteDescriptorSet.pImageInfo"></member>
    <member name="P:IVkWriteDescriptorSet.pNext"></member>
    <member name="P:IVkWriteDescriptorSet.pTexelBufferView"></member>
    <member name="P:IVkWriteDescriptorSet.sType"></member>
    <member name="T:PFN_vkAllocationFunction">
      <summary>Application-defined memory allocation function</summary>
    </member>
    <member name="M:PFN_vkAllocationFunction.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>PFN_vkAllocationFunction</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:PFN_vkAllocationFunction.Invoke(System.Void*,System.UInt64,System.UInt64,VkSystemAllocationScope)"></member>
    <member name="T:PFN_vkDebugReportCallbackEXT"></member>
    <member name="M:PFN_vkDebugReportCallbackEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>PFN_vkDebugReportCallbackEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:PFN_vkDebugReportCallbackEXT.Invoke(VkDebugReportFlagsEXT,VkDebugReportObjectTypeEXT,System.UInt64,System.UInt64,System.Int32,System.SByte*,System.SByte*,System.Void*)"></member>
    <member name="T:PFN_vkFreeFunction">
      <summary>Application-defined memory free function</summary>
    </member>
    <member name="M:PFN_vkFreeFunction.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>PFN_vkFreeFunction</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:PFN_vkFreeFunction.Invoke(System.Void*,System.Void*)"></member>
    <member name="T:PFN_vkInternalAllocationNotification">
      <summary>Application-defined memory allocation notification function</summary>
    </member>
    <member name="M:PFN_vkInternalAllocationNotification.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>PFN_vkInternalAllocationNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:PFN_vkInternalAllocationNotification.Invoke(System.Void*,System.UInt64,VkInternalAllocationType,VkSystemAllocationScope)"></member>
    <member name="T:PFN_vkInternalFreeNotification">
      <summary>Application-defined memory free notification function</summary>
    </member>
    <member name="M:PFN_vkInternalFreeNotification.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>PFN_vkInternalFreeNotification</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:PFN_vkInternalFreeNotification.Invoke(System.Void*,System.UInt64,VkInternalAllocationType,VkSystemAllocationScope)"></member>
    <member name="T:PFN_vkReallocationFunction">
      <summary>Application-defined memory reallocation function</summary>
    </member>
    <member name="M:PFN_vkReallocationFunction.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>PFN_vkReallocationFunction</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:PFN_vkReallocationFunction.Invoke(System.Void*,System.Void*,System.UInt64,System.UInt64,VkSystemAllocationScope)"></member>
    <member name="T:PFN_vkVoidFunction">
      <summary>Dummy function pointer type returned by queries</summary>
    </member>
    <member name="M:PFN_vkVoidFunction.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>PFN_vkVoidFunction</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:PFN_vkVoidFunction.Invoke"></member>
    <member name="T:VkAccessFlags"></member>
    <member name="F:VkAccessFlags.value__"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_COLOR_ATTACHMENT_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_HOST_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_HOST_WRITE_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_INDEX_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_INDIRECT_COMMAND_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_INPUT_ATTACHMENT_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_MEMORY_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_MEMORY_WRITE_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_SHADER_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_SHADER_WRITE_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_TRANSFER_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_TRANSFER_WRITE_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_UNIFORM_READ_BIT"></member>
    <member name="F:VkAccessFlags.VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT"></member>
    <member name="T:vkAcquireNextImage2KHX"></member>
    <member name="M:vkAcquireNextImage2KHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkAcquireNextImage2KHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkAcquireNextImage2KHX.Invoke(VkDevice*,IVkAcquireNextImageInfoKHX*,System.UInt32*)"></member>
    <member name="T:VkAcquireNextImageInfoKHX32"></member>
    <member name="F:VkAcquireNextImageInfoKHX32.deviceMask"></member>
    <member name="F:VkAcquireNextImageInfoKHX32.fence"></member>
    <member name="F:VkAcquireNextImageInfoKHX32.pNext"></member>
    <member name="F:VkAcquireNextImageInfoKHX32.semaphore"></member>
    <member name="F:VkAcquireNextImageInfoKHX32.sType"></member>
    <member name="F:VkAcquireNextImageInfoKHX32.swapchain"></member>
    <member name="F:VkAcquireNextImageInfoKHX32.timeout"></member>
    <member name="T:VkAcquireNextImageInfoKHX64"></member>
    <member name="F:VkAcquireNextImageInfoKHX64.deviceMask"></member>
    <member name="F:VkAcquireNextImageInfoKHX64.fence"></member>
    <member name="F:VkAcquireNextImageInfoKHX64.pNext"></member>
    <member name="F:VkAcquireNextImageInfoKHX64.semaphore"></member>
    <member name="F:VkAcquireNextImageInfoKHX64.sType"></member>
    <member name="F:VkAcquireNextImageInfoKHX64.swapchain"></member>
    <member name="F:VkAcquireNextImageInfoKHX64.timeout"></member>
    <member name="T:vkAcquireNextImageKHR"></member>
    <member name="M:vkAcquireNextImageKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkAcquireNextImageKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkAcquireNextImageKHR.Invoke(VkDevice*,VkSwapchainKHR*,System.UInt64,VkSemaphore*,VkFence*,System.UInt32*)"></member>
    <member name="T:vkAllocateCommandBuffers">
      <summary>Allocate command buffers from an existing command pool</summary>
    </member>
    <member name="M:vkAllocateCommandBuffers.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkAllocateCommandBuffers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkAllocateCommandBuffers.Invoke(VkDevice*,IVkCommandBufferAllocateInfo*,VkCommandBuffer**)"></member>
    <member name="T:vkAllocateDescriptorSets">
      <summary>Allocate one or more descriptor sets</summary>
    </member>
    <member name="M:vkAllocateDescriptorSets.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkAllocateDescriptorSets</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkAllocateDescriptorSets.Invoke(VkDevice*,IVkDescriptorSetAllocateInfo*,VkDescriptorSet**)"></member>
    <member name="T:vkAllocateMemory">
      <summary>Allocate GPU memory</summary>
    </member>
    <member name="M:vkAllocateMemory.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkAllocateMemory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkAllocateMemory.Invoke(VkDevice*,IVkMemoryAllocateInfo*,IVkAllocationCallbacks*,VkDeviceMemory**)"></member>
    <member name="T:VkAllocationCallbacks32">
      <summary>Structure containing callback function pointers for memory allocation</summary>
    </member>
    <member name="F:VkAllocationCallbacks32.pfnAllocation"></member>
    <member name="F:VkAllocationCallbacks32.pfnFree"></member>
    <member name="F:VkAllocationCallbacks32.pfnInternalAllocation"></member>
    <member name="F:VkAllocationCallbacks32.pfnInternalFree"></member>
    <member name="F:VkAllocationCallbacks32.pfnReallocation"></member>
    <member name="F:VkAllocationCallbacks32.pUserData"></member>
    <member name="T:VkAllocationCallbacks64">
      <summary>Structure containing callback function pointers for memory allocation</summary>
    </member>
    <member name="F:VkAllocationCallbacks64.pfnAllocation"></member>
    <member name="F:VkAllocationCallbacks64.pfnFree"></member>
    <member name="F:VkAllocationCallbacks64.pfnInternalAllocation"></member>
    <member name="F:VkAllocationCallbacks64.pfnInternalFree"></member>
    <member name="F:VkAllocationCallbacks64.pfnReallocation"></member>
    <member name="F:VkAllocationCallbacks64.pUserData"></member>
    <member name="T:VkAndroidSurfaceCreateFlagsKHR"></member>
    <member name="F:VkAndroidSurfaceCreateFlagsKHR.value__"></member>
    <member name="T:VkApplicationInfo32">
      <summary>Structure specifying application info</summary>
    </member>
    <member name="F:VkApplicationInfo32.apiVersion"></member>
    <member name="F:VkApplicationInfo32.applicationVersion"></member>
    <member name="F:VkApplicationInfo32.engineVersion"></member>
    <member name="F:VkApplicationInfo32.pApplicationName"></member>
    <member name="F:VkApplicationInfo32.pEngineName"></member>
    <member name="F:VkApplicationInfo32.pNext"></member>
    <member name="F:VkApplicationInfo32.sType"></member>
    <member name="T:VkApplicationInfo64">
      <summary>Structure specifying application info</summary>
    </member>
    <member name="F:VkApplicationInfo64.apiVersion"></member>
    <member name="F:VkApplicationInfo64.applicationVersion"></member>
    <member name="F:VkApplicationInfo64.engineVersion"></member>
    <member name="F:VkApplicationInfo64.pApplicationName"></member>
    <member name="F:VkApplicationInfo64.pEngineName"></member>
    <member name="F:VkApplicationInfo64.pNext"></member>
    <member name="F:VkApplicationInfo64.sType"></member>
    <member name="T:VkAttachmentDescription">
      <summary>Structure specifying an attachment description</summary>
    </member>
    <member name="F:VkAttachmentDescription.finalLayout"></member>
    <member name="F:VkAttachmentDescription.flags"></member>
    <member name="F:VkAttachmentDescription.format"></member>
    <member name="F:VkAttachmentDescription.initialLayout"></member>
    <member name="F:VkAttachmentDescription.loadOp"></member>
    <member name="F:VkAttachmentDescription.samples"></member>
    <member name="F:VkAttachmentDescription.stencilLoadOp"></member>
    <member name="F:VkAttachmentDescription.stencilStoreOp"></member>
    <member name="F:VkAttachmentDescription.storeOp"></member>
    <member name="T:VkAttachmentDescriptionFlags"></member>
    <member name="F:VkAttachmentDescriptionFlags.value__"></member>
    <member name="F:VkAttachmentDescriptionFlags.VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkAttachmentDescriptionFlags.VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT"></member>
    <member name="T:VkAttachmentLoadOp"></member>
    <member name="F:VkAttachmentLoadOp.value__"></member>
    <member name="F:VkAttachmentLoadOp.VK_ATTACHMENT_LOAD_OP_BEGIN_RANGE"></member>
    <member name="F:VkAttachmentLoadOp.VK_ATTACHMENT_LOAD_OP_CLEAR"></member>
    <member name="F:VkAttachmentLoadOp.VK_ATTACHMENT_LOAD_OP_DONT_CARE"></member>
    <member name="F:VkAttachmentLoadOp.VK_ATTACHMENT_LOAD_OP_END_RANGE"></member>
    <member name="F:VkAttachmentLoadOp.VK_ATTACHMENT_LOAD_OP_LOAD"></member>
    <member name="F:VkAttachmentLoadOp.VK_ATTACHMENT_LOAD_OP_MAX_ENUM"></member>
    <member name="F:VkAttachmentLoadOp.VK_ATTACHMENT_LOAD_OP_RANGE_SIZE"></member>
    <member name="T:VkAttachmentReference">
      <summary>Structure specifying an attachment reference</summary>
    </member>
    <member name="F:VkAttachmentReference.attachment"></member>
    <member name="F:VkAttachmentReference.layout"></member>
    <member name="T:VkAttachmentStoreOp"></member>
    <member name="F:VkAttachmentStoreOp.value__"></member>
    <member name="F:VkAttachmentStoreOp.VK_ATTACHMENT_STORE_OP_BEGIN_RANGE"></member>
    <member name="F:VkAttachmentStoreOp.VK_ATTACHMENT_STORE_OP_DONT_CARE"></member>
    <member name="F:VkAttachmentStoreOp.VK_ATTACHMENT_STORE_OP_END_RANGE"></member>
    <member name="F:VkAttachmentStoreOp.VK_ATTACHMENT_STORE_OP_MAX_ENUM"></member>
    <member name="F:VkAttachmentStoreOp.VK_ATTACHMENT_STORE_OP_RANGE_SIZE"></member>
    <member name="F:VkAttachmentStoreOp.VK_ATTACHMENT_STORE_OP_STORE"></member>
    <member name="T:vkBeginCommandBuffer">
      <summary>Start recording a command buffer</summary>
    </member>
    <member name="M:vkBeginCommandBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkBeginCommandBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkBeginCommandBuffer.Invoke(VkCommandBuffer*,IVkCommandBufferBeginInfo*)"></member>
    <member name="T:vkBindBufferMemory">
      <summary>Bind device memory to a buffer object</summary>
    </member>
    <member name="M:vkBindBufferMemory.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkBindBufferMemory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkBindBufferMemory.Invoke(VkDevice*,VkBuffer*,VkDeviceMemory*,System.UInt64)"></member>
    <member name="T:vkBindBufferMemory2KHX"></member>
    <member name="M:vkBindBufferMemory2KHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkBindBufferMemory2KHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkBindBufferMemory2KHX.Invoke(VkDevice*,System.UInt32,IVkBindBufferMemoryInfoKHX*)"></member>
    <member name="T:VkBindBufferMemoryInfoKHX32"></member>
    <member name="F:VkBindBufferMemoryInfoKHX32.buffer"></member>
    <member name="F:VkBindBufferMemoryInfoKHX32.deviceIndexCount"></member>
    <member name="F:VkBindBufferMemoryInfoKHX32.memory"></member>
    <member name="F:VkBindBufferMemoryInfoKHX32.memoryOffset"></member>
    <member name="F:VkBindBufferMemoryInfoKHX32.pDeviceIndices"></member>
    <member name="F:VkBindBufferMemoryInfoKHX32.pNext"></member>
    <member name="F:VkBindBufferMemoryInfoKHX32.sType"></member>
    <member name="T:VkBindBufferMemoryInfoKHX64"></member>
    <member name="F:VkBindBufferMemoryInfoKHX64.buffer"></member>
    <member name="F:VkBindBufferMemoryInfoKHX64.deviceIndexCount"></member>
    <member name="F:VkBindBufferMemoryInfoKHX64.memory"></member>
    <member name="F:VkBindBufferMemoryInfoKHX64.memoryOffset"></member>
    <member name="F:VkBindBufferMemoryInfoKHX64.pDeviceIndices"></member>
    <member name="F:VkBindBufferMemoryInfoKHX64.pNext"></member>
    <member name="F:VkBindBufferMemoryInfoKHX64.sType"></member>
    <member name="T:vkBindImageMemory">
      <summary>Bind device memory to an image object</summary>
    </member>
    <member name="M:vkBindImageMemory.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkBindImageMemory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkBindImageMemory.Invoke(VkDevice*,VkImage*,VkDeviceMemory*,System.UInt64)"></member>
    <member name="T:vkBindImageMemory2KHX"></member>
    <member name="M:vkBindImageMemory2KHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkBindImageMemory2KHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkBindImageMemory2KHX.Invoke(VkDevice*,System.UInt32,IVkBindImageMemoryInfoKHX*)"></member>
    <member name="T:VkBindImageMemoryInfoKHX32"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.deviceIndexCount"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.image"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.memory"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.memoryOffset"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.pDeviceIndices"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.pNext"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.pSFRRects"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.SFRRectCount"></member>
    <member name="F:VkBindImageMemoryInfoKHX32.sType"></member>
    <member name="T:VkBindImageMemoryInfoKHX64"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.deviceIndexCount"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.image"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.memory"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.memoryOffset"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.pDeviceIndices"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.pNext"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.pSFRRects"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.SFRRectCount"></member>
    <member name="F:VkBindImageMemoryInfoKHX64.sType"></member>
    <member name="T:VkBindImageMemorySwapchainInfoKHX32"></member>
    <member name="F:VkBindImageMemorySwapchainInfoKHX32.imageIndex"></member>
    <member name="F:VkBindImageMemorySwapchainInfoKHX32.pNext"></member>
    <member name="F:VkBindImageMemorySwapchainInfoKHX32.sType"></member>
    <member name="F:VkBindImageMemorySwapchainInfoKHX32.swapchain"></member>
    <member name="T:VkBindImageMemorySwapchainInfoKHX64"></member>
    <member name="F:VkBindImageMemorySwapchainInfoKHX64.imageIndex"></member>
    <member name="F:VkBindImageMemorySwapchainInfoKHX64.pNext"></member>
    <member name="F:VkBindImageMemorySwapchainInfoKHX64.sType"></member>
    <member name="F:VkBindImageMemorySwapchainInfoKHX64.swapchain"></member>
    <member name="T:VkBindSparseInfo32">
      <summary>Structure specifying a sparse binding operation</summary>
    </member>
    <member name="F:VkBindSparseInfo32.bufferBindCount"></member>
    <member name="F:VkBindSparseInfo32.imageBindCount"></member>
    <member name="F:VkBindSparseInfo32.imageOpaqueBindCount"></member>
    <member name="F:VkBindSparseInfo32.pBufferBinds"></member>
    <member name="F:VkBindSparseInfo32.pImageBinds"></member>
    <member name="F:VkBindSparseInfo32.pImageOpaqueBinds"></member>
    <member name="F:VkBindSparseInfo32.pNext"></member>
    <member name="F:VkBindSparseInfo32.pSignalSemaphores"></member>
    <member name="F:VkBindSparseInfo32.pWaitSemaphores"></member>
    <member name="F:VkBindSparseInfo32.signalSemaphoreCount"></member>
    <member name="F:VkBindSparseInfo32.sType"></member>
    <member name="F:VkBindSparseInfo32.waitSemaphoreCount"></member>
    <member name="T:VkBindSparseInfo64">
      <summary>Structure specifying a sparse binding operation</summary>
    </member>
    <member name="F:VkBindSparseInfo64.bufferBindCount"></member>
    <member name="F:VkBindSparseInfo64.imageBindCount"></member>
    <member name="F:VkBindSparseInfo64.imageOpaqueBindCount"></member>
    <member name="F:VkBindSparseInfo64.pBufferBinds"></member>
    <member name="F:VkBindSparseInfo64.pImageBinds"></member>
    <member name="F:VkBindSparseInfo64.pImageOpaqueBinds"></member>
    <member name="F:VkBindSparseInfo64.pNext"></member>
    <member name="F:VkBindSparseInfo64.pSignalSemaphores"></member>
    <member name="F:VkBindSparseInfo64.pWaitSemaphores"></member>
    <member name="F:VkBindSparseInfo64.signalSemaphoreCount"></member>
    <member name="F:VkBindSparseInfo64.sType"></member>
    <member name="F:VkBindSparseInfo64.waitSemaphoreCount"></member>
    <member name="T:VkBlendFactor"></member>
    <member name="F:VkBlendFactor.value__"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_BEGIN_RANGE"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_CONSTANT_ALPHA"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_CONSTANT_COLOR"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_DST_ALPHA"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_DST_COLOR"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_END_RANGE"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_MAX_ENUM"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_RANGE_SIZE"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_SRC_ALPHA"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_SRC_ALPHA_SATURATE"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_SRC_COLOR"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_SRC1_ALPHA"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_SRC1_COLOR"></member>
    <member name="F:VkBlendFactor.VK_BLEND_FACTOR_ZERO"></member>
    <member name="T:VkBlendOp"></member>
    <member name="F:VkBlendOp.value__"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_ADD"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_BEGIN_RANGE"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_END_RANGE"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_MAX"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_MAX_ENUM"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_MIN"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_RANGE_SIZE"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_REVERSE_SUBTRACT"></member>
    <member name="F:VkBlendOp.VK_BLEND_OP_SUBTRACT"></member>
    <member name="T:VkBorderColor"></member>
    <member name="F:VkBorderColor.value__"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_BEGIN_RANGE"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_END_RANGE"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_INT_OPAQUE_BLACK"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_INT_OPAQUE_WHITE"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_INT_TRANSPARENT_BLACK"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_MAX_ENUM"></member>
    <member name="F:VkBorderColor.VK_BORDER_COLOR_RANGE_SIZE"></member>
    <member name="T:VkBuffer">
      <summary>Opaque handle to a buffer object</summary>
    </member>
    <member name="M:VkBuffer.Cast(System.UInt64)"></member>
    <member name="T:VkBufferCopy">
      <summary>Structure specifying a buffer copy operation</summary>
    </member>
    <member name="F:VkBufferCopy.dstOffset"></member>
    <member name="F:VkBufferCopy.size"></member>
    <member name="F:VkBufferCopy.srcOffset"></member>
    <member name="T:VkBufferCreateFlags"></member>
    <member name="F:VkBufferCreateFlags.value__"></member>
    <member name="F:VkBufferCreateFlags.VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkBufferCreateFlags.VK_BUFFER_CREATE_SPARSE_ALIASED_BIT"></member>
    <member name="F:VkBufferCreateFlags.VK_BUFFER_CREATE_SPARSE_BINDING_BIT"></member>
    <member name="F:VkBufferCreateFlags.VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT"></member>
    <member name="T:VkBufferCreateInfo32">
      <summary>Structure specifying the parameters of a newly created buffer object</summary>
    </member>
    <member name="F:VkBufferCreateInfo32.flags"></member>
    <member name="F:VkBufferCreateInfo32.pNext"></member>
    <member name="F:VkBufferCreateInfo32.pQueueFamilyIndices"></member>
    <member name="F:VkBufferCreateInfo32.queueFamilyIndexCount"></member>
    <member name="F:VkBufferCreateInfo32.sharingMode"></member>
    <member name="F:VkBufferCreateInfo32.size"></member>
    <member name="F:VkBufferCreateInfo32.sType"></member>
    <member name="F:VkBufferCreateInfo32.usage"></member>
    <member name="T:VkBufferCreateInfo64">
      <summary>Structure specifying the parameters of a newly created buffer object</summary>
    </member>
    <member name="F:VkBufferCreateInfo64.flags"></member>
    <member name="F:VkBufferCreateInfo64.pNext"></member>
    <member name="F:VkBufferCreateInfo64.pQueueFamilyIndices"></member>
    <member name="F:VkBufferCreateInfo64.queueFamilyIndexCount"></member>
    <member name="F:VkBufferCreateInfo64.sharingMode"></member>
    <member name="F:VkBufferCreateInfo64.size"></member>
    <member name="F:VkBufferCreateInfo64.sType"></member>
    <member name="F:VkBufferCreateInfo64.usage"></member>
    <member name="T:VkBufferImageCopy">
      <summary>Structure specifying a buffer image copy operation</summary>
    </member>
    <member name="F:VkBufferImageCopy.bufferImageHeight"></member>
    <member name="F:VkBufferImageCopy.bufferOffset"></member>
    <member name="F:VkBufferImageCopy.bufferRowLength"></member>
    <member name="F:VkBufferImageCopy.imageExtent"></member>
    <member name="F:VkBufferImageCopy.imageOffset"></member>
    <member name="F:VkBufferImageCopy.imageSubresource"></member>
    <member name="T:VkBufferMemoryBarrier32">
      <summary>Structure specifying a buffer memory barrier</summary>
    </member>
    <member name="F:VkBufferMemoryBarrier32.buffer"></member>
    <member name="F:VkBufferMemoryBarrier32.dstAccessMask"></member>
    <member name="F:VkBufferMemoryBarrier32.dstQueueFamilyIndex"></member>
    <member name="F:VkBufferMemoryBarrier32.offset"></member>
    <member name="F:VkBufferMemoryBarrier32.pNext"></member>
    <member name="F:VkBufferMemoryBarrier32.size"></member>
    <member name="F:VkBufferMemoryBarrier32.srcAccessMask"></member>
    <member name="F:VkBufferMemoryBarrier32.srcQueueFamilyIndex"></member>
    <member name="F:VkBufferMemoryBarrier32.sType"></member>
    <member name="T:VkBufferMemoryBarrier64">
      <summary>Structure specifying a buffer memory barrier</summary>
    </member>
    <member name="F:VkBufferMemoryBarrier64.buffer"></member>
    <member name="F:VkBufferMemoryBarrier64.dstAccessMask"></member>
    <member name="F:VkBufferMemoryBarrier64.dstQueueFamilyIndex"></member>
    <member name="F:VkBufferMemoryBarrier64.offset"></member>
    <member name="F:VkBufferMemoryBarrier64.pNext"></member>
    <member name="F:VkBufferMemoryBarrier64.size"></member>
    <member name="F:VkBufferMemoryBarrier64.srcAccessMask"></member>
    <member name="F:VkBufferMemoryBarrier64.srcQueueFamilyIndex"></member>
    <member name="F:VkBufferMemoryBarrier64.sType"></member>
    <member name="T:VkBufferUsageFlags"></member>
    <member name="F:VkBufferUsageFlags.value__"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_INDEX_BUFFER_BIT"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_STORAGE_BUFFER_BIT"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_TRANSFER_DST_BIT"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_TRANSFER_SRC_BIT"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT"></member>
    <member name="F:VkBufferUsageFlags.VK_BUFFER_USAGE_VERTEX_BUFFER_BIT"></member>
    <member name="T:VkBufferView">
      <summary>Opaque handle to a buffer view object</summary>
    </member>
    <member name="M:VkBufferView.Cast(System.UInt64)"></member>
    <member name="T:VkBufferViewCreateFlags"></member>
    <member name="F:VkBufferViewCreateFlags.value__"></member>
    <member name="T:VkBufferViewCreateInfo32">
      <summary>Structure specifying parameters of a newly created buffer view</summary>
    </member>
    <member name="F:VkBufferViewCreateInfo32.buffer"></member>
    <member name="F:VkBufferViewCreateInfo32.flags"></member>
    <member name="F:VkBufferViewCreateInfo32.format"></member>
    <member name="F:VkBufferViewCreateInfo32.offset"></member>
    <member name="F:VkBufferViewCreateInfo32.pNext"></member>
    <member name="F:VkBufferViewCreateInfo32.range"></member>
    <member name="F:VkBufferViewCreateInfo32.sType"></member>
    <member name="T:VkBufferViewCreateInfo64">
      <summary>Structure specifying parameters of a newly created buffer view</summary>
    </member>
    <member name="F:VkBufferViewCreateInfo64.buffer"></member>
    <member name="F:VkBufferViewCreateInfo64.flags"></member>
    <member name="F:VkBufferViewCreateInfo64.format"></member>
    <member name="F:VkBufferViewCreateInfo64.offset"></member>
    <member name="F:VkBufferViewCreateInfo64.pNext"></member>
    <member name="F:VkBufferViewCreateInfo64.range"></member>
    <member name="F:VkBufferViewCreateInfo64.sType"></member>
    <member name="T:VkClearAttachment">
      <summary>Structure specifying a clear attachment</summary>
    </member>
    <member name="F:VkClearAttachment.aspectMask"></member>
    <member name="F:VkClearAttachment.clearValue"></member>
    <member name="F:VkClearAttachment.colorAttachment"></member>
    <member name="T:VkClearColorValue">
      <summary>Structure specifying a clear color value</summary>
    </member>
    <member name="F:VkClearColorValue.float32"></member>
    <member name="F:VkClearColorValue.int32"></member>
    <member name="F:VkClearColorValue.uint32"></member>
    <member name="T:VkClearDepthStencilValue">
      <summary>Structure specifying a clear depth stencil value</summary>
    </member>
    <member name="F:VkClearDepthStencilValue.depth"></member>
    <member name="F:VkClearDepthStencilValue.stencil"></member>
    <member name="T:VkClearRect">
      <summary>Structure specifying a clear rectangle</summary>
    </member>
    <member name="F:VkClearRect.baseArrayLayer"></member>
    <member name="F:VkClearRect.layerCount"></member>
    <member name="F:VkClearRect.rect"></member>
    <member name="T:VkClearValue">
      <summary>Structure specifying a clear value</summary>
    </member>
    <member name="F:VkClearValue.color"></member>
    <member name="F:VkClearValue.depthStencil"></member>
    <member name="T:vkCmdBeginQuery">
      <summary>Begin a query</summary>
    </member>
    <member name="M:vkCmdBeginQuery.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdBeginQuery</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdBeginQuery.Invoke(VkCommandBuffer*,VkQueryPool*,System.UInt32,VkQueryControlFlags)"></member>
    <member name="T:vkCmdBeginRenderPass">
      <summary>Begin a new render pass</summary>
    </member>
    <member name="M:vkCmdBeginRenderPass.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdBeginRenderPass</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdBeginRenderPass.Invoke(VkCommandBuffer*,IVkRenderPassBeginInfo*,VkSubpassContents)"></member>
    <member name="T:vkCmdBindDescriptorSets">
      <summary>Binds descriptor sets to a command buffer</summary>
    </member>
    <member name="M:vkCmdBindDescriptorSets.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdBindDescriptorSets</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdBindDescriptorSets.Invoke(VkCommandBuffer*,VkPipelineBindPoint,VkPipelineLayout*,System.UInt32,System.UInt32,VkDescriptorSet**,System.UInt32,System.UInt32*)"></member>
    <member name="T:vkCmdBindIndexBuffer">
      <summary>Bind an index buffer to a command buffer</summary>
    </member>
    <member name="M:vkCmdBindIndexBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdBindIndexBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdBindIndexBuffer.Invoke(VkCommandBuffer*,VkBuffer*,System.UInt64,VkIndexType)"></member>
    <member name="T:vkCmdBindPipeline">
      <summary>Bind a pipeline object to a command buffer</summary>
    </member>
    <member name="M:vkCmdBindPipeline.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdBindPipeline</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdBindPipeline.Invoke(VkCommandBuffer*,VkPipelineBindPoint,VkPipeline*)"></member>
    <member name="T:vkCmdBindVertexBuffers">
      <summary>Bind vertex buffers to a command buffer</summary>
    </member>
    <member name="M:vkCmdBindVertexBuffers.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdBindVertexBuffers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdBindVertexBuffers.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,VkBuffer**,System.UInt64*)"></member>
    <member name="T:vkCmdBlitImage">
      <summary>Copy regions of an image, potentially performing format conversion,</summary>
    </member>
    <member name="M:vkCmdBlitImage.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdBlitImage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdBlitImage.Invoke(VkCommandBuffer*,VkImage*,VkImageLayout,VkImage*,VkImageLayout,System.UInt32,VkImageBlit*,VkFilter)"></member>
    <member name="T:vkCmdClearAttachments">
      <summary>Clear regions within currently bound framebuffer attachments</summary>
    </member>
    <member name="M:vkCmdClearAttachments.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdClearAttachments</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdClearAttachments.Invoke(VkCommandBuffer*,System.UInt32,VkClearAttachment*,System.UInt32,VkClearRect*)"></member>
    <member name="T:vkCmdClearColorImage">
      <summary>Clear regions of a color image</summary>
    </member>
    <member name="M:vkCmdClearColorImage.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdClearColorImage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdClearColorImage.Invoke(VkCommandBuffer*,VkImage*,VkImageLayout,VkClearColorValue*,System.UInt32,VkImageSubresourceRange*)"></member>
    <member name="T:vkCmdClearDepthStencilImage">
      <summary>Fill regions of a combined depth/stencil image</summary>
    </member>
    <member name="M:vkCmdClearDepthStencilImage.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdClearDepthStencilImage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdClearDepthStencilImage.Invoke(VkCommandBuffer*,VkImage*,VkImageLayout,VkClearDepthStencilValue*,System.UInt32,VkImageSubresourceRange*)"></member>
    <member name="T:vkCmdCopyBuffer">
      <summary>Copy data between buffer regions</summary>
    </member>
    <member name="M:vkCmdCopyBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdCopyBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdCopyBuffer.Invoke(VkCommandBuffer*,VkBuffer*,VkBuffer*,System.UInt32,VkBufferCopy*)"></member>
    <member name="T:vkCmdCopyBufferToImage">
      <summary>Copy data from a buffer into an image</summary>
    </member>
    <member name="M:vkCmdCopyBufferToImage.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdCopyBufferToImage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdCopyBufferToImage.Invoke(VkCommandBuffer*,VkBuffer*,VkImage*,VkImageLayout,System.UInt32,VkBufferImageCopy*)"></member>
    <member name="T:vkCmdCopyImage">
      <summary>Copy data between images</summary>
    </member>
    <member name="M:vkCmdCopyImage.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdCopyImage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdCopyImage.Invoke(VkCommandBuffer*,VkImage*,VkImageLayout,VkImage*,VkImageLayout,System.UInt32,VkImageCopy*)"></member>
    <member name="T:vkCmdCopyImageToBuffer">
      <summary>Copy image data into a buffer</summary>
    </member>
    <member name="M:vkCmdCopyImageToBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdCopyImageToBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdCopyImageToBuffer.Invoke(VkCommandBuffer*,VkImage*,VkImageLayout,VkBuffer*,System.UInt32,VkBufferImageCopy*)"></member>
    <member name="T:vkCmdCopyQueryPoolResults">
      <summary>Copy the results of queries in a query pool to a buffer object</summary>
    </member>
    <member name="M:vkCmdCopyQueryPoolResults.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdCopyQueryPoolResults</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdCopyQueryPoolResults.Invoke(VkCommandBuffer*,VkQueryPool*,System.UInt32,System.UInt32,VkBuffer*,System.UInt64,System.UInt64,VkQueryResultFlags)"></member>
    <member name="T:vkCmdDebugMarkerBeginEXT"></member>
    <member name="M:vkCmdDebugMarkerBeginEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDebugMarkerBeginEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDebugMarkerBeginEXT.Invoke(VkCommandBuffer*,IVkDebugMarkerMarkerInfoEXT*)"></member>
    <member name="T:vkCmdDebugMarkerEndEXT"></member>
    <member name="M:vkCmdDebugMarkerEndEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDebugMarkerEndEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDebugMarkerEndEXT.Invoke(VkCommandBuffer*)"></member>
    <member name="T:vkCmdDebugMarkerInsertEXT"></member>
    <member name="M:vkCmdDebugMarkerInsertEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDebugMarkerInsertEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDebugMarkerInsertEXT.Invoke(VkCommandBuffer*,IVkDebugMarkerMarkerInfoEXT*)"></member>
    <member name="T:vkCmdDispatch">
      <summary>Dispatch compute work items</summary>
    </member>
    <member name="M:vkCmdDispatch.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDispatch</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDispatch.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,System.UInt32)"></member>
    <member name="T:vkCmdDispatchBaseKHX"></member>
    <member name="M:vkCmdDispatchBaseKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDispatchBaseKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDispatchBaseKHX.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)"></member>
    <member name="T:vkCmdDispatchIndirect">
      <summary>Dispatch compute work items using indirect parameters</summary>
    </member>
    <member name="M:vkCmdDispatchIndirect.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDispatchIndirect</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDispatchIndirect.Invoke(VkCommandBuffer*,VkBuffer*,System.UInt64)"></member>
    <member name="T:vkCmdDraw">
      <summary>Draw primitives</summary>
    </member>
    <member name="M:vkCmdDraw.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDraw</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDraw.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,System.UInt32,System.UInt32)"></member>
    <member name="T:vkCmdDrawIndexed">
      <summary>Issue an indexed draw into a command buffer</summary>
    </member>
    <member name="M:vkCmdDrawIndexed.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDrawIndexed</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDrawIndexed.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.UInt32)"></member>
    <member name="T:vkCmdDrawIndexedIndirect">
      <summary>Perform an indexed indirect draw</summary>
    </member>
    <member name="M:vkCmdDrawIndexedIndirect.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDrawIndexedIndirect</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDrawIndexedIndirect.Invoke(VkCommandBuffer*,VkBuffer*,System.UInt64,System.UInt32,System.UInt32)"></member>
    <member name="T:vkCmdDrawIndexedIndirectCountAMD"></member>
    <member name="M:vkCmdDrawIndexedIndirectCountAMD.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDrawIndexedIndirectCountAMD</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDrawIndexedIndirectCountAMD.Invoke(VkCommandBuffer*,VkBuffer*,System.UInt64,VkBuffer*,System.UInt64,System.UInt32,System.UInt32)"></member>
    <member name="T:vkCmdDrawIndirect">
      <summary>Issue an indirect draw into a command buffer</summary>
    </member>
    <member name="M:vkCmdDrawIndirect.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDrawIndirect</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDrawIndirect.Invoke(VkCommandBuffer*,VkBuffer*,System.UInt64,System.UInt32,System.UInt32)"></member>
    <member name="T:vkCmdDrawIndirectCountAMD"></member>
    <member name="M:vkCmdDrawIndirectCountAMD.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdDrawIndirectCountAMD</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdDrawIndirectCountAMD.Invoke(VkCommandBuffer*,VkBuffer*,System.UInt64,VkBuffer*,System.UInt64,System.UInt32,System.UInt32)"></member>
    <member name="T:vkCmdEndQuery">
      <summary>Ends a query</summary>
    </member>
    <member name="M:vkCmdEndQuery.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdEndQuery</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdEndQuery.Invoke(VkCommandBuffer*,VkQueryPool*,System.UInt32)"></member>
    <member name="T:vkCmdEndRenderPass">
      <summary>End the current render pass</summary>
    </member>
    <member name="M:vkCmdEndRenderPass.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdEndRenderPass</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdEndRenderPass.Invoke(VkCommandBuffer*)"></member>
    <member name="T:vkCmdExecuteCommands">
      <summary>Execute a secondary command buffer from a primary command buffer</summary>
    </member>
    <member name="M:vkCmdExecuteCommands.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdExecuteCommands</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdExecuteCommands.Invoke(VkCommandBuffer*,System.UInt32,VkCommandBuffer**)"></member>
    <member name="T:vkCmdFillBuffer">
      <summary>Fill a region of a buffer with a fixed value</summary>
    </member>
    <member name="M:vkCmdFillBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdFillBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdFillBuffer.Invoke(VkCommandBuffer*,VkBuffer*,System.UInt64,System.UInt64,System.UInt32)"></member>
    <member name="T:vkCmdNextSubpass">
      <summary>Transition to the next subpass of a render pass</summary>
    </member>
    <member name="M:vkCmdNextSubpass.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdNextSubpass</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdNextSubpass.Invoke(VkCommandBuffer*,VkSubpassContents)"></member>
    <member name="T:vkCmdPipelineBarrier">
      <summary>Insert a memory dependency</summary>
    </member>
    <member name="M:vkCmdPipelineBarrier.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdPipelineBarrier</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdPipelineBarrier.Invoke(VkCommandBuffer*,VkPipelineStageFlags,VkPipelineStageFlags,VkDependencyFlags,System.UInt32,IVkMemoryBarrier*,System.UInt32,IVkBufferMemoryBarrier*,System.UInt32,IVkImageMemoryBarrier*)"></member>
    <member name="T:VkCmdProcessCommandsInfoNVX32"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.indirectCommandsLayout"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.indirectCommandsTokenCount"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.maxSequencesCount"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.objectTable"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.pIndirectCommandsTokens"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.pNext"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.sequencesCountBuffer"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.sequencesCountOffset"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.sequencesIndexBuffer"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.sequencesIndexOffset"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.sType"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX32.targetCommandBuffer"></member>
    <member name="T:VkCmdProcessCommandsInfoNVX64"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.indirectCommandsLayout"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.indirectCommandsTokenCount"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.maxSequencesCount"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.objectTable"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.pIndirectCommandsTokens"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.pNext"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.sequencesCountBuffer"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.sequencesCountOffset"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.sequencesIndexBuffer"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.sequencesIndexOffset"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.sType"></member>
    <member name="F:VkCmdProcessCommandsInfoNVX64.targetCommandBuffer"></member>
    <member name="T:vkCmdProcessCommandsNVX"></member>
    <member name="M:vkCmdProcessCommandsNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdProcessCommandsNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdProcessCommandsNVX.Invoke(VkCommandBuffer*,IVkCmdProcessCommandsInfoNVX*)"></member>
    <member name="T:vkCmdPushConstants">
      <summary>Update the values of push constants</summary>
    </member>
    <member name="M:vkCmdPushConstants.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdPushConstants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdPushConstants.Invoke(VkCommandBuffer*,VkPipelineLayout*,VkShaderStageFlags,System.UInt32,System.UInt32,System.Void*)"></member>
    <member name="T:vkCmdPushDescriptorSetKHR"></member>
    <member name="M:vkCmdPushDescriptorSetKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdPushDescriptorSetKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdPushDescriptorSetKHR.Invoke(VkCommandBuffer*,VkPipelineBindPoint,VkPipelineLayout*,System.UInt32,System.UInt32,IVkWriteDescriptorSet*)"></member>
    <member name="T:vkCmdPushDescriptorSetWithTemplateKHR"></member>
    <member name="M:vkCmdPushDescriptorSetWithTemplateKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdPushDescriptorSetWithTemplateKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdPushDescriptorSetWithTemplateKHR.Invoke(VkCommandBuffer*,VkDescriptorUpdateTemplateKHR*,VkPipelineLayout*,System.UInt32,System.Void*)"></member>
    <member name="T:VkCmdReserveSpaceForCommandsInfoNVX32"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX32.indirectCommandsLayout"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX32.maxSequencesCount"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX32.objectTable"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX32.pNext"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX32.sType"></member>
    <member name="T:VkCmdReserveSpaceForCommandsInfoNVX64"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX64.indirectCommandsLayout"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX64.maxSequencesCount"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX64.objectTable"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX64.pNext"></member>
    <member name="F:VkCmdReserveSpaceForCommandsInfoNVX64.sType"></member>
    <member name="T:vkCmdReserveSpaceForCommandsNVX"></member>
    <member name="M:vkCmdReserveSpaceForCommandsNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdReserveSpaceForCommandsNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdReserveSpaceForCommandsNVX.Invoke(VkCommandBuffer*,IVkCmdReserveSpaceForCommandsInfoNVX*)"></member>
    <member name="T:vkCmdResetEvent">
      <summary>Reset an event object to non-signaled state</summary>
    </member>
    <member name="M:vkCmdResetEvent.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdResetEvent</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdResetEvent.Invoke(VkCommandBuffer*,VkEvent*,VkPipelineStageFlags)"></member>
    <member name="T:vkCmdResetQueryPool">
      <summary>Reset queries in a query pool</summary>
    </member>
    <member name="M:vkCmdResetQueryPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdResetQueryPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdResetQueryPool.Invoke(VkCommandBuffer*,VkQueryPool*,System.UInt32,System.UInt32)"></member>
    <member name="T:vkCmdResolveImage">
      <summary>Resolve regions of an image</summary>
    </member>
    <member name="M:vkCmdResolveImage.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdResolveImage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdResolveImage.Invoke(VkCommandBuffer*,VkImage*,VkImageLayout,VkImage*,VkImageLayout,System.UInt32,VkImageResolve*)"></member>
    <member name="T:vkCmdSetBlendConstants">
      <summary>Set the values of blend constants</summary>
    </member>
    <member name="M:vkCmdSetBlendConstants.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetBlendConstants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetBlendConstants.Invoke(VkCommandBuffer*,System.Single[])"></member>
    <member name="T:vkCmdSetDepthBias">
      <summary>Set the depth bias dynamic state</summary>
    </member>
    <member name="M:vkCmdSetDepthBias.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetDepthBias</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetDepthBias.Invoke(VkCommandBuffer*,System.Single,System.Single,System.Single)"></member>
    <member name="T:vkCmdSetDepthBounds">
      <summary>Set the depth bounds test values for a command buffer</summary>
    </member>
    <member name="M:vkCmdSetDepthBounds.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetDepthBounds</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetDepthBounds.Invoke(VkCommandBuffer*,System.Single,System.Single)"></member>
    <member name="T:vkCmdSetDeviceMaskKHX"></member>
    <member name="M:vkCmdSetDeviceMaskKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetDeviceMaskKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetDeviceMaskKHX.Invoke(VkCommandBuffer*,System.UInt32)"></member>
    <member name="T:vkCmdSetDiscardRectangleEXT"></member>
    <member name="M:vkCmdSetDiscardRectangleEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetDiscardRectangleEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetDiscardRectangleEXT.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,VkRect2D*)"></member>
    <member name="T:vkCmdSetEvent">
      <summary>Set an event object to signaled state</summary>
    </member>
    <member name="M:vkCmdSetEvent.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetEvent</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetEvent.Invoke(VkCommandBuffer*,VkEvent*,VkPipelineStageFlags)"></member>
    <member name="T:vkCmdSetLineWidth">
      <summary>Set the dynamic line width state</summary>
    </member>
    <member name="M:vkCmdSetLineWidth.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetLineWidth</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetLineWidth.Invoke(VkCommandBuffer*,System.Single)"></member>
    <member name="T:vkCmdSetScissor">
      <summary>Set the dynamic scissor rectangles on a command buffer</summary>
    </member>
    <member name="M:vkCmdSetScissor.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetScissor</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetScissor.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,VkRect2D*)"></member>
    <member name="T:vkCmdSetStencilCompareMask">
      <summary>Set the stencil compare mask dynamic state</summary>
    </member>
    <member name="M:vkCmdSetStencilCompareMask.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetStencilCompareMask</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetStencilCompareMask.Invoke(VkCommandBuffer*,VkStencilFaceFlags,System.UInt32)"></member>
    <member name="T:vkCmdSetStencilReference">
      <summary>Set the stencil reference dynamic state</summary>
    </member>
    <member name="M:vkCmdSetStencilReference.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetStencilReference</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetStencilReference.Invoke(VkCommandBuffer*,VkStencilFaceFlags,System.UInt32)"></member>
    <member name="T:vkCmdSetStencilWriteMask">
      <summary>Set the stencil write mask dynamic state</summary>
    </member>
    <member name="M:vkCmdSetStencilWriteMask.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetStencilWriteMask</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetStencilWriteMask.Invoke(VkCommandBuffer*,VkStencilFaceFlags,System.UInt32)"></member>
    <member name="T:vkCmdSetViewport">
      <summary>Set the viewport on a command buffer</summary>
    </member>
    <member name="M:vkCmdSetViewport.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetViewport</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetViewport.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,VkViewport*)"></member>
    <member name="T:vkCmdSetViewportWScalingNV"></member>
    <member name="M:vkCmdSetViewportWScalingNV.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdSetViewportWScalingNV</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdSetViewportWScalingNV.Invoke(VkCommandBuffer*,System.UInt32,System.UInt32,VkViewportWScalingNV*)"></member>
    <member name="T:vkCmdUpdateBuffer">
      <summary>Update a buffer's contents from host memory</summary>
    </member>
    <member name="M:vkCmdUpdateBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdUpdateBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdUpdateBuffer.Invoke(VkCommandBuffer*,VkBuffer*,System.UInt64,System.UInt64,System.Void*)"></member>
    <member name="T:vkCmdWaitEvents">
      <summary>Wait for one or more events and insert a set of memory</summary>
    </member>
    <member name="M:vkCmdWaitEvents.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdWaitEvents</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdWaitEvents.Invoke(VkCommandBuffer*,System.UInt32,VkEvent**,VkPipelineStageFlags,VkPipelineStageFlags,System.UInt32,IVkMemoryBarrier*,System.UInt32,IVkBufferMemoryBarrier*,System.UInt32,IVkImageMemoryBarrier*)"></member>
    <member name="T:vkCmdWriteTimestamp">
      <summary>Write a device timestamp into a query object</summary>
    </member>
    <member name="M:vkCmdWriteTimestamp.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCmdWriteTimestamp</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCmdWriteTimestamp.Invoke(VkCommandBuffer*,VkPipelineStageFlags,VkQueryPool*,System.UInt32)"></member>
    <member name="T:VkColorComponentFlags"></member>
    <member name="F:VkColorComponentFlags.value__"></member>
    <member name="F:VkColorComponentFlags.VK_COLOR_COMPONENT_A_BIT"></member>
    <member name="F:VkColorComponentFlags.VK_COLOR_COMPONENT_B_BIT"></member>
    <member name="F:VkColorComponentFlags.VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkColorComponentFlags.VK_COLOR_COMPONENT_G_BIT"></member>
    <member name="F:VkColorComponentFlags.VK_COLOR_COMPONENT_R_BIT"></member>
    <member name="T:VkColorSpaceKHR"></member>
    <member name="F:VkColorSpaceKHR.value__"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_BEGIN_RANGE_KHR"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_BT2020_LINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_BT709_LINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_BT709_NONLINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_DCI_P3_LINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_DOLBYVISION_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_END_RANGE_KHR"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_HDR10_HLG_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_HDR10_ST2084_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_MAX_ENUM_KHR"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_PASS_THROUGH_EXT"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_RANGE_SIZE_KHR"></member>
    <member name="F:VkColorSpaceKHR.VK_COLOR_SPACE_SRGB_NONLINEAR_KHR"></member>
    <member name="T:VkCommandBuffer">
      <summary>Opaque handle to a command buffer object</summary>
    </member>
    <member name="M:VkCommandBuffer.Cast(System.Void*)"></member>
    <member name="T:VkCommandBufferAllocateInfo32">
      <summary>Structure specifying the allocation parameters for command buffer object</summary>
    </member>
    <member name="F:VkCommandBufferAllocateInfo32.commandBufferCount"></member>
    <member name="F:VkCommandBufferAllocateInfo32.commandPool"></member>
    <member name="F:VkCommandBufferAllocateInfo32.level"></member>
    <member name="F:VkCommandBufferAllocateInfo32.pNext"></member>
    <member name="F:VkCommandBufferAllocateInfo32.sType"></member>
    <member name="T:VkCommandBufferAllocateInfo64">
      <summary>Structure specifying the allocation parameters for command buffer object</summary>
    </member>
    <member name="F:VkCommandBufferAllocateInfo64.commandBufferCount"></member>
    <member name="F:VkCommandBufferAllocateInfo64.commandPool"></member>
    <member name="F:VkCommandBufferAllocateInfo64.level"></member>
    <member name="F:VkCommandBufferAllocateInfo64.pNext"></member>
    <member name="F:VkCommandBufferAllocateInfo64.sType"></member>
    <member name="T:VkCommandBufferBeginInfo32">
      <summary>Structure specifying a command buffer begin operation</summary>
    </member>
    <member name="F:VkCommandBufferBeginInfo32.flags"></member>
    <member name="F:VkCommandBufferBeginInfo32.pInheritanceInfo"></member>
    <member name="F:VkCommandBufferBeginInfo32.pNext"></member>
    <member name="F:VkCommandBufferBeginInfo32.sType"></member>
    <member name="T:VkCommandBufferBeginInfo64">
      <summary>Structure specifying a command buffer begin operation</summary>
    </member>
    <member name="F:VkCommandBufferBeginInfo64.flags"></member>
    <member name="F:VkCommandBufferBeginInfo64.pInheritanceInfo"></member>
    <member name="F:VkCommandBufferBeginInfo64.pNext"></member>
    <member name="F:VkCommandBufferBeginInfo64.sType"></member>
    <member name="T:VkCommandBufferInheritanceInfo32">
      <summary>Structure specifying command buffer inheritance info</summary>
    </member>
    <member name="F:VkCommandBufferInheritanceInfo32.framebuffer"></member>
    <member name="F:VkCommandBufferInheritanceInfo32.occlusionQueryEnable"></member>
    <member name="F:VkCommandBufferInheritanceInfo32.pipelineStatistics"></member>
    <member name="F:VkCommandBufferInheritanceInfo32.pNext"></member>
    <member name="F:VkCommandBufferInheritanceInfo32.queryFlags"></member>
    <member name="F:VkCommandBufferInheritanceInfo32.renderPass"></member>
    <member name="F:VkCommandBufferInheritanceInfo32.sType"></member>
    <member name="F:VkCommandBufferInheritanceInfo32.subpass"></member>
    <member name="T:VkCommandBufferInheritanceInfo64">
      <summary>Structure specifying command buffer inheritance info</summary>
    </member>
    <member name="F:VkCommandBufferInheritanceInfo64.framebuffer"></member>
    <member name="F:VkCommandBufferInheritanceInfo64.occlusionQueryEnable"></member>
    <member name="F:VkCommandBufferInheritanceInfo64.pipelineStatistics"></member>
    <member name="F:VkCommandBufferInheritanceInfo64.pNext"></member>
    <member name="F:VkCommandBufferInheritanceInfo64.queryFlags"></member>
    <member name="F:VkCommandBufferInheritanceInfo64.renderPass"></member>
    <member name="F:VkCommandBufferInheritanceInfo64.sType"></member>
    <member name="F:VkCommandBufferInheritanceInfo64.subpass"></member>
    <member name="T:VkCommandBufferLevel"></member>
    <member name="F:VkCommandBufferLevel.value__"></member>
    <member name="F:VkCommandBufferLevel.VK_COMMAND_BUFFER_LEVEL_BEGIN_RANGE"></member>
    <member name="F:VkCommandBufferLevel.VK_COMMAND_BUFFER_LEVEL_END_RANGE"></member>
    <member name="F:VkCommandBufferLevel.VK_COMMAND_BUFFER_LEVEL_MAX_ENUM"></member>
    <member name="F:VkCommandBufferLevel.VK_COMMAND_BUFFER_LEVEL_PRIMARY"></member>
    <member name="F:VkCommandBufferLevel.VK_COMMAND_BUFFER_LEVEL_RANGE_SIZE"></member>
    <member name="F:VkCommandBufferLevel.VK_COMMAND_BUFFER_LEVEL_SECONDARY"></member>
    <member name="T:VkCommandBufferResetFlags"></member>
    <member name="F:VkCommandBufferResetFlags.value__"></member>
    <member name="F:VkCommandBufferResetFlags.VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkCommandBufferResetFlags.VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT"></member>
    <member name="T:VkCommandBufferUsageFlags"></member>
    <member name="F:VkCommandBufferUsageFlags.value__"></member>
    <member name="F:VkCommandBufferUsageFlags.VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkCommandBufferUsageFlags.VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT"></member>
    <member name="F:VkCommandBufferUsageFlags.VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT"></member>
    <member name="F:VkCommandBufferUsageFlags.VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT"></member>
    <member name="T:VkCommandPool">
      <summary>Opaque handle to a command pool object</summary>
    </member>
    <member name="M:VkCommandPool.Cast(System.UInt64)"></member>
    <member name="T:VkCommandPoolCreateFlags"></member>
    <member name="F:VkCommandPoolCreateFlags.value__"></member>
    <member name="F:VkCommandPoolCreateFlags.VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkCommandPoolCreateFlags.VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT"></member>
    <member name="F:VkCommandPoolCreateFlags.VK_COMMAND_POOL_CREATE_TRANSIENT_BIT"></member>
    <member name="T:VkCommandPoolCreateInfo32">
      <summary>Structure specifying parameters of a newly created command pool</summary>
    </member>
    <member name="F:VkCommandPoolCreateInfo32.flags"></member>
    <member name="F:VkCommandPoolCreateInfo32.pNext"></member>
    <member name="F:VkCommandPoolCreateInfo32.queueFamilyIndex"></member>
    <member name="F:VkCommandPoolCreateInfo32.sType"></member>
    <member name="T:VkCommandPoolCreateInfo64">
      <summary>Structure specifying parameters of a newly created command pool</summary>
    </member>
    <member name="F:VkCommandPoolCreateInfo64.flags"></member>
    <member name="F:VkCommandPoolCreateInfo64.pNext"></member>
    <member name="F:VkCommandPoolCreateInfo64.queueFamilyIndex"></member>
    <member name="F:VkCommandPoolCreateInfo64.sType"></member>
    <member name="T:VkCommandPoolResetFlags"></member>
    <member name="F:VkCommandPoolResetFlags.value__"></member>
    <member name="F:VkCommandPoolResetFlags.VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkCommandPoolResetFlags.VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT"></member>
    <member name="T:VkCommandPoolTrimFlagsKHR"></member>
    <member name="F:VkCommandPoolTrimFlagsKHR.value__"></member>
    <member name="T:VkCompareOp"></member>
    <member name="F:VkCompareOp.value__"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_ALWAYS"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_BEGIN_RANGE"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_END_RANGE"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_EQUAL"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_GREATER"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_GREATER_OR_EQUAL"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_LESS"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_LESS_OR_EQUAL"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_MAX_ENUM"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_NEVER"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_NOT_EQUAL"></member>
    <member name="F:VkCompareOp.VK_COMPARE_OP_RANGE_SIZE"></member>
    <member name="T:VkComponentMapping">
      <summary>Structure specifying a color component mapping</summary>
    </member>
    <member name="F:VkComponentMapping.a"></member>
    <member name="F:VkComponentMapping.b"></member>
    <member name="F:VkComponentMapping.g"></member>
    <member name="F:VkComponentMapping.r"></member>
    <member name="T:VkComponentSwizzle"></member>
    <member name="F:VkComponentSwizzle.value__"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_A"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_B"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_BEGIN_RANGE"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_END_RANGE"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_G"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_IDENTITY"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_MAX_ENUM"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_ONE"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_R"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_RANGE_SIZE"></member>
    <member name="F:VkComponentSwizzle.VK_COMPONENT_SWIZZLE_ZERO"></member>
    <member name="T:VkCompositeAlphaFlagsKHR"></member>
    <member name="F:VkCompositeAlphaFlagsKHR.value__"></member>
    <member name="F:VkCompositeAlphaFlagsKHR.VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR"></member>
    <member name="F:VkCompositeAlphaFlagsKHR.VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR"></member>
    <member name="F:VkCompositeAlphaFlagsKHR.VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR"></member>
    <member name="F:VkCompositeAlphaFlagsKHR.VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR"></member>
    <member name="F:VkCompositeAlphaFlagsKHR.VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR"></member>
    <member name="T:VkComputePipelineCreateInfo32">
      <summary>Structure specifying parameters of a newly created compute pipeline</summary>
    </member>
    <member name="F:VkComputePipelineCreateInfo32.basePipelineHandle"></member>
    <member name="F:VkComputePipelineCreateInfo32.basePipelineIndex"></member>
    <member name="F:VkComputePipelineCreateInfo32.flags"></member>
    <member name="F:VkComputePipelineCreateInfo32.layout"></member>
    <member name="F:VkComputePipelineCreateInfo32.pNext"></member>
    <member name="F:VkComputePipelineCreateInfo32.stage"></member>
    <member name="F:VkComputePipelineCreateInfo32.sType"></member>
    <member name="T:VkComputePipelineCreateInfo64">
      <summary>Structure specifying parameters of a newly created compute pipeline</summary>
    </member>
    <member name="F:VkComputePipelineCreateInfo64.basePipelineHandle"></member>
    <member name="F:VkComputePipelineCreateInfo64.basePipelineIndex"></member>
    <member name="F:VkComputePipelineCreateInfo64.flags"></member>
    <member name="F:VkComputePipelineCreateInfo64.layout"></member>
    <member name="F:VkComputePipelineCreateInfo64.pNext"></member>
    <member name="F:VkComputePipelineCreateInfo64.stage"></member>
    <member name="F:VkComputePipelineCreateInfo64.sType"></member>
    <member name="T:VkCopyDescriptorSet32">
      <summary>Structure specifying a copy descriptor set operation</summary>
    </member>
    <member name="F:VkCopyDescriptorSet32.descriptorCount"></member>
    <member name="F:VkCopyDescriptorSet32.dstArrayElement"></member>
    <member name="F:VkCopyDescriptorSet32.dstBinding"></member>
    <member name="F:VkCopyDescriptorSet32.dstSet"></member>
    <member name="F:VkCopyDescriptorSet32.pNext"></member>
    <member name="F:VkCopyDescriptorSet32.srcArrayElement"></member>
    <member name="F:VkCopyDescriptorSet32.srcBinding"></member>
    <member name="F:VkCopyDescriptorSet32.srcSet"></member>
    <member name="F:VkCopyDescriptorSet32.sType"></member>
    <member name="T:VkCopyDescriptorSet64">
      <summary>Structure specifying a copy descriptor set operation</summary>
    </member>
    <member name="F:VkCopyDescriptorSet64.descriptorCount"></member>
    <member name="F:VkCopyDescriptorSet64.dstArrayElement"></member>
    <member name="F:VkCopyDescriptorSet64.dstBinding"></member>
    <member name="F:VkCopyDescriptorSet64.dstSet"></member>
    <member name="F:VkCopyDescriptorSet64.pNext"></member>
    <member name="F:VkCopyDescriptorSet64.srcArrayElement"></member>
    <member name="F:VkCopyDescriptorSet64.srcBinding"></member>
    <member name="F:VkCopyDescriptorSet64.srcSet"></member>
    <member name="F:VkCopyDescriptorSet64.sType"></member>
    <member name="T:vkCreateBuffer">
      <summary>Create a new buffer object</summary>
    </member>
    <member name="M:vkCreateBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateBuffer.Invoke(VkDevice*,IVkBufferCreateInfo*,IVkAllocationCallbacks*,VkBuffer**)"></member>
    <member name="T:vkCreateBufferView">
      <summary>Create a new buffer view object</summary>
    </member>
    <member name="M:vkCreateBufferView.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateBufferView</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateBufferView.Invoke(VkDevice*,IVkBufferViewCreateInfo*,IVkAllocationCallbacks*,VkBufferView**)"></member>
    <member name="T:vkCreateCommandPool">
      <summary>Create a new command pool object</summary>
    </member>
    <member name="M:vkCreateCommandPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateCommandPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateCommandPool.Invoke(VkDevice*,IVkCommandPoolCreateInfo*,IVkAllocationCallbacks*,VkCommandPool**)"></member>
    <member name="T:vkCreateComputePipelines">
      <summary>Creates a new compute pipeline object</summary>
    </member>
    <member name="M:vkCreateComputePipelines.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateComputePipelines</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateComputePipelines.Invoke(VkDevice*,VkPipelineCache*,System.UInt32,IVkComputePipelineCreateInfo*,IVkAllocationCallbacks*,VkPipeline**)"></member>
    <member name="T:vkCreateDebugReportCallbackEXT"></member>
    <member name="M:vkCreateDebugReportCallbackEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateDebugReportCallbackEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateDebugReportCallbackEXT.Invoke(VkInstance*,IVkDebugReportCallbackCreateInfoEXT*,IVkAllocationCallbacks*,VkDebugReportCallbackEXT**)"></member>
    <member name="T:vkCreateDescriptorPool">
      <summary>Creates a descriptor pool object</summary>
    </member>
    <member name="M:vkCreateDescriptorPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateDescriptorPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateDescriptorPool.Invoke(VkDevice*,IVkDescriptorPoolCreateInfo*,IVkAllocationCallbacks*,VkDescriptorPool**)"></member>
    <member name="T:vkCreateDescriptorSetLayout">
      <summary>Create a new descriptor set layout</summary>
    </member>
    <member name="M:vkCreateDescriptorSetLayout.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateDescriptorSetLayout</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateDescriptorSetLayout.Invoke(VkDevice*,IVkDescriptorSetLayoutCreateInfo*,IVkAllocationCallbacks*,VkDescriptorSetLayout**)"></member>
    <member name="T:vkCreateDescriptorUpdateTemplateKHR"></member>
    <member name="M:vkCreateDescriptorUpdateTemplateKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateDescriptorUpdateTemplateKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateDescriptorUpdateTemplateKHR.Invoke(VkDevice*,IVkDescriptorUpdateTemplateCreateInfoKHR*,IVkAllocationCallbacks*,VkDescriptorUpdateTemplateKHR**)"></member>
    <member name="T:vkCreateDevice">
      <summary>Create a new device instance</summary>
    </member>
    <member name="M:vkCreateDevice.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateDevice</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateDevice.Invoke(VkPhysicalDevice*,IVkDeviceCreateInfo*,IVkAllocationCallbacks*,VkDevice**)"></member>
    <member name="T:vkCreateDisplayModeKHR"></member>
    <member name="M:vkCreateDisplayModeKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateDisplayModeKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateDisplayModeKHR.Invoke(VkPhysicalDevice*,VkDisplayKHR*,IVkDisplayModeCreateInfoKHR*,IVkAllocationCallbacks*,VkDisplayModeKHR**)"></member>
    <member name="T:vkCreateDisplayPlaneSurfaceKHR"></member>
    <member name="M:vkCreateDisplayPlaneSurfaceKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateDisplayPlaneSurfaceKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateDisplayPlaneSurfaceKHR.Invoke(VkInstance*,IVkDisplaySurfaceCreateInfoKHR*,IVkAllocationCallbacks*,VkSurfaceKHR**)"></member>
    <member name="T:vkCreateEvent">
      <summary>Create a new event object</summary>
    </member>
    <member name="M:vkCreateEvent.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateEvent</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateEvent.Invoke(VkDevice*,IVkEventCreateInfo*,IVkAllocationCallbacks*,VkEvent**)"></member>
    <member name="T:vkCreateFence">
      <summary>Create a new fence object</summary>
    </member>
    <member name="M:vkCreateFence.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateFence</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateFence.Invoke(VkDevice*,IVkFenceCreateInfo*,IVkAllocationCallbacks*,VkFence**)"></member>
    <member name="T:vkCreateFramebuffer">
      <summary>Create a new framebuffer object</summary>
    </member>
    <member name="M:vkCreateFramebuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateFramebuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateFramebuffer.Invoke(VkDevice*,IVkFramebufferCreateInfo*,IVkAllocationCallbacks*,VkFramebuffer**)"></member>
    <member name="T:vkCreateGraphicsPipelines">
      <summary>Create graphics pipelines</summary>
    </member>
    <member name="M:vkCreateGraphicsPipelines.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateGraphicsPipelines</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateGraphicsPipelines.Invoke(VkDevice*,VkPipelineCache*,System.UInt32,IVkGraphicsPipelineCreateInfo*,IVkAllocationCallbacks*,VkPipeline**)"></member>
    <member name="T:vkCreateImage">
      <summary>Create a new image object</summary>
    </member>
    <member name="M:vkCreateImage.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateImage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateImage.Invoke(VkDevice*,IVkImageCreateInfo*,IVkAllocationCallbacks*,VkImage**)"></member>
    <member name="T:vkCreateImageView">
      <summary>Create an image view from an existing image</summary>
    </member>
    <member name="M:vkCreateImageView.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateImageView</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateImageView.Invoke(VkDevice*,IVkImageViewCreateInfo*,IVkAllocationCallbacks*,VkImageView**)"></member>
    <member name="T:vkCreateIndirectCommandsLayoutNVX"></member>
    <member name="M:vkCreateIndirectCommandsLayoutNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateIndirectCommandsLayoutNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateIndirectCommandsLayoutNVX.Invoke(VkDevice*,IVkIndirectCommandsLayoutCreateInfoNVX*,IVkAllocationCallbacks*,VkIndirectCommandsLayoutNVX**)"></member>
    <member name="T:vkCreateInstance">
      <summary>Create a new Vulkan instance</summary>
    </member>
    <member name="M:vkCreateInstance.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateInstance</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateInstance.Invoke(IVkInstanceCreateInfo*,IVkAllocationCallbacks*,VkInstance**)"></member>
    <member name="T:vkCreateObjectTableNVX"></member>
    <member name="M:vkCreateObjectTableNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateObjectTableNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateObjectTableNVX.Invoke(VkDevice*,IVkObjectTableCreateInfoNVX*,IVkAllocationCallbacks*,VkObjectTableNVX**)"></member>
    <member name="T:vkCreatePipelineCache">
      <summary>Creates a new pipeline cache</summary>
    </member>
    <member name="M:vkCreatePipelineCache.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreatePipelineCache</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreatePipelineCache.Invoke(VkDevice*,IVkPipelineCacheCreateInfo*,IVkAllocationCallbacks*,VkPipelineCache**)"></member>
    <member name="T:vkCreatePipelineLayout">
      <summary>Creates a new pipeline layout object</summary>
    </member>
    <member name="M:vkCreatePipelineLayout.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreatePipelineLayout</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreatePipelineLayout.Invoke(VkDevice*,IVkPipelineLayoutCreateInfo*,IVkAllocationCallbacks*,VkPipelineLayout**)"></member>
    <member name="T:vkCreateQueryPool">
      <summary>Create a new query pool object</summary>
    </member>
    <member name="M:vkCreateQueryPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateQueryPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateQueryPool.Invoke(VkDevice*,IVkQueryPoolCreateInfo*,IVkAllocationCallbacks*,VkQueryPool**)"></member>
    <member name="T:vkCreateRenderPass">
      <summary>Create a new render pass object</summary>
    </member>
    <member name="M:vkCreateRenderPass.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateRenderPass</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateRenderPass.Invoke(VkDevice*,IVkRenderPassCreateInfo*,IVkAllocationCallbacks*,VkRenderPass**)"></member>
    <member name="T:vkCreateSampler">
      <summary>Create a new sampler object</summary>
    </member>
    <member name="M:vkCreateSampler.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateSampler</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateSampler.Invoke(VkDevice*,IVkSamplerCreateInfo*,IVkAllocationCallbacks*,VkSampler**)"></member>
    <member name="T:vkCreateSemaphore">
      <summary>Create a new queue semaphore object</summary>
    </member>
    <member name="M:vkCreateSemaphore.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateSemaphore</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateSemaphore.Invoke(VkDevice*,IVkSemaphoreCreateInfo*,IVkAllocationCallbacks*,VkSemaphore**)"></member>
    <member name="T:vkCreateShaderModule">
      <summary>Creates a new shader module object</summary>
    </member>
    <member name="M:vkCreateShaderModule.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateShaderModule</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateShaderModule.Invoke(VkDevice*,IVkShaderModuleCreateInfo*,IVkAllocationCallbacks*,VkShaderModule**)"></member>
    <member name="T:vkCreateSharedSwapchainsKHR"></member>
    <member name="M:vkCreateSharedSwapchainsKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateSharedSwapchainsKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateSharedSwapchainsKHR.Invoke(VkDevice*,System.UInt32,IVkSwapchainCreateInfoKHR*,IVkAllocationCallbacks*,VkSwapchainKHR**)"></member>
    <member name="T:vkCreateSwapchainKHR"></member>
    <member name="M:vkCreateSwapchainKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkCreateSwapchainKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkCreateSwapchainKHR.Invoke(VkDevice*,IVkSwapchainCreateInfoKHR*,IVkAllocationCallbacks*,VkSwapchainKHR**)"></member>
    <member name="T:VkCullModeFlags"></member>
    <member name="F:VkCullModeFlags.value__"></member>
    <member name="F:VkCullModeFlags.VK_CULL_MODE_BACK_BIT"></member>
    <member name="F:VkCullModeFlags.VK_CULL_MODE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkCullModeFlags.VK_CULL_MODE_FRONT_AND_BACK"></member>
    <member name="F:VkCullModeFlags.VK_CULL_MODE_FRONT_BIT"></member>
    <member name="F:VkCullModeFlags.VK_CULL_MODE_NONE"></member>
    <member name="T:VkDebugMarkerMarkerInfoEXT32"></member>
    <member name="M:VkDebugMarkerMarkerInfoEXT32.color(System.Int32)"></member>
    <member name="F:VkDebugMarkerMarkerInfoEXT32.pMarkerName"></member>
    <member name="F:VkDebugMarkerMarkerInfoEXT32.pNext"></member>
    <member name="F:VkDebugMarkerMarkerInfoEXT32.sType"></member>
    <member name="T:VkDebugMarkerMarkerInfoEXT64"></member>
    <member name="M:VkDebugMarkerMarkerInfoEXT64.color(System.Int32)"></member>
    <member name="F:VkDebugMarkerMarkerInfoEXT64.pMarkerName"></member>
    <member name="F:VkDebugMarkerMarkerInfoEXT64.pNext"></member>
    <member name="F:VkDebugMarkerMarkerInfoEXT64.sType"></member>
    <member name="T:VkDebugMarkerObjectNameInfoEXT32"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT32.object"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT32.objectType"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT32.pNext"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT32.pObjectName"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT32.sType"></member>
    <member name="T:VkDebugMarkerObjectNameInfoEXT64"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT64.object"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT64.objectType"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT64.pNext"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT64.pObjectName"></member>
    <member name="F:VkDebugMarkerObjectNameInfoEXT64.sType"></member>
    <member name="T:VkDebugMarkerObjectTagInfoEXT32"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT32.object"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT32.objectType"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT32.pNext"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT32.pTag"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT32.sType"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT32.tagName"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT32.tagSize"></member>
    <member name="T:VkDebugMarkerObjectTagInfoEXT64"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT64.object"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT64.objectType"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT64.pNext"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT64.pTag"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT64.sType"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT64.tagName"></member>
    <member name="F:VkDebugMarkerObjectTagInfoEXT64.tagSize"></member>
    <member name="T:vkDebugMarkerSetObjectNameEXT"></member>
    <member name="M:vkDebugMarkerSetObjectNameEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDebugMarkerSetObjectNameEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDebugMarkerSetObjectNameEXT.Invoke(VkDevice*,IVkDebugMarkerObjectNameInfoEXT*)"></member>
    <member name="T:vkDebugMarkerSetObjectTagEXT"></member>
    <member name="M:vkDebugMarkerSetObjectTagEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDebugMarkerSetObjectTagEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDebugMarkerSetObjectTagEXT.Invoke(VkDevice*,IVkDebugMarkerObjectTagInfoEXT*)"></member>
    <member name="T:VkDebugReportCallbackCreateInfoEXT32"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT32.flags"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT32.pfnCallback"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT32.pNext"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT32.pUserData"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT32.sType"></member>
    <member name="T:VkDebugReportCallbackCreateInfoEXT64"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT64.flags"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT64.pfnCallback"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT64.pNext"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT64.pUserData"></member>
    <member name="F:VkDebugReportCallbackCreateInfoEXT64.sType"></member>
    <member name="T:VkDebugReportCallbackEXT"></member>
    <member name="M:VkDebugReportCallbackEXT.Cast(System.UInt64)"></member>
    <member name="T:VkDebugReportFlagsEXT"></member>
    <member name="F:VkDebugReportFlagsEXT.value__"></member>
    <member name="F:VkDebugReportFlagsEXT.VK_DEBUG_REPORT_DEBUG_BIT_EXT"></member>
    <member name="F:VkDebugReportFlagsEXT.VK_DEBUG_REPORT_ERROR_BIT_EXT"></member>
    <member name="F:VkDebugReportFlagsEXT.VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT"></member>
    <member name="F:VkDebugReportFlagsEXT.VK_DEBUG_REPORT_INFORMATION_BIT_EXT"></member>
    <member name="F:VkDebugReportFlagsEXT.VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT"></member>
    <member name="F:VkDebugReportFlagsEXT.VK_DEBUG_REPORT_WARNING_BIT_EXT"></member>
    <member name="T:vkDebugReportMessageEXT"></member>
    <member name="M:vkDebugReportMessageEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDebugReportMessageEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDebugReportMessageEXT.Invoke(VkInstance*,VkDebugReportFlagsEXT,VkDebugReportObjectTypeEXT,System.UInt64,System.UInt64,System.Int32,System.SByte*,System.SByte*)"></member>
    <member name="T:VkDebugReportObjectTypeEXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.value__"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_BEGIN_RANGE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_END_RANGE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_OBJECT_TABLE_NVX_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_RANGE_SIZE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT"></member>
    <member name="F:VkDebugReportObjectTypeEXT.VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT"></member>
    <member name="T:VkDedicatedAllocationBufferCreateInfoNV32"></member>
    <member name="F:VkDedicatedAllocationBufferCreateInfoNV32.dedicatedAllocation"></member>
    <member name="F:VkDedicatedAllocationBufferCreateInfoNV32.pNext"></member>
    <member name="F:VkDedicatedAllocationBufferCreateInfoNV32.sType"></member>
    <member name="T:VkDedicatedAllocationBufferCreateInfoNV64"></member>
    <member name="F:VkDedicatedAllocationBufferCreateInfoNV64.dedicatedAllocation"></member>
    <member name="F:VkDedicatedAllocationBufferCreateInfoNV64.pNext"></member>
    <member name="F:VkDedicatedAllocationBufferCreateInfoNV64.sType"></member>
    <member name="T:VkDedicatedAllocationImageCreateInfoNV32"></member>
    <member name="F:VkDedicatedAllocationImageCreateInfoNV32.dedicatedAllocation"></member>
    <member name="F:VkDedicatedAllocationImageCreateInfoNV32.pNext"></member>
    <member name="F:VkDedicatedAllocationImageCreateInfoNV32.sType"></member>
    <member name="T:VkDedicatedAllocationImageCreateInfoNV64"></member>
    <member name="F:VkDedicatedAllocationImageCreateInfoNV64.dedicatedAllocation"></member>
    <member name="F:VkDedicatedAllocationImageCreateInfoNV64.pNext"></member>
    <member name="F:VkDedicatedAllocationImageCreateInfoNV64.sType"></member>
    <member name="T:VkDedicatedAllocationMemoryAllocateInfoNV32"></member>
    <member name="F:VkDedicatedAllocationMemoryAllocateInfoNV32.buffer"></member>
    <member name="F:VkDedicatedAllocationMemoryAllocateInfoNV32.image"></member>
    <member name="F:VkDedicatedAllocationMemoryAllocateInfoNV32.pNext"></member>
    <member name="F:VkDedicatedAllocationMemoryAllocateInfoNV32.sType"></member>
    <member name="T:VkDedicatedAllocationMemoryAllocateInfoNV64"></member>
    <member name="F:VkDedicatedAllocationMemoryAllocateInfoNV64.buffer"></member>
    <member name="F:VkDedicatedAllocationMemoryAllocateInfoNV64.image"></member>
    <member name="F:VkDedicatedAllocationMemoryAllocateInfoNV64.pNext"></member>
    <member name="F:VkDedicatedAllocationMemoryAllocateInfoNV64.sType"></member>
    <member name="T:VkDependencyFlags"></member>
    <member name="F:VkDependencyFlags.value__"></member>
    <member name="F:VkDependencyFlags.VK_DEPENDENCY_BY_REGION_BIT"></member>
    <member name="F:VkDependencyFlags.VK_DEPENDENCY_DEVICE_GROUP_BIT_KHX"></member>
    <member name="F:VkDependencyFlags.VK_DEPENDENCY_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkDependencyFlags.VK_DEPENDENCY_VIEW_LOCAL_BIT_KHX"></member>
    <member name="T:VkDescriptorBufferInfo">
      <summary>Structure specifying descriptor buffer info</summary>
    </member>
    <member name="F:VkDescriptorBufferInfo.buffer"></member>
    <member name="F:VkDescriptorBufferInfo.offset"></member>
    <member name="F:VkDescriptorBufferInfo.range"></member>
    <member name="T:VkDescriptorImageInfo">
      <summary>Structure specifying descriptor image info</summary>
    </member>
    <member name="F:VkDescriptorImageInfo.imageLayout"></member>
    <member name="F:VkDescriptorImageInfo.imageView"></member>
    <member name="F:VkDescriptorImageInfo.sampler"></member>
    <member name="T:VkDescriptorPool">
      <summary>Opaque handle to a descriptor pool object</summary>
    </member>
    <member name="M:VkDescriptorPool.Cast(System.UInt64)"></member>
    <member name="T:VkDescriptorPoolCreateFlags"></member>
    <member name="F:VkDescriptorPoolCreateFlags.value__"></member>
    <member name="F:VkDescriptorPoolCreateFlags.VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkDescriptorPoolCreateFlags.VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT"></member>
    <member name="T:VkDescriptorPoolCreateInfo32">
      <summary>Structure specifying parameters of a newly created descriptor pool</summary>
    </member>
    <member name="F:VkDescriptorPoolCreateInfo32.flags"></member>
    <member name="F:VkDescriptorPoolCreateInfo32.maxSets"></member>
    <member name="F:VkDescriptorPoolCreateInfo32.pNext"></member>
    <member name="F:VkDescriptorPoolCreateInfo32.poolSizeCount"></member>
    <member name="F:VkDescriptorPoolCreateInfo32.pPoolSizes"></member>
    <member name="F:VkDescriptorPoolCreateInfo32.sType"></member>
    <member name="T:VkDescriptorPoolCreateInfo64">
      <summary>Structure specifying parameters of a newly created descriptor pool</summary>
    </member>
    <member name="F:VkDescriptorPoolCreateInfo64.flags"></member>
    <member name="F:VkDescriptorPoolCreateInfo64.maxSets"></member>
    <member name="F:VkDescriptorPoolCreateInfo64.pNext"></member>
    <member name="F:VkDescriptorPoolCreateInfo64.poolSizeCount"></member>
    <member name="F:VkDescriptorPoolCreateInfo64.pPoolSizes"></member>
    <member name="F:VkDescriptorPoolCreateInfo64.sType"></member>
    <member name="T:VkDescriptorPoolResetFlags"></member>
    <member name="F:VkDescriptorPoolResetFlags.value__"></member>
    <member name="T:VkDescriptorPoolSize">
      <summary>Structure specifying descriptor pool size</summary>
    </member>
    <member name="F:VkDescriptorPoolSize.descriptorCount"></member>
    <member name="F:VkDescriptorPoolSize.type"></member>
    <member name="T:VkDescriptorSet">
      <summary>Opaque handle to a descriptor set object</summary>
    </member>
    <member name="M:VkDescriptorSet.Cast(System.UInt64)"></member>
    <member name="T:VkDescriptorSetAllocateInfo32">
      <summary>Structure specifying the allocation parameters for descriptor sets</summary>
    </member>
    <member name="F:VkDescriptorSetAllocateInfo32.descriptorPool"></member>
    <member name="F:VkDescriptorSetAllocateInfo32.descriptorSetCount"></member>
    <member name="F:VkDescriptorSetAllocateInfo32.pNext"></member>
    <member name="F:VkDescriptorSetAllocateInfo32.pSetLayouts"></member>
    <member name="F:VkDescriptorSetAllocateInfo32.sType"></member>
    <member name="T:VkDescriptorSetAllocateInfo64">
      <summary>Structure specifying the allocation parameters for descriptor sets</summary>
    </member>
    <member name="F:VkDescriptorSetAllocateInfo64.descriptorPool"></member>
    <member name="F:VkDescriptorSetAllocateInfo64.descriptorSetCount"></member>
    <member name="F:VkDescriptorSetAllocateInfo64.pNext"></member>
    <member name="F:VkDescriptorSetAllocateInfo64.pSetLayouts"></member>
    <member name="F:VkDescriptorSetAllocateInfo64.sType"></member>
    <member name="T:VkDescriptorSetLayout">
      <summary>Opaque handle to a descriptor set layout object</summary>
    </member>
    <member name="M:VkDescriptorSetLayout.Cast(System.UInt64)"></member>
    <member name="T:VkDescriptorSetLayoutBinding32">
      <summary>Structure specifying a descriptor set layout binding</summary>
    </member>
    <member name="F:VkDescriptorSetLayoutBinding32.binding"></member>
    <member name="F:VkDescriptorSetLayoutBinding32.descriptorCount"></member>
    <member name="F:VkDescriptorSetLayoutBinding32.descriptorType"></member>
    <member name="F:VkDescriptorSetLayoutBinding32.pImmutableSamplers"></member>
    <member name="F:VkDescriptorSetLayoutBinding32.stageFlags"></member>
    <member name="T:VkDescriptorSetLayoutBinding64">
      <summary>Structure specifying a descriptor set layout binding</summary>
    </member>
    <member name="F:VkDescriptorSetLayoutBinding64.binding"></member>
    <member name="F:VkDescriptorSetLayoutBinding64.descriptorCount"></member>
    <member name="F:VkDescriptorSetLayoutBinding64.descriptorType"></member>
    <member name="F:VkDescriptorSetLayoutBinding64.pImmutableSamplers"></member>
    <member name="F:VkDescriptorSetLayoutBinding64.stageFlags"></member>
    <member name="T:VkDescriptorSetLayoutCreateFlags"></member>
    <member name="F:VkDescriptorSetLayoutCreateFlags.value__"></member>
    <member name="F:VkDescriptorSetLayoutCreateFlags.VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkDescriptorSetLayoutCreateFlags.VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR"></member>
    <member name="T:VkDescriptorSetLayoutCreateInfo32">
      <summary>Structure specifying parameters of a newly created descriptor set layout</summary>
    </member>
    <member name="F:VkDescriptorSetLayoutCreateInfo32.bindingCount"></member>
    <member name="F:VkDescriptorSetLayoutCreateInfo32.flags"></member>
    <member name="F:VkDescriptorSetLayoutCreateInfo32.pBindings"></member>
    <member name="F:VkDescriptorSetLayoutCreateInfo32.pNext"></member>
    <member name="F:VkDescriptorSetLayoutCreateInfo32.sType"></member>
    <member name="T:VkDescriptorSetLayoutCreateInfo64">
      <summary>Structure specifying parameters of a newly created descriptor set layout</summary>
    </member>
    <member name="F:VkDescriptorSetLayoutCreateInfo64.bindingCount"></member>
    <member name="F:VkDescriptorSetLayoutCreateInfo64.flags"></member>
    <member name="F:VkDescriptorSetLayoutCreateInfo64.pBindings"></member>
    <member name="F:VkDescriptorSetLayoutCreateInfo64.pNext"></member>
    <member name="F:VkDescriptorSetLayoutCreateInfo64.sType"></member>
    <member name="T:VkDescriptorType"></member>
    <member name="F:VkDescriptorType.value__"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_END_RANGE"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_MAX_ENUM"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_RANGE_SIZE"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_SAMPLER"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_STORAGE_BUFFER"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_STORAGE_IMAGE"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC"></member>
    <member name="F:VkDescriptorType.VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER"></member>
    <member name="T:VkDescriptorUpdateTemplateCreateFlagsKHR"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateFlagsKHR.value__"></member>
    <member name="T:VkDescriptorUpdateTemplateCreateInfoKHR32"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.descriptorSetLayout"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.descriptorUpdateEntryCount"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.flags"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.pDescriptorUpdateEntries"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.pipelineBindPoint"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.pipelineLayout"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.pNext"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.set"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.sType"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR32.templateType"></member>
    <member name="T:VkDescriptorUpdateTemplateCreateInfoKHR64"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.descriptorSetLayout"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.descriptorUpdateEntryCount"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.flags"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.pDescriptorUpdateEntries"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.pipelineBindPoint"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.pipelineLayout"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.pNext"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.set"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.sType"></member>
    <member name="F:VkDescriptorUpdateTemplateCreateInfoKHR64.templateType"></member>
    <member name="T:VkDescriptorUpdateTemplateEntryKHR32"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR32.descriptorCount"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR32.descriptorType"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR32.dstArrayElement"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR32.dstBinding"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR32.offset"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR32.stride"></member>
    <member name="T:VkDescriptorUpdateTemplateEntryKHR64"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR64.descriptorCount"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR64.descriptorType"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR64.dstArrayElement"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR64.dstBinding"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR64.offset"></member>
    <member name="F:VkDescriptorUpdateTemplateEntryKHR64.stride"></member>
    <member name="T:VkDescriptorUpdateTemplateKHR"></member>
    <member name="M:VkDescriptorUpdateTemplateKHR.Cast(System.UInt64)"></member>
    <member name="T:VkDescriptorUpdateTemplateTypeKHR"></member>
    <member name="F:VkDescriptorUpdateTemplateTypeKHR.value__"></member>
    <member name="F:VkDescriptorUpdateTemplateTypeKHR.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_BEGIN_RANGE_KHR"></member>
    <member name="F:VkDescriptorUpdateTemplateTypeKHR.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR"></member>
    <member name="F:VkDescriptorUpdateTemplateTypeKHR.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_END_RANGE_KHR"></member>
    <member name="F:VkDescriptorUpdateTemplateTypeKHR.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM_KHR"></member>
    <member name="F:VkDescriptorUpdateTemplateTypeKHR.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR"></member>
    <member name="F:VkDescriptorUpdateTemplateTypeKHR.VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_RANGE_SIZE_KHR"></member>
    <member name="T:vkDestroyBuffer">
      <summary>Destroy a buffer object</summary>
    </member>
    <member name="M:vkDestroyBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyBuffer.Invoke(VkDevice*,VkBuffer*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyBufferView">
      <summary>Destroy a buffer view object</summary>
    </member>
    <member name="M:vkDestroyBufferView.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyBufferView</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyBufferView.Invoke(VkDevice*,VkBufferView*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyCommandPool">
      <summary>Destroy a command pool object</summary>
    </member>
    <member name="M:vkDestroyCommandPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyCommandPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyCommandPool.Invoke(VkDevice*,VkCommandPool*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyDebugReportCallbackEXT"></member>
    <member name="M:vkDestroyDebugReportCallbackEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyDebugReportCallbackEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyDebugReportCallbackEXT.Invoke(VkInstance*,VkDebugReportCallbackEXT*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyDescriptorPool">
      <summary>Destroy a descriptor pool object</summary>
    </member>
    <member name="M:vkDestroyDescriptorPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyDescriptorPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyDescriptorPool.Invoke(VkDevice*,VkDescriptorPool*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyDescriptorSetLayout">
      <summary>Destroy a descriptor set layout object</summary>
    </member>
    <member name="M:vkDestroyDescriptorSetLayout.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyDescriptorSetLayout</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyDescriptorSetLayout.Invoke(VkDevice*,VkDescriptorSetLayout*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyDescriptorUpdateTemplateKHR"></member>
    <member name="M:vkDestroyDescriptorUpdateTemplateKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyDescriptorUpdateTemplateKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyDescriptorUpdateTemplateKHR.Invoke(VkDevice*,VkDescriptorUpdateTemplateKHR*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyDevice">
      <summary>Destroy a logical device</summary>
    </member>
    <member name="M:vkDestroyDevice.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyDevice</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyDevice.Invoke(VkDevice*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyEvent">
      <summary>Destroy an event object</summary>
    </member>
    <member name="M:vkDestroyEvent.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyEvent</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyEvent.Invoke(VkDevice*,VkEvent*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyFence">
      <summary>Destroy a fence object</summary>
    </member>
    <member name="M:vkDestroyFence.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyFence</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyFence.Invoke(VkDevice*,VkFence*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyFramebuffer">
      <summary>Destroy a framebuffer object</summary>
    </member>
    <member name="M:vkDestroyFramebuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyFramebuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyFramebuffer.Invoke(VkDevice*,VkFramebuffer*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyImage">
      <summary>Destroy an image object</summary>
    </member>
    <member name="M:vkDestroyImage.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyImage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyImage.Invoke(VkDevice*,VkImage*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyImageView">
      <summary>Destroy an image view object</summary>
    </member>
    <member name="M:vkDestroyImageView.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyImageView</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyImageView.Invoke(VkDevice*,VkImageView*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyIndirectCommandsLayoutNVX"></member>
    <member name="M:vkDestroyIndirectCommandsLayoutNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyIndirectCommandsLayoutNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyIndirectCommandsLayoutNVX.Invoke(VkDevice*,VkIndirectCommandsLayoutNVX*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyInstance">
      <summary>Destroy an instance of Vulkan</summary>
    </member>
    <member name="M:vkDestroyInstance.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyInstance</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyInstance.Invoke(VkInstance*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyObjectTableNVX"></member>
    <member name="M:vkDestroyObjectTableNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyObjectTableNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyObjectTableNVX.Invoke(VkDevice*,VkObjectTableNVX*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyPipeline">
      <summary>Destroy a pipeline object</summary>
    </member>
    <member name="M:vkDestroyPipeline.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyPipeline</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyPipeline.Invoke(VkDevice*,VkPipeline*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyPipelineCache">
      <summary>Destroy a pipeline cache object</summary>
    </member>
    <member name="M:vkDestroyPipelineCache.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyPipelineCache</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyPipelineCache.Invoke(VkDevice*,VkPipelineCache*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyPipelineLayout">
      <summary>Destroy a pipeline layout object</summary>
    </member>
    <member name="M:vkDestroyPipelineLayout.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyPipelineLayout</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyPipelineLayout.Invoke(VkDevice*,VkPipelineLayout*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyQueryPool">
      <summary>Destroy a query pool object</summary>
    </member>
    <member name="M:vkDestroyQueryPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyQueryPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyQueryPool.Invoke(VkDevice*,VkQueryPool*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyRenderPass">
      <summary>Destroy a render pass object</summary>
    </member>
    <member name="M:vkDestroyRenderPass.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyRenderPass</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyRenderPass.Invoke(VkDevice*,VkRenderPass*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroySampler">
      <summary>Destroy a sampler object</summary>
    </member>
    <member name="M:vkDestroySampler.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroySampler</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroySampler.Invoke(VkDevice*,VkSampler*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroySemaphore">
      <summary>Destroy a semaphore object</summary>
    </member>
    <member name="M:vkDestroySemaphore.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroySemaphore</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroySemaphore.Invoke(VkDevice*,VkSemaphore*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroyShaderModule">
      <summary>Destroy a shader module module</summary>
    </member>
    <member name="M:vkDestroyShaderModule.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroyShaderModule</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroyShaderModule.Invoke(VkDevice*,VkShaderModule*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroySurfaceKHR"></member>
    <member name="M:vkDestroySurfaceKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroySurfaceKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroySurfaceKHR.Invoke(VkInstance*,VkSurfaceKHR*,IVkAllocationCallbacks*)"></member>
    <member name="T:vkDestroySwapchainKHR"></member>
    <member name="M:vkDestroySwapchainKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDestroySwapchainKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDestroySwapchainKHR.Invoke(VkDevice*,VkSwapchainKHR*,IVkAllocationCallbacks*)"></member>
    <member name="T:VkDevice">
      <summary>Opaque handle to a device object</summary>
    </member>
    <member name="M:VkDevice.Cast(System.Void*)"></member>
    <member name="T:VkDeviceCreateFlags"></member>
    <member name="F:VkDeviceCreateFlags.value__"></member>
    <member name="T:VkDeviceCreateInfo32">
      <summary>Structure specifying parameters of a newly created device</summary>
    </member>
    <member name="F:VkDeviceCreateInfo32.enabledExtensionCount"></member>
    <member name="F:VkDeviceCreateInfo32.enabledLayerCount"></member>
    <member name="F:VkDeviceCreateInfo32.flags"></member>
    <member name="F:VkDeviceCreateInfo32.pEnabledFeatures"></member>
    <member name="F:VkDeviceCreateInfo32.pNext"></member>
    <member name="F:VkDeviceCreateInfo32.ppEnabledExtensionNames"></member>
    <member name="F:VkDeviceCreateInfo32.ppEnabledLayerNames"></member>
    <member name="F:VkDeviceCreateInfo32.pQueueCreateInfos"></member>
    <member name="F:VkDeviceCreateInfo32.queueCreateInfoCount"></member>
    <member name="F:VkDeviceCreateInfo32.sType"></member>
    <member name="T:VkDeviceCreateInfo64">
      <summary>Structure specifying parameters of a newly created device</summary>
    </member>
    <member name="F:VkDeviceCreateInfo64.enabledExtensionCount"></member>
    <member name="F:VkDeviceCreateInfo64.enabledLayerCount"></member>
    <member name="F:VkDeviceCreateInfo64.flags"></member>
    <member name="F:VkDeviceCreateInfo64.pEnabledFeatures"></member>
    <member name="F:VkDeviceCreateInfo64.pNext"></member>
    <member name="F:VkDeviceCreateInfo64.ppEnabledExtensionNames"></member>
    <member name="F:VkDeviceCreateInfo64.ppEnabledLayerNames"></member>
    <member name="F:VkDeviceCreateInfo64.pQueueCreateInfos"></member>
    <member name="F:VkDeviceCreateInfo64.queueCreateInfoCount"></member>
    <member name="F:VkDeviceCreateInfo64.sType"></member>
    <member name="T:VkDeviceEventInfoEXT32"></member>
    <member name="F:VkDeviceEventInfoEXT32.deviceEvent"></member>
    <member name="F:VkDeviceEventInfoEXT32.pNext"></member>
    <member name="F:VkDeviceEventInfoEXT32.sType"></member>
    <member name="T:VkDeviceEventInfoEXT64"></member>
    <member name="F:VkDeviceEventInfoEXT64.deviceEvent"></member>
    <member name="F:VkDeviceEventInfoEXT64.pNext"></member>
    <member name="F:VkDeviceEventInfoEXT64.sType"></member>
    <member name="T:VkDeviceEventTypeEXT"></member>
    <member name="F:VkDeviceEventTypeEXT.value__"></member>
    <member name="F:VkDeviceEventTypeEXT.VK_DEVICE_EVENT_TYPE_BEGIN_RANGE_EXT"></member>
    <member name="F:VkDeviceEventTypeEXT.VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT"></member>
    <member name="F:VkDeviceEventTypeEXT.VK_DEVICE_EVENT_TYPE_END_RANGE_EXT"></member>
    <member name="F:VkDeviceEventTypeEXT.VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT"></member>
    <member name="F:VkDeviceEventTypeEXT.VK_DEVICE_EVENT_TYPE_RANGE_SIZE_EXT"></member>
    <member name="T:VkDeviceGeneratedCommandsFeaturesNVX32"></member>
    <member name="F:VkDeviceGeneratedCommandsFeaturesNVX32.computeBindingPointSupport"></member>
    <member name="F:VkDeviceGeneratedCommandsFeaturesNVX32.pNext"></member>
    <member name="F:VkDeviceGeneratedCommandsFeaturesNVX32.sType"></member>
    <member name="T:VkDeviceGeneratedCommandsFeaturesNVX64"></member>
    <member name="F:VkDeviceGeneratedCommandsFeaturesNVX64.computeBindingPointSupport"></member>
    <member name="F:VkDeviceGeneratedCommandsFeaturesNVX64.pNext"></member>
    <member name="F:VkDeviceGeneratedCommandsFeaturesNVX64.sType"></member>
    <member name="T:VkDeviceGeneratedCommandsLimitsNVX32"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX32.maxIndirectCommandsLayoutTokenCount"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX32.maxObjectEntryCounts"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX32.minCommandsTokenBufferOffsetAlignment"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX32.minSequenceCountBufferOffsetAlignment"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX32.minSequenceIndexBufferOffsetAlignment"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX32.pNext"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX32.sType"></member>
    <member name="T:VkDeviceGeneratedCommandsLimitsNVX64"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX64.maxIndirectCommandsLayoutTokenCount"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX64.maxObjectEntryCounts"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX64.minCommandsTokenBufferOffsetAlignment"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX64.minSequenceCountBufferOffsetAlignment"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX64.minSequenceIndexBufferOffsetAlignment"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX64.pNext"></member>
    <member name="F:VkDeviceGeneratedCommandsLimitsNVX64.sType"></member>
    <member name="T:VkDeviceGroupBindSparseInfoKHX32"></member>
    <member name="F:VkDeviceGroupBindSparseInfoKHX32.memoryDeviceIndex"></member>
    <member name="F:VkDeviceGroupBindSparseInfoKHX32.pNext"></member>
    <member name="F:VkDeviceGroupBindSparseInfoKHX32.resourceDeviceIndex"></member>
    <member name="F:VkDeviceGroupBindSparseInfoKHX32.sType"></member>
    <member name="T:VkDeviceGroupBindSparseInfoKHX64"></member>
    <member name="F:VkDeviceGroupBindSparseInfoKHX64.memoryDeviceIndex"></member>
    <member name="F:VkDeviceGroupBindSparseInfoKHX64.pNext"></member>
    <member name="F:VkDeviceGroupBindSparseInfoKHX64.resourceDeviceIndex"></member>
    <member name="F:VkDeviceGroupBindSparseInfoKHX64.sType"></member>
    <member name="T:VkDeviceGroupCommandBufferBeginInfoKHX32"></member>
    <member name="F:VkDeviceGroupCommandBufferBeginInfoKHX32.deviceMask"></member>
    <member name="F:VkDeviceGroupCommandBufferBeginInfoKHX32.pNext"></member>
    <member name="F:VkDeviceGroupCommandBufferBeginInfoKHX32.sType"></member>
    <member name="T:VkDeviceGroupCommandBufferBeginInfoKHX64"></member>
    <member name="F:VkDeviceGroupCommandBufferBeginInfoKHX64.deviceMask"></member>
    <member name="F:VkDeviceGroupCommandBufferBeginInfoKHX64.pNext"></member>
    <member name="F:VkDeviceGroupCommandBufferBeginInfoKHX64.sType"></member>
    <member name="T:VkDeviceGroupDeviceCreateInfoKHX32"></member>
    <member name="F:VkDeviceGroupDeviceCreateInfoKHX32.physicalDeviceCount"></member>
    <member name="F:VkDeviceGroupDeviceCreateInfoKHX32.pNext"></member>
    <member name="F:VkDeviceGroupDeviceCreateInfoKHX32.pPhysicalDevices"></member>
    <member name="F:VkDeviceGroupDeviceCreateInfoKHX32.sType"></member>
    <member name="T:VkDeviceGroupDeviceCreateInfoKHX64"></member>
    <member name="F:VkDeviceGroupDeviceCreateInfoKHX64.physicalDeviceCount"></member>
    <member name="F:VkDeviceGroupDeviceCreateInfoKHX64.pNext"></member>
    <member name="F:VkDeviceGroupDeviceCreateInfoKHX64.pPhysicalDevices"></member>
    <member name="F:VkDeviceGroupDeviceCreateInfoKHX64.sType"></member>
    <member name="T:VkDeviceGroupPresentCapabilitiesKHX32"></member>
    <member name="F:VkDeviceGroupPresentCapabilitiesKHX32.modes"></member>
    <member name="F:VkDeviceGroupPresentCapabilitiesKHX32.pNext"></member>
    <member name="M:VkDeviceGroupPresentCapabilitiesKHX32.presentMask(System.Int32)"></member>
    <member name="F:VkDeviceGroupPresentCapabilitiesKHX32.sType"></member>
    <member name="T:VkDeviceGroupPresentCapabilitiesKHX64"></member>
    <member name="F:VkDeviceGroupPresentCapabilitiesKHX64.modes"></member>
    <member name="F:VkDeviceGroupPresentCapabilitiesKHX64.pNext"></member>
    <member name="M:VkDeviceGroupPresentCapabilitiesKHX64.presentMask(System.Int32)"></member>
    <member name="F:VkDeviceGroupPresentCapabilitiesKHX64.sType"></member>
    <member name="T:VkDeviceGroupPresentInfoKHX32"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX32.mode"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX32.pDeviceMasks"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX32.pNext"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX32.sType"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX32.swapchainCount"></member>
    <member name="T:VkDeviceGroupPresentInfoKHX64"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX64.mode"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX64.pDeviceMasks"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX64.pNext"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX64.sType"></member>
    <member name="F:VkDeviceGroupPresentInfoKHX64.swapchainCount"></member>
    <member name="T:VkDeviceGroupPresentModeFlagsKHX"></member>
    <member name="F:VkDeviceGroupPresentModeFlagsKHX.value__"></member>
    <member name="F:VkDeviceGroupPresentModeFlagsKHX.VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHX"></member>
    <member name="F:VkDeviceGroupPresentModeFlagsKHX.VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHX"></member>
    <member name="F:VkDeviceGroupPresentModeFlagsKHX.VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHX"></member>
    <member name="F:VkDeviceGroupPresentModeFlagsKHX.VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHX"></member>
    <member name="F:VkDeviceGroupPresentModeFlagsKHX.VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHX"></member>
    <member name="T:VkDeviceGroupRenderPassBeginInfoKHX32"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX32.deviceMask"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX32.deviceRenderAreaCount"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX32.pDeviceRenderAreas"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX32.pNext"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX32.sType"></member>
    <member name="T:VkDeviceGroupRenderPassBeginInfoKHX64"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX64.deviceMask"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX64.deviceRenderAreaCount"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX64.pDeviceRenderAreas"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX64.pNext"></member>
    <member name="F:VkDeviceGroupRenderPassBeginInfoKHX64.sType"></member>
    <member name="T:VkDeviceGroupSubmitInfoKHX32"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX32.commandBufferCount"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX32.pCommandBufferDeviceMasks"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX32.pNext"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX32.pSignalSemaphoreDeviceIndices"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX32.pWaitSemaphoreDeviceIndices"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX32.signalSemaphoreCount"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX32.sType"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX32.waitSemaphoreCount"></member>
    <member name="T:VkDeviceGroupSubmitInfoKHX64"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX64.commandBufferCount"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX64.pCommandBufferDeviceMasks"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX64.pNext"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX64.pSignalSemaphoreDeviceIndices"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX64.pWaitSemaphoreDeviceIndices"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX64.signalSemaphoreCount"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX64.sType"></member>
    <member name="F:VkDeviceGroupSubmitInfoKHX64.waitSemaphoreCount"></member>
    <member name="T:VkDeviceGroupSwapchainCreateInfoKHX32"></member>
    <member name="F:VkDeviceGroupSwapchainCreateInfoKHX32.modes"></member>
    <member name="F:VkDeviceGroupSwapchainCreateInfoKHX32.pNext"></member>
    <member name="F:VkDeviceGroupSwapchainCreateInfoKHX32.sType"></member>
    <member name="T:VkDeviceGroupSwapchainCreateInfoKHX64"></member>
    <member name="F:VkDeviceGroupSwapchainCreateInfoKHX64.modes"></member>
    <member name="F:VkDeviceGroupSwapchainCreateInfoKHX64.pNext"></member>
    <member name="F:VkDeviceGroupSwapchainCreateInfoKHX64.sType"></member>
    <member name="T:VkDeviceMemory">
      <summary>Opaque handle to a device memory object</summary>
    </member>
    <member name="M:VkDeviceMemory.Cast(System.UInt64)"></member>
    <member name="T:VkDeviceQueueCreateFlags"></member>
    <member name="F:VkDeviceQueueCreateFlags.value__"></member>
    <member name="T:VkDeviceQueueCreateInfo32">
      <summary>Structure specifying parameters of a newly created device queue</summary>
    </member>
    <member name="F:VkDeviceQueueCreateInfo32.flags"></member>
    <member name="F:VkDeviceQueueCreateInfo32.pNext"></member>
    <member name="F:VkDeviceQueueCreateInfo32.pQueuePriorities"></member>
    <member name="F:VkDeviceQueueCreateInfo32.queueCount"></member>
    <member name="F:VkDeviceQueueCreateInfo32.queueFamilyIndex"></member>
    <member name="F:VkDeviceQueueCreateInfo32.sType"></member>
    <member name="T:VkDeviceQueueCreateInfo64">
      <summary>Structure specifying parameters of a newly created device queue</summary>
    </member>
    <member name="F:VkDeviceQueueCreateInfo64.flags"></member>
    <member name="F:VkDeviceQueueCreateInfo64.pNext"></member>
    <member name="F:VkDeviceQueueCreateInfo64.pQueuePriorities"></member>
    <member name="F:VkDeviceQueueCreateInfo64.queueCount"></member>
    <member name="F:VkDeviceQueueCreateInfo64.queueFamilyIndex"></member>
    <member name="F:VkDeviceQueueCreateInfo64.sType"></member>
    <member name="T:vkDeviceWaitIdle">
      <summary>Wait for a device to become idle</summary>
    </member>
    <member name="M:vkDeviceWaitIdle.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDeviceWaitIdle</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDeviceWaitIdle.Invoke(VkDevice*)"></member>
    <member name="T:VkDiscardRectangleModeEXT"></member>
    <member name="F:VkDiscardRectangleModeEXT.value__"></member>
    <member name="F:VkDiscardRectangleModeEXT.VK_DISCARD_RECTANGLE_MODE_BEGIN_RANGE_EXT"></member>
    <member name="F:VkDiscardRectangleModeEXT.VK_DISCARD_RECTANGLE_MODE_END_RANGE_EXT"></member>
    <member name="F:VkDiscardRectangleModeEXT.VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT"></member>
    <member name="F:VkDiscardRectangleModeEXT.VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT"></member>
    <member name="F:VkDiscardRectangleModeEXT.VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT"></member>
    <member name="F:VkDiscardRectangleModeEXT.VK_DISCARD_RECTANGLE_MODE_RANGE_SIZE_EXT"></member>
    <member name="T:VkDispatchIndirectCommand">
      <summary>Structure specifying a dispatch indirect command</summary>
    </member>
    <member name="F:VkDispatchIndirectCommand.x"></member>
    <member name="F:VkDispatchIndirectCommand.y"></member>
    <member name="F:VkDispatchIndirectCommand.z"></member>
    <member name="T:VkDisplayEventInfoEXT32"></member>
    <member name="F:VkDisplayEventInfoEXT32.displayEvent"></member>
    <member name="F:VkDisplayEventInfoEXT32.pNext"></member>
    <member name="F:VkDisplayEventInfoEXT32.sType"></member>
    <member name="T:VkDisplayEventInfoEXT64"></member>
    <member name="F:VkDisplayEventInfoEXT64.displayEvent"></member>
    <member name="F:VkDisplayEventInfoEXT64.pNext"></member>
    <member name="F:VkDisplayEventInfoEXT64.sType"></member>
    <member name="T:VkDisplayEventTypeEXT"></member>
    <member name="F:VkDisplayEventTypeEXT.value__"></member>
    <member name="F:VkDisplayEventTypeEXT.VK_DISPLAY_EVENT_TYPE_BEGIN_RANGE_EXT"></member>
    <member name="F:VkDisplayEventTypeEXT.VK_DISPLAY_EVENT_TYPE_END_RANGE_EXT"></member>
    <member name="F:VkDisplayEventTypeEXT.VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT"></member>
    <member name="F:VkDisplayEventTypeEXT.VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT"></member>
    <member name="F:VkDisplayEventTypeEXT.VK_DISPLAY_EVENT_TYPE_RANGE_SIZE_EXT"></member>
    <member name="T:VkDisplayKHR"></member>
    <member name="M:VkDisplayKHR.Cast(System.UInt64)"></member>
    <member name="T:VkDisplayModeCreateFlagsKHR"></member>
    <member name="F:VkDisplayModeCreateFlagsKHR.value__"></member>
    <member name="T:VkDisplayModeCreateInfoKHR32"></member>
    <member name="F:VkDisplayModeCreateInfoKHR32.flags"></member>
    <member name="F:VkDisplayModeCreateInfoKHR32.parameters"></member>
    <member name="F:VkDisplayModeCreateInfoKHR32.pNext"></member>
    <member name="F:VkDisplayModeCreateInfoKHR32.sType"></member>
    <member name="T:VkDisplayModeCreateInfoKHR64"></member>
    <member name="F:VkDisplayModeCreateInfoKHR64.flags"></member>
    <member name="F:VkDisplayModeCreateInfoKHR64.parameters"></member>
    <member name="F:VkDisplayModeCreateInfoKHR64.pNext"></member>
    <member name="F:VkDisplayModeCreateInfoKHR64.sType"></member>
    <member name="T:VkDisplayModeKHR"></member>
    <member name="M:VkDisplayModeKHR.Cast(System.UInt64)"></member>
    <member name="T:VkDisplayModeParametersKHR"></member>
    <member name="F:VkDisplayModeParametersKHR.refreshRate"></member>
    <member name="F:VkDisplayModeParametersKHR.visibleRegion"></member>
    <member name="T:VkDisplayModePropertiesKHR"></member>
    <member name="F:VkDisplayModePropertiesKHR.displayMode"></member>
    <member name="F:VkDisplayModePropertiesKHR.parameters"></member>
    <member name="T:VkDisplayPlaneAlphaFlagsKHR"></member>
    <member name="F:VkDisplayPlaneAlphaFlagsKHR.value__"></member>
    <member name="F:VkDisplayPlaneAlphaFlagsKHR.VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR"></member>
    <member name="F:VkDisplayPlaneAlphaFlagsKHR.VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR"></member>
    <member name="F:VkDisplayPlaneAlphaFlagsKHR.VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR"></member>
    <member name="F:VkDisplayPlaneAlphaFlagsKHR.VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR"></member>
    <member name="F:VkDisplayPlaneAlphaFlagsKHR.VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR"></member>
    <member name="T:VkDisplayPlaneCapabilitiesKHR"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.maxDstExtent"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.maxDstPosition"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.maxSrcExtent"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.maxSrcPosition"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.minDstExtent"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.minDstPosition"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.minSrcExtent"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.minSrcPosition"></member>
    <member name="F:VkDisplayPlaneCapabilitiesKHR.supportedAlpha"></member>
    <member name="T:VkDisplayPlanePropertiesKHR"></member>
    <member name="F:VkDisplayPlanePropertiesKHR.currentDisplay"></member>
    <member name="F:VkDisplayPlanePropertiesKHR.currentStackIndex"></member>
    <member name="T:vkDisplayPowerControlEXT"></member>
    <member name="M:vkDisplayPowerControlEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkDisplayPowerControlEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkDisplayPowerControlEXT.Invoke(VkDevice*,VkDisplayKHR*,IVkDisplayPowerInfoEXT*)"></member>
    <member name="T:VkDisplayPowerInfoEXT32"></member>
    <member name="F:VkDisplayPowerInfoEXT32.pNext"></member>
    <member name="F:VkDisplayPowerInfoEXT32.powerState"></member>
    <member name="F:VkDisplayPowerInfoEXT32.sType"></member>
    <member name="T:VkDisplayPowerInfoEXT64"></member>
    <member name="F:VkDisplayPowerInfoEXT64.pNext"></member>
    <member name="F:VkDisplayPowerInfoEXT64.powerState"></member>
    <member name="F:VkDisplayPowerInfoEXT64.sType"></member>
    <member name="T:VkDisplayPowerStateEXT"></member>
    <member name="F:VkDisplayPowerStateEXT.value__"></member>
    <member name="F:VkDisplayPowerStateEXT.VK_DISPLAY_POWER_STATE_BEGIN_RANGE_EXT"></member>
    <member name="F:VkDisplayPowerStateEXT.VK_DISPLAY_POWER_STATE_END_RANGE_EXT"></member>
    <member name="F:VkDisplayPowerStateEXT.VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT"></member>
    <member name="F:VkDisplayPowerStateEXT.VK_DISPLAY_POWER_STATE_OFF_EXT"></member>
    <member name="F:VkDisplayPowerStateEXT.VK_DISPLAY_POWER_STATE_ON_EXT"></member>
    <member name="F:VkDisplayPowerStateEXT.VK_DISPLAY_POWER_STATE_RANGE_SIZE_EXT"></member>
    <member name="F:VkDisplayPowerStateEXT.VK_DISPLAY_POWER_STATE_SUSPEND_EXT"></member>
    <member name="T:VkDisplayPresentInfoKHR32"></member>
    <member name="F:VkDisplayPresentInfoKHR32.dstRect"></member>
    <member name="F:VkDisplayPresentInfoKHR32.persistent"></member>
    <member name="F:VkDisplayPresentInfoKHR32.pNext"></member>
    <member name="F:VkDisplayPresentInfoKHR32.srcRect"></member>
    <member name="F:VkDisplayPresentInfoKHR32.sType"></member>
    <member name="T:VkDisplayPresentInfoKHR64"></member>
    <member name="F:VkDisplayPresentInfoKHR64.dstRect"></member>
    <member name="F:VkDisplayPresentInfoKHR64.persistent"></member>
    <member name="F:VkDisplayPresentInfoKHR64.pNext"></member>
    <member name="F:VkDisplayPresentInfoKHR64.srcRect"></member>
    <member name="F:VkDisplayPresentInfoKHR64.sType"></member>
    <member name="T:VkDisplayPropertiesKHR32"></member>
    <member name="F:VkDisplayPropertiesKHR32.display"></member>
    <member name="F:VkDisplayPropertiesKHR32.displayName"></member>
    <member name="F:VkDisplayPropertiesKHR32.persistentContent"></member>
    <member name="F:VkDisplayPropertiesKHR32.physicalDimensions"></member>
    <member name="F:VkDisplayPropertiesKHR32.physicalResolution"></member>
    <member name="F:VkDisplayPropertiesKHR32.planeReorderPossible"></member>
    <member name="F:VkDisplayPropertiesKHR32.supportedTransforms"></member>
    <member name="T:VkDisplayPropertiesKHR64"></member>
    <member name="F:VkDisplayPropertiesKHR64.display"></member>
    <member name="F:VkDisplayPropertiesKHR64.displayName"></member>
    <member name="F:VkDisplayPropertiesKHR64.persistentContent"></member>
    <member name="F:VkDisplayPropertiesKHR64.physicalDimensions"></member>
    <member name="F:VkDisplayPropertiesKHR64.physicalResolution"></member>
    <member name="F:VkDisplayPropertiesKHR64.planeReorderPossible"></member>
    <member name="F:VkDisplayPropertiesKHR64.supportedTransforms"></member>
    <member name="T:VkDisplaySurfaceCreateFlagsKHR"></member>
    <member name="F:VkDisplaySurfaceCreateFlagsKHR.value__"></member>
    <member name="T:VkDisplaySurfaceCreateInfoKHR32"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.alphaMode"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.displayMode"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.flags"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.globalAlpha"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.imageExtent"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.planeIndex"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.planeStackIndex"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.pNext"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.sType"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR32.transform"></member>
    <member name="T:VkDisplaySurfaceCreateInfoKHR64"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.alphaMode"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.displayMode"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.flags"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.globalAlpha"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.imageExtent"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.planeIndex"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.planeStackIndex"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.pNext"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.sType"></member>
    <member name="F:VkDisplaySurfaceCreateInfoKHR64.transform"></member>
    <member name="T:VkDrawIndexedIndirectCommand">
      <summary>Structure specifying a draw indexed indirect command</summary>
    </member>
    <member name="F:VkDrawIndexedIndirectCommand.firstIndex"></member>
    <member name="F:VkDrawIndexedIndirectCommand.firstInstance"></member>
    <member name="F:VkDrawIndexedIndirectCommand.indexCount"></member>
    <member name="F:VkDrawIndexedIndirectCommand.instanceCount"></member>
    <member name="F:VkDrawIndexedIndirectCommand.vertexOffset"></member>
    <member name="T:VkDrawIndirectCommand">
      <summary>Structure specifying a draw indirect command</summary>
    </member>
    <member name="F:VkDrawIndirectCommand.firstInstance"></member>
    <member name="F:VkDrawIndirectCommand.firstVertex"></member>
    <member name="F:VkDrawIndirectCommand.instanceCount"></member>
    <member name="F:VkDrawIndirectCommand.vertexCount"></member>
    <member name="T:VkDynamicState"></member>
    <member name="F:VkDynamicState.value__"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_BEGIN_RANGE"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_BLEND_CONSTANTS"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_DEPTH_BIAS"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_DEPTH_BOUNDS"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_END_RANGE"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_LINE_WIDTH"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_MAX_ENUM"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_RANGE_SIZE"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_SCISSOR"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_STENCIL_REFERENCE"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_STENCIL_WRITE_MASK"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_VIEWPORT"></member>
    <member name="F:VkDynamicState.VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV"></member>
    <member name="T:vkEndCommandBuffer">
      <summary>Finish recording a command buffer</summary>
    </member>
    <member name="M:vkEndCommandBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkEndCommandBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkEndCommandBuffer.Invoke(VkCommandBuffer*)"></member>
    <member name="T:vkEnumerateDeviceExtensionProperties">
      <summary>Returns properties of available physical device extensions</summary>
    </member>
    <member name="M:vkEnumerateDeviceExtensionProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkEnumerateDeviceExtensionProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkEnumerateDeviceExtensionProperties.Invoke(VkPhysicalDevice*,System.SByte*,System.UInt32*,VkExtensionProperties*)"></member>
    <member name="T:vkEnumerateDeviceLayerProperties">
      <summary>Returns properties of available physical device layers</summary>
    </member>
    <member name="M:vkEnumerateDeviceLayerProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkEnumerateDeviceLayerProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkEnumerateDeviceLayerProperties.Invoke(VkPhysicalDevice*,System.UInt32*,VkLayerProperties*)"></member>
    <member name="T:vkEnumerateInstanceExtensionProperties">
      <summary>Returns up to requested number of global extension properties</summary>
    </member>
    <member name="M:vkEnumerateInstanceExtensionProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkEnumerateInstanceExtensionProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkEnumerateInstanceExtensionProperties.Invoke(System.SByte*,System.UInt32*,VkExtensionProperties*)"></member>
    <member name="T:vkEnumerateInstanceLayerProperties">
      <summary>Returns up to requested number of global layer properties</summary>
    </member>
    <member name="M:vkEnumerateInstanceLayerProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkEnumerateInstanceLayerProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkEnumerateInstanceLayerProperties.Invoke(System.UInt32*,VkLayerProperties*)"></member>
    <member name="T:vkEnumeratePhysicalDeviceGroupsKHX"></member>
    <member name="M:vkEnumeratePhysicalDeviceGroupsKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkEnumeratePhysicalDeviceGroupsKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkEnumeratePhysicalDeviceGroupsKHX.Invoke(VkInstance*,System.UInt32*,IVkPhysicalDeviceGroupPropertiesKHX*)"></member>
    <member name="T:vkEnumeratePhysicalDevices">
      <summary>Enumerates the physical devices accessible to a Vulkan instance</summary>
    </member>
    <member name="M:vkEnumeratePhysicalDevices.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkEnumeratePhysicalDevices</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkEnumeratePhysicalDevices.Invoke(VkInstance*,System.UInt32*,VkPhysicalDevice**)"></member>
    <member name="T:VkEvent">
      <summary>Opaque handle to a event object</summary>
    </member>
    <member name="M:VkEvent.Cast(System.UInt64)"></member>
    <member name="T:VkEventCreateFlags"></member>
    <member name="F:VkEventCreateFlags.value__"></member>
    <member name="T:VkEventCreateInfo32">
      <summary>Structure specifying parameters of a newly created event</summary>
    </member>
    <member name="F:VkEventCreateInfo32.flags"></member>
    <member name="F:VkEventCreateInfo32.pNext"></member>
    <member name="F:VkEventCreateInfo32.sType"></member>
    <member name="T:VkEventCreateInfo64">
      <summary>Structure specifying parameters of a newly created event</summary>
    </member>
    <member name="F:VkEventCreateInfo64.flags"></member>
    <member name="F:VkEventCreateInfo64.pNext"></member>
    <member name="F:VkEventCreateInfo64.sType"></member>
    <member name="T:VkExportMemoryAllocateInfoKHX32"></member>
    <member name="F:VkExportMemoryAllocateInfoKHX32.handleTypes"></member>
    <member name="F:VkExportMemoryAllocateInfoKHX32.pNext"></member>
    <member name="F:VkExportMemoryAllocateInfoKHX32.sType"></member>
    <member name="T:VkExportMemoryAllocateInfoKHX64"></member>
    <member name="F:VkExportMemoryAllocateInfoKHX64.handleTypes"></member>
    <member name="F:VkExportMemoryAllocateInfoKHX64.pNext"></member>
    <member name="F:VkExportMemoryAllocateInfoKHX64.sType"></member>
    <member name="T:VkExportMemoryAllocateInfoNV32"></member>
    <member name="F:VkExportMemoryAllocateInfoNV32.handleTypes"></member>
    <member name="F:VkExportMemoryAllocateInfoNV32.pNext"></member>
    <member name="F:VkExportMemoryAllocateInfoNV32.sType"></member>
    <member name="T:VkExportMemoryAllocateInfoNV64"></member>
    <member name="F:VkExportMemoryAllocateInfoNV64.handleTypes"></member>
    <member name="F:VkExportMemoryAllocateInfoNV64.pNext"></member>
    <member name="F:VkExportMemoryAllocateInfoNV64.sType"></member>
    <member name="T:VkExportSemaphoreCreateInfoKHX32"></member>
    <member name="F:VkExportSemaphoreCreateInfoKHX32.handleTypes"></member>
    <member name="F:VkExportSemaphoreCreateInfoKHX32.pNext"></member>
    <member name="F:VkExportSemaphoreCreateInfoKHX32.sType"></member>
    <member name="T:VkExportSemaphoreCreateInfoKHX64"></member>
    <member name="F:VkExportSemaphoreCreateInfoKHX64.handleTypes"></member>
    <member name="F:VkExportSemaphoreCreateInfoKHX64.pNext"></member>
    <member name="F:VkExportSemaphoreCreateInfoKHX64.sType"></member>
    <member name="T:VkExtensionProperties">
      <summary>Structure specifying a extension properties</summary>
    </member>
    <member name="F:VkExtensionProperties.extensionName"></member>
    <member name="F:VkExtensionProperties.specVersion"></member>
    <member name="T:VkExtent2D">
      <summary>Structure specifying a two-dimensional extent</summary>
    </member>
    <member name="F:VkExtent2D.height"></member>
    <member name="F:VkExtent2D.width"></member>
    <member name="T:VkExtent3D">
      <summary>Structure specifying a three-dimensional extent</summary>
    </member>
    <member name="F:VkExtent3D.depth"></member>
    <member name="F:VkExtent3D.height"></member>
    <member name="F:VkExtent3D.width"></member>
    <member name="T:VkExternalBufferPropertiesKHX32"></member>
    <member name="F:VkExternalBufferPropertiesKHX32.externalMemoryProperties"></member>
    <member name="F:VkExternalBufferPropertiesKHX32.pNext"></member>
    <member name="F:VkExternalBufferPropertiesKHX32.sType"></member>
    <member name="T:VkExternalBufferPropertiesKHX64"></member>
    <member name="F:VkExternalBufferPropertiesKHX64.externalMemoryProperties"></member>
    <member name="F:VkExternalBufferPropertiesKHX64.pNext"></member>
    <member name="F:VkExternalBufferPropertiesKHX64.sType"></member>
    <member name="T:VkExternalImageFormatPropertiesKHX32"></member>
    <member name="F:VkExternalImageFormatPropertiesKHX32.externalMemoryProperties"></member>
    <member name="F:VkExternalImageFormatPropertiesKHX32.pNext"></member>
    <member name="F:VkExternalImageFormatPropertiesKHX32.sType"></member>
    <member name="T:VkExternalImageFormatPropertiesKHX64"></member>
    <member name="F:VkExternalImageFormatPropertiesKHX64.externalMemoryProperties"></member>
    <member name="F:VkExternalImageFormatPropertiesKHX64.pNext"></member>
    <member name="F:VkExternalImageFormatPropertiesKHX64.sType"></member>
    <member name="T:VkExternalImageFormatPropertiesNV"></member>
    <member name="F:VkExternalImageFormatPropertiesNV.compatibleHandleTypes"></member>
    <member name="F:VkExternalImageFormatPropertiesNV.exportFromImportedHandleTypes"></member>
    <member name="F:VkExternalImageFormatPropertiesNV.externalMemoryFeatures"></member>
    <member name="F:VkExternalImageFormatPropertiesNV.imageFormatProperties"></member>
    <member name="T:VkExternalMemoryBufferCreateInfoKHX32"></member>
    <member name="F:VkExternalMemoryBufferCreateInfoKHX32.handleTypes"></member>
    <member name="F:VkExternalMemoryBufferCreateInfoKHX32.pNext"></member>
    <member name="F:VkExternalMemoryBufferCreateInfoKHX32.sType"></member>
    <member name="T:VkExternalMemoryBufferCreateInfoKHX64"></member>
    <member name="F:VkExternalMemoryBufferCreateInfoKHX64.handleTypes"></member>
    <member name="F:VkExternalMemoryBufferCreateInfoKHX64.pNext"></member>
    <member name="F:VkExternalMemoryBufferCreateInfoKHX64.sType"></member>
    <member name="T:VkExternalMemoryFeatureFlagsKHX"></member>
    <member name="F:VkExternalMemoryFeatureFlagsKHX.value__"></member>
    <member name="F:VkExternalMemoryFeatureFlagsKHX.VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHX"></member>
    <member name="F:VkExternalMemoryFeatureFlagsKHX.VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHX"></member>
    <member name="F:VkExternalMemoryFeatureFlagsKHX.VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_KHX"></member>
    <member name="F:VkExternalMemoryFeatureFlagsKHX.VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHX"></member>
    <member name="T:VkExternalMemoryFeatureFlagsNV"></member>
    <member name="F:VkExternalMemoryFeatureFlagsNV.value__"></member>
    <member name="F:VkExternalMemoryFeatureFlagsNV.VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV"></member>
    <member name="F:VkExternalMemoryFeatureFlagsNV.VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV"></member>
    <member name="F:VkExternalMemoryFeatureFlagsNV.VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV"></member>
    <member name="F:VkExternalMemoryFeatureFlagsNV.VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV"></member>
    <member name="T:VkExternalMemoryHandleTypeFlagsKHX"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.value__"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHX"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHX"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHX"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHX"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_KHX"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHX"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHX"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsKHX.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHX"></member>
    <member name="T:VkExternalMemoryHandleTypeFlagsNV"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsNV.value__"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsNV.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsNV.VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsNV.VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsNV.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV"></member>
    <member name="F:VkExternalMemoryHandleTypeFlagsNV.VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV"></member>
    <member name="T:VkExternalMemoryImageCreateInfoKHX32"></member>
    <member name="F:VkExternalMemoryImageCreateInfoKHX32.handleTypes"></member>
    <member name="F:VkExternalMemoryImageCreateInfoKHX32.pNext"></member>
    <member name="F:VkExternalMemoryImageCreateInfoKHX32.sType"></member>
    <member name="T:VkExternalMemoryImageCreateInfoKHX64"></member>
    <member name="F:VkExternalMemoryImageCreateInfoKHX64.handleTypes"></member>
    <member name="F:VkExternalMemoryImageCreateInfoKHX64.pNext"></member>
    <member name="F:VkExternalMemoryImageCreateInfoKHX64.sType"></member>
    <member name="T:VkExternalMemoryImageCreateInfoNV32"></member>
    <member name="F:VkExternalMemoryImageCreateInfoNV32.handleTypes"></member>
    <member name="F:VkExternalMemoryImageCreateInfoNV32.pNext"></member>
    <member name="F:VkExternalMemoryImageCreateInfoNV32.sType"></member>
    <member name="T:VkExternalMemoryImageCreateInfoNV64"></member>
    <member name="F:VkExternalMemoryImageCreateInfoNV64.handleTypes"></member>
    <member name="F:VkExternalMemoryImageCreateInfoNV64.pNext"></member>
    <member name="F:VkExternalMemoryImageCreateInfoNV64.sType"></member>
    <member name="T:VkExternalMemoryPropertiesKHX"></member>
    <member name="F:VkExternalMemoryPropertiesKHX.compatibleHandleTypes"></member>
    <member name="F:VkExternalMemoryPropertiesKHX.exportFromImportedHandleTypes"></member>
    <member name="F:VkExternalMemoryPropertiesKHX.externalMemoryFeatures"></member>
    <member name="T:VkExternalSemaphoreFeatureFlagsKHX"></member>
    <member name="F:VkExternalSemaphoreFeatureFlagsKHX.value__"></member>
    <member name="F:VkExternalSemaphoreFeatureFlagsKHX.VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHX"></member>
    <member name="F:VkExternalSemaphoreFeatureFlagsKHX.VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM_KHX"></member>
    <member name="F:VkExternalSemaphoreFeatureFlagsKHX.VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHX"></member>
    <member name="T:VkExternalSemaphoreHandleTypeFlagsKHX"></member>
    <member name="F:VkExternalSemaphoreHandleTypeFlagsKHX.value__"></member>
    <member name="F:VkExternalSemaphoreHandleTypeFlagsKHX.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHX"></member>
    <member name="F:VkExternalSemaphoreHandleTypeFlagsKHX.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FENCE_FD_BIT_KHX"></member>
    <member name="F:VkExternalSemaphoreHandleTypeFlagsKHX.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_KHX"></member>
    <member name="F:VkExternalSemaphoreHandleTypeFlagsKHX.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHX"></member>
    <member name="F:VkExternalSemaphoreHandleTypeFlagsKHX.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHX"></member>
    <member name="F:VkExternalSemaphoreHandleTypeFlagsKHX.VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHX"></member>
    <member name="T:VkExternalSemaphorePropertiesKHX32"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX32.compatibleHandleTypes"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX32.exportFromImportedHandleTypes"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX32.externalSemaphoreFeatures"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX32.pNext"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX32.sType"></member>
    <member name="T:VkExternalSemaphorePropertiesKHX64"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX64.compatibleHandleTypes"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX64.exportFromImportedHandleTypes"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX64.externalSemaphoreFeatures"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX64.pNext"></member>
    <member name="F:VkExternalSemaphorePropertiesKHX64.sType"></member>
    <member name="T:VkFence">
      <summary>Opaque handle to a fence object</summary>
    </member>
    <member name="M:VkFence.Cast(System.UInt64)"></member>
    <member name="T:VkFenceCreateFlags"></member>
    <member name="F:VkFenceCreateFlags.value__"></member>
    <member name="F:VkFenceCreateFlags.VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkFenceCreateFlags.VK_FENCE_CREATE_SIGNALED_BIT"></member>
    <member name="T:VkFenceCreateInfo32">
      <summary>Structure specifying parameters of a newly created fence</summary>
    </member>
    <member name="F:VkFenceCreateInfo32.flags"></member>
    <member name="F:VkFenceCreateInfo32.pNext"></member>
    <member name="F:VkFenceCreateInfo32.sType"></member>
    <member name="T:VkFenceCreateInfo64">
      <summary>Structure specifying parameters of a newly created fence</summary>
    </member>
    <member name="F:VkFenceCreateInfo64.flags"></member>
    <member name="F:VkFenceCreateInfo64.pNext"></member>
    <member name="F:VkFenceCreateInfo64.sType"></member>
    <member name="T:VkFilter"></member>
    <member name="F:VkFilter.value__"></member>
    <member name="F:VkFilter.VK_FILTER_BEGIN_RANGE"></member>
    <member name="F:VkFilter.VK_FILTER_CUBIC_IMG"></member>
    <member name="F:VkFilter.VK_FILTER_END_RANGE"></member>
    <member name="F:VkFilter.VK_FILTER_LINEAR"></member>
    <member name="F:VkFilter.VK_FILTER_MAX_ENUM"></member>
    <member name="F:VkFilter.VK_FILTER_NEAREST"></member>
    <member name="F:VkFilter.VK_FILTER_RANGE_SIZE"></member>
    <member name="T:vkFlushMappedMemoryRanges">
      <summary>Flush mapped memory ranges</summary>
    </member>
    <member name="M:vkFlushMappedMemoryRanges.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkFlushMappedMemoryRanges</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkFlushMappedMemoryRanges.Invoke(VkDevice*,System.UInt32,IVkMappedMemoryRange*)"></member>
    <member name="T:VkFormat"></member>
    <member name="F:VkFormat.value__"></member>
    <member name="F:VkFormat.VK_FORMAT_A1R5G5B5_UNORM_PACK16"></member>
    <member name="F:VkFormat.VK_FORMAT_A2B10G10R10_SINT_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2B10G10R10_SNORM_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2B10G10R10_SSCALED_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2B10G10R10_UINT_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2B10G10R10_UNORM_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2B10G10R10_USCALED_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2R10G10B10_SINT_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2R10G10B10_SNORM_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2R10G10B10_SSCALED_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2R10G10B10_UINT_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2R10G10B10_UNORM_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A2R10G10B10_USCALED_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A8B8G8R8_SINT_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A8B8G8R8_SNORM_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A8B8G8R8_SRGB_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A8B8G8R8_SSCALED_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A8B8G8R8_UINT_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A8B8G8R8_UNORM_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_A8B8G8R8_USCALED_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_10x10_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_10x10_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_10x5_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_10x5_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_10x6_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_10x6_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_10x8_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_10x8_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_12x10_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_12x10_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_12x12_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_12x12_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_4x4_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_4x4_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_5x4_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_5x4_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_5x5_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_5x5_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_6x5_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_6x5_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_6x6_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_6x6_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_8x5_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_8x5_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_8x6_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_8x6_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_8x8_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ASTC_8x8_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_B10G11R11_UFLOAT_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_B4G4R4A4_UNORM_PACK16"></member>
    <member name="F:VkFormat.VK_FORMAT_B5G5R5A1_UNORM_PACK16"></member>
    <member name="F:VkFormat.VK_FORMAT_B5G6R5_UNORM_PACK16"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8_SRGB"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8A8_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8A8_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8A8_SRGB"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8A8_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8A8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8A8_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_B8G8R8A8_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_BC1_RGB_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC1_RGB_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC1_RGBA_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC1_RGBA_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC2_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC2_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC3_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC3_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC4_SNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC4_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC5_SNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC5_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC6H_SFLOAT_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC6H_UFLOAT_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC7_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BC7_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_BEGIN_RANGE"></member>
    <member name="F:VkFormat.VK_FORMAT_D16_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_D16_UNORM_S8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_D24_UNORM_S8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_D32_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_D32_SFLOAT_S8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_E5B9G9R9_UFLOAT_PACK32"></member>
    <member name="F:VkFormat.VK_FORMAT_EAC_R11_SNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_EAC_R11_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_EAC_R11G11_SNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_EAC_R11G11_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_END_RANGE"></member>
    <member name="F:VkFormat.VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK"></member>
    <member name="F:VkFormat.VK_FORMAT_MAX_ENUM"></member>
    <member name="F:VkFormat.VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG"></member>
    <member name="F:VkFormat.VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG"></member>
    <member name="F:VkFormat.VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG"></member>
    <member name="F:VkFormat.VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG"></member>
    <member name="F:VkFormat.VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG"></member>
    <member name="F:VkFormat.VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG"></member>
    <member name="F:VkFormat.VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG"></member>
    <member name="F:VkFormat.VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG"></member>
    <member name="F:VkFormat.VK_FORMAT_R16_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R16_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R16_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R16_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16A16_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16A16_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16A16_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16A16_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16A16_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16A16_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R16G16B16A16_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R32_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32B32_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32B32_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32B32_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32B32A32_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32B32A32_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R32G32B32A32_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R4G4_UNORM_PACK8"></member>
    <member name="F:VkFormat.VK_FORMAT_R4G4B4A4_UNORM_PACK16"></member>
    <member name="F:VkFormat.VK_FORMAT_R5G5B5A1_UNORM_PACK16"></member>
    <member name="F:VkFormat.VK_FORMAT_R5G6B5_UNORM_PACK16"></member>
    <member name="F:VkFormat.VK_FORMAT_R64_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64B64_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64B64_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64B64_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64B64A64_SFLOAT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64B64A64_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R64G64B64A64_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R8_SRGB"></member>
    <member name="F:VkFormat.VK_FORMAT_R8_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R8_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8_SRGB"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8_SRGB"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8A8_SINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8A8_SNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8A8_SRGB"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8A8_SSCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8A8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8A8_UNORM"></member>
    <member name="F:VkFormat.VK_FORMAT_R8G8B8A8_USCALED"></member>
    <member name="F:VkFormat.VK_FORMAT_RANGE_SIZE"></member>
    <member name="F:VkFormat.VK_FORMAT_S8_UINT"></member>
    <member name="F:VkFormat.VK_FORMAT_UNDEFINED"></member>
    <member name="F:VkFormat.VK_FORMAT_X8_D24_UNORM_PACK32"></member>
    <member name="T:VkFormatFeatureFlags"></member>
    <member name="F:VkFormatFeatureFlags.value__"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_BLIT_DST_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_BLIT_SRC_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT"></member>
    <member name="F:VkFormatFeatureFlags.VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT"></member>
    <member name="T:VkFormatProperties">
      <summary>Structure specifying image format properties</summary>
    </member>
    <member name="F:VkFormatProperties.bufferFeatures"></member>
    <member name="F:VkFormatProperties.linearTilingFeatures"></member>
    <member name="F:VkFormatProperties.optimalTilingFeatures"></member>
    <member name="T:VkFormatProperties2KHR32"></member>
    <member name="F:VkFormatProperties2KHR32.formatProperties"></member>
    <member name="F:VkFormatProperties2KHR32.pNext"></member>
    <member name="F:VkFormatProperties2KHR32.sType"></member>
    <member name="T:VkFormatProperties2KHR64"></member>
    <member name="F:VkFormatProperties2KHR64.formatProperties"></member>
    <member name="F:VkFormatProperties2KHR64.pNext"></member>
    <member name="F:VkFormatProperties2KHR64.sType"></member>
    <member name="T:VkFramebuffer">
      <summary>Opaque handle to a framebuffer object</summary>
    </member>
    <member name="M:VkFramebuffer.Cast(System.UInt64)"></member>
    <member name="T:VkFramebufferCreateFlags"></member>
    <member name="F:VkFramebufferCreateFlags.value__"></member>
    <member name="T:VkFramebufferCreateInfo32">
      <summary>Structure specifying parameters of a newly created framebuffer</summary>
    </member>
    <member name="F:VkFramebufferCreateInfo32.attachmentCount"></member>
    <member name="F:VkFramebufferCreateInfo32.flags"></member>
    <member name="F:VkFramebufferCreateInfo32.height"></member>
    <member name="F:VkFramebufferCreateInfo32.layers"></member>
    <member name="F:VkFramebufferCreateInfo32.pAttachments"></member>
    <member name="F:VkFramebufferCreateInfo32.pNext"></member>
    <member name="F:VkFramebufferCreateInfo32.renderPass"></member>
    <member name="F:VkFramebufferCreateInfo32.sType"></member>
    <member name="F:VkFramebufferCreateInfo32.width"></member>
    <member name="T:VkFramebufferCreateInfo64">
      <summary>Structure specifying parameters of a newly created framebuffer</summary>
    </member>
    <member name="F:VkFramebufferCreateInfo64.attachmentCount"></member>
    <member name="F:VkFramebufferCreateInfo64.flags"></member>
    <member name="F:VkFramebufferCreateInfo64.height"></member>
    <member name="F:VkFramebufferCreateInfo64.layers"></member>
    <member name="F:VkFramebufferCreateInfo64.pAttachments"></member>
    <member name="F:VkFramebufferCreateInfo64.pNext"></member>
    <member name="F:VkFramebufferCreateInfo64.renderPass"></member>
    <member name="F:VkFramebufferCreateInfo64.sType"></member>
    <member name="F:VkFramebufferCreateInfo64.width"></member>
    <member name="T:vkFreeCommandBuffers">
      <summary>Free command buffers</summary>
    </member>
    <member name="M:vkFreeCommandBuffers.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkFreeCommandBuffers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkFreeCommandBuffers.Invoke(VkDevice*,VkCommandPool*,System.UInt32,VkCommandBuffer**)"></member>
    <member name="T:vkFreeDescriptorSets">
      <summary>Free one or more descriptor sets</summary>
    </member>
    <member name="M:vkFreeDescriptorSets.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkFreeDescriptorSets</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkFreeDescriptorSets.Invoke(VkDevice*,VkDescriptorPool*,System.UInt32,VkDescriptorSet**)"></member>
    <member name="T:vkFreeMemory">
      <summary>Free GPU memory</summary>
    </member>
    <member name="M:vkFreeMemory.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkFreeMemory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkFreeMemory.Invoke(VkDevice*,VkDeviceMemory*,IVkAllocationCallbacks*)"></member>
    <member name="T:VkFrontFace"></member>
    <member name="F:VkFrontFace.value__"></member>
    <member name="F:VkFrontFace.VK_FRONT_FACE_BEGIN_RANGE"></member>
    <member name="F:VkFrontFace.VK_FRONT_FACE_CLOCKWISE"></member>
    <member name="F:VkFrontFace.VK_FRONT_FACE_COUNTER_CLOCKWISE"></member>
    <member name="F:VkFrontFace.VK_FRONT_FACE_END_RANGE"></member>
    <member name="F:VkFrontFace.VK_FRONT_FACE_MAX_ENUM"></member>
    <member name="F:VkFrontFace.VK_FRONT_FACE_RANGE_SIZE"></member>
    <member name="T:vkGetBufferMemoryRequirements">
      <summary>Returns the memory requirements for specified Vulkan object</summary>
    </member>
    <member name="M:vkGetBufferMemoryRequirements.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetBufferMemoryRequirements</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetBufferMemoryRequirements.Invoke(VkDevice*,VkBuffer*,VkMemoryRequirements*)"></member>
    <member name="T:vkGetDeviceGroupPeerMemoryFeaturesKHX"></member>
    <member name="M:vkGetDeviceGroupPeerMemoryFeaturesKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDeviceGroupPeerMemoryFeaturesKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDeviceGroupPeerMemoryFeaturesKHX.Invoke(VkDevice*,System.UInt32,System.UInt32,System.UInt32,VkPeerMemoryFeatureFlagsKHX*)"></member>
    <member name="T:vkGetDeviceGroupPresentCapabilitiesKHX"></member>
    <member name="M:vkGetDeviceGroupPresentCapabilitiesKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDeviceGroupPresentCapabilitiesKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDeviceGroupPresentCapabilitiesKHX.Invoke(VkDevice*,IVkDeviceGroupPresentCapabilitiesKHX*)"></member>
    <member name="T:vkGetDeviceGroupSurfacePresentModesKHX"></member>
    <member name="M:vkGetDeviceGroupSurfacePresentModesKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDeviceGroupSurfacePresentModesKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDeviceGroupSurfacePresentModesKHX.Invoke(VkDevice*,VkSurfaceKHR*,VkDeviceGroupPresentModeFlagsKHX*)"></member>
    <member name="T:vkGetDeviceMemoryCommitment">
      <summary>Query the current commitment for a VkDeviceMemory</summary>
    </member>
    <member name="M:vkGetDeviceMemoryCommitment.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDeviceMemoryCommitment</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDeviceMemoryCommitment.Invoke(VkDevice*,VkDeviceMemory*,System.UInt64*)"></member>
    <member name="T:vkGetDeviceProcAddr">
      <summary>Return a function pointer for a command</summary>
    </member>
    <member name="M:vkGetDeviceProcAddr.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDeviceProcAddr</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDeviceProcAddr.Invoke(VkDevice*,System.SByte*)"></member>
    <member name="T:vkGetDeviceQueue">
      <summary>Get a queue handle from a device</summary>
    </member>
    <member name="M:vkGetDeviceQueue.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDeviceQueue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDeviceQueue.Invoke(VkDevice*,System.UInt32,System.UInt32,VkQueue**)"></member>
    <member name="T:vkGetDisplayModePropertiesKHR"></member>
    <member name="M:vkGetDisplayModePropertiesKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDisplayModePropertiesKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDisplayModePropertiesKHR.Invoke(VkPhysicalDevice*,VkDisplayKHR*,System.UInt32*,VkDisplayModePropertiesKHR*)"></member>
    <member name="T:vkGetDisplayPlaneCapabilitiesKHR"></member>
    <member name="M:vkGetDisplayPlaneCapabilitiesKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDisplayPlaneCapabilitiesKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDisplayPlaneCapabilitiesKHR.Invoke(VkPhysicalDevice*,VkDisplayModeKHR*,System.UInt32,VkDisplayPlaneCapabilitiesKHR*)"></member>
    <member name="T:vkGetDisplayPlaneSupportedDisplaysKHR"></member>
    <member name="M:vkGetDisplayPlaneSupportedDisplaysKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetDisplayPlaneSupportedDisplaysKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetDisplayPlaneSupportedDisplaysKHR.Invoke(VkPhysicalDevice*,System.UInt32,System.UInt32*,VkDisplayKHR**)"></member>
    <member name="T:vkGetEventStatus">
      <summary>Retrieve the status of an event object</summary>
    </member>
    <member name="M:vkGetEventStatus.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetEventStatus</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetEventStatus.Invoke(VkDevice*,VkEvent*)"></member>
    <member name="T:vkGetFenceStatus">
      <summary>Return the status of a fence</summary>
    </member>
    <member name="M:vkGetFenceStatus.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetFenceStatus</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetFenceStatus.Invoke(VkDevice*,VkFence*)"></member>
    <member name="T:vkGetImageMemoryRequirements">
      <summary>Returns the memory requirements for specified Vulkan object</summary>
    </member>
    <member name="M:vkGetImageMemoryRequirements.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetImageMemoryRequirements</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetImageMemoryRequirements.Invoke(VkDevice*,VkImage*,VkMemoryRequirements*)"></member>
    <member name="T:vkGetImageSparseMemoryRequirements">
      <summary>Query the memory requirements for a sparse image</summary>
    </member>
    <member name="M:vkGetImageSparseMemoryRequirements.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetImageSparseMemoryRequirements</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetImageSparseMemoryRequirements.Invoke(VkDevice*,VkImage*,System.UInt32*,VkSparseImageMemoryRequirements*)"></member>
    <member name="T:vkGetImageSubresourceLayout">
      <summary>Retrieve information about an image subresource</summary>
    </member>
    <member name="M:vkGetImageSubresourceLayout.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetImageSubresourceLayout</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetImageSubresourceLayout.Invoke(VkDevice*,VkImage*,VkImageSubresource*,VkSubresourceLayout*)"></member>
    <member name="T:vkGetInstanceProcAddr">
      <summary>Return a function pointer for a command</summary>
    </member>
    <member name="M:vkGetInstanceProcAddr.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetInstanceProcAddr</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetInstanceProcAddr.Invoke(VkInstance*,System.SByte*)"></member>
    <member name="T:vkGetMemoryFdKHX"></member>
    <member name="M:vkGetMemoryFdKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetMemoryFdKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetMemoryFdKHX.Invoke(VkDevice*,VkDeviceMemory*,VkExternalMemoryHandleTypeFlagsKHX,System.Int32*)"></member>
    <member name="T:vkGetMemoryFdPropertiesKHX"></member>
    <member name="M:vkGetMemoryFdPropertiesKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetMemoryFdPropertiesKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetMemoryFdPropertiesKHX.Invoke(VkDevice*,VkExternalMemoryHandleTypeFlagsKHX,System.Int32,IVkMemoryFdPropertiesKHX*)"></member>
    <member name="T:vkGetPastPresentationTimingGOOGLE"></member>
    <member name="M:vkGetPastPresentationTimingGOOGLE.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPastPresentationTimingGOOGLE</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPastPresentationTimingGOOGLE.Invoke(VkDevice*,VkSwapchainKHR*,System.UInt32*,VkPastPresentationTimingGOOGLE*)"></member>
    <member name="T:vkGetPhysicalDeviceDisplayPlanePropertiesKHR"></member>
    <member name="M:vkGetPhysicalDeviceDisplayPlanePropertiesKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceDisplayPlanePropertiesKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceDisplayPlanePropertiesKHR.Invoke(VkPhysicalDevice*,System.UInt32*,VkDisplayPlanePropertiesKHR*)"></member>
    <member name="T:vkGetPhysicalDeviceDisplayPropertiesKHR"></member>
    <member name="M:vkGetPhysicalDeviceDisplayPropertiesKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceDisplayPropertiesKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceDisplayPropertiesKHR.Invoke(VkPhysicalDevice*,System.UInt32*,IVkDisplayPropertiesKHR*)"></member>
    <member name="T:vkGetPhysicalDeviceExternalBufferPropertiesKHX"></member>
    <member name="M:vkGetPhysicalDeviceExternalBufferPropertiesKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceExternalBufferPropertiesKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceExternalBufferPropertiesKHX.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceExternalBufferInfoKHX*,IVkExternalBufferPropertiesKHX*)"></member>
    <member name="T:vkGetPhysicalDeviceExternalImageFormatPropertiesNV"></member>
    <member name="M:vkGetPhysicalDeviceExternalImageFormatPropertiesNV.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceExternalImageFormatPropertiesNV</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceExternalImageFormatPropertiesNV.Invoke(VkPhysicalDevice*,VkFormat,VkImageType,VkImageTiling,VkImageUsageFlags,VkImageCreateFlags,VkExternalMemoryHandleTypeFlagsNV,VkExternalImageFormatPropertiesNV*)"></member>
    <member name="T:vkGetPhysicalDeviceExternalSemaphorePropertiesKHX"></member>
    <member name="M:vkGetPhysicalDeviceExternalSemaphorePropertiesKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceExternalSemaphorePropertiesKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceExternalSemaphorePropertiesKHX.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceExternalSemaphoreInfoKHX*,IVkExternalSemaphorePropertiesKHX*)"></member>
    <member name="T:vkGetPhysicalDeviceFeatures">
      <summary>Reports capabilities of a physical device</summary>
    </member>
    <member name="M:vkGetPhysicalDeviceFeatures.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceFeatures</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceFeatures.Invoke(VkPhysicalDevice*,VkPhysicalDeviceFeatures*)"></member>
    <member name="T:vkGetPhysicalDeviceFeatures2KHR"></member>
    <member name="M:vkGetPhysicalDeviceFeatures2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceFeatures2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceFeatures2KHR.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceFeatures2KHR*)"></member>
    <member name="T:vkGetPhysicalDeviceFormatProperties">
      <summary>Lists physical device's format capabilities</summary>
    </member>
    <member name="M:vkGetPhysicalDeviceFormatProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceFormatProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceFormatProperties.Invoke(VkPhysicalDevice*,VkFormat,VkFormatProperties*)"></member>
    <member name="T:vkGetPhysicalDeviceFormatProperties2KHR"></member>
    <member name="M:vkGetPhysicalDeviceFormatProperties2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceFormatProperties2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceFormatProperties2KHR.Invoke(VkPhysicalDevice*,VkFormat,IVkFormatProperties2KHR*)"></member>
    <member name="T:vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX"></member>
    <member name="M:vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX.Invoke(VkPhysicalDevice*,IVkDeviceGeneratedCommandsFeaturesNVX*,IVkDeviceGeneratedCommandsLimitsNVX*)"></member>
    <member name="T:vkGetPhysicalDeviceImageFormatProperties">
      <summary>Lists physical device's image format capabilities</summary>
    </member>
    <member name="M:vkGetPhysicalDeviceImageFormatProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceImageFormatProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceImageFormatProperties.Invoke(VkPhysicalDevice*,VkFormat,VkImageType,VkImageTiling,VkImageUsageFlags,VkImageCreateFlags,VkImageFormatProperties*)"></member>
    <member name="T:vkGetPhysicalDeviceImageFormatProperties2KHR"></member>
    <member name="M:vkGetPhysicalDeviceImageFormatProperties2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceImageFormatProperties2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceImageFormatProperties2KHR.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceImageFormatInfo2KHR*,IVkImageFormatProperties2KHR*)"></member>
    <member name="T:vkGetPhysicalDeviceMemoryProperties">
      <summary>Reports memory information for the specified physical device</summary>
    </member>
    <member name="M:vkGetPhysicalDeviceMemoryProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceMemoryProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceMemoryProperties.Invoke(VkPhysicalDevice*,VkPhysicalDeviceMemoryProperties*)"></member>
    <member name="T:vkGetPhysicalDeviceMemoryProperties2KHR"></member>
    <member name="M:vkGetPhysicalDeviceMemoryProperties2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceMemoryProperties2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceMemoryProperties2KHR.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceMemoryProperties2KHR*)"></member>
    <member name="T:vkGetPhysicalDevicePresentRectanglesKHX"></member>
    <member name="M:vkGetPhysicalDevicePresentRectanglesKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDevicePresentRectanglesKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDevicePresentRectanglesKHX.Invoke(VkPhysicalDevice*,VkSurfaceKHR*,System.UInt32*,VkRect2D*)"></member>
    <member name="T:vkGetPhysicalDeviceProperties">
      <summary>Returns properties of a physical device</summary>
    </member>
    <member name="M:vkGetPhysicalDeviceProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceProperties.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceProperties*)"></member>
    <member name="T:vkGetPhysicalDeviceProperties2KHR"></member>
    <member name="M:vkGetPhysicalDeviceProperties2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceProperties2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceProperties2KHR.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceProperties2KHR*)"></member>
    <member name="T:vkGetPhysicalDeviceQueueFamilyProperties">
      <summary>Reports properties of the queues of the specified physical device</summary>
    </member>
    <member name="M:vkGetPhysicalDeviceQueueFamilyProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceQueueFamilyProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceQueueFamilyProperties.Invoke(VkPhysicalDevice*,System.UInt32*,VkQueueFamilyProperties*)"></member>
    <member name="T:vkGetPhysicalDeviceQueueFamilyProperties2KHR"></member>
    <member name="M:vkGetPhysicalDeviceQueueFamilyProperties2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceQueueFamilyProperties2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceQueueFamilyProperties2KHR.Invoke(VkPhysicalDevice*,System.UInt32*,IVkQueueFamilyProperties2KHR*)"></member>
    <member name="T:vkGetPhysicalDeviceSparseImageFormatProperties">
      <summary>Retrieve properties of an image format applied to sparse images</summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSparseImageFormatProperties.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSparseImageFormatProperties</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSparseImageFormatProperties.Invoke(VkPhysicalDevice*,VkFormat,VkImageType,VkSampleCountFlags,VkImageUsageFlags,VkImageTiling,System.UInt32*,VkSparseImageFormatProperties*)"></member>
    <member name="T:vkGetPhysicalDeviceSparseImageFormatProperties2KHR"></member>
    <member name="M:vkGetPhysicalDeviceSparseImageFormatProperties2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSparseImageFormatProperties2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSparseImageFormatProperties2KHR.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceSparseImageFormatInfo2KHR*,System.UInt32*,IVkSparseImageFormatProperties2KHR*)"></member>
    <member name="T:vkGetPhysicalDeviceSurfaceCapabilities2EXT"></member>
    <member name="M:vkGetPhysicalDeviceSurfaceCapabilities2EXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSurfaceCapabilities2EXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSurfaceCapabilities2EXT.Invoke(VkPhysicalDevice*,VkSurfaceKHR*,IVkSurfaceCapabilities2EXT*)"></member>
    <member name="T:vkGetPhysicalDeviceSurfaceCapabilities2KHR"></member>
    <member name="M:vkGetPhysicalDeviceSurfaceCapabilities2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSurfaceCapabilities2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSurfaceCapabilities2KHR.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceSurfaceInfo2KHR*,IVkSurfaceCapabilities2KHR*)"></member>
    <member name="T:vkGetPhysicalDeviceSurfaceCapabilitiesKHR"></member>
    <member name="M:vkGetPhysicalDeviceSurfaceCapabilitiesKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSurfaceCapabilitiesKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSurfaceCapabilitiesKHR.Invoke(VkPhysicalDevice*,VkSurfaceKHR*,VkSurfaceCapabilitiesKHR*)"></member>
    <member name="T:vkGetPhysicalDeviceSurfaceFormats2KHR"></member>
    <member name="M:vkGetPhysicalDeviceSurfaceFormats2KHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSurfaceFormats2KHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSurfaceFormats2KHR.Invoke(VkPhysicalDevice*,IVkPhysicalDeviceSurfaceInfo2KHR*,System.UInt32*,IVkSurfaceFormat2KHR*)"></member>
    <member name="T:vkGetPhysicalDeviceSurfaceFormatsKHR"></member>
    <member name="M:vkGetPhysicalDeviceSurfaceFormatsKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSurfaceFormatsKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSurfaceFormatsKHR.Invoke(VkPhysicalDevice*,VkSurfaceKHR*,System.UInt32*,VkSurfaceFormatKHR*)"></member>
    <member name="T:vkGetPhysicalDeviceSurfacePresentModesKHR"></member>
    <member name="M:vkGetPhysicalDeviceSurfacePresentModesKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSurfacePresentModesKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSurfacePresentModesKHR.Invoke(VkPhysicalDevice*,VkSurfaceKHR*,System.UInt32*,VkPresentModeKHR*)"></member>
    <member name="T:vkGetPhysicalDeviceSurfaceSupportKHR"></member>
    <member name="M:vkGetPhysicalDeviceSurfaceSupportKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPhysicalDeviceSurfaceSupportKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPhysicalDeviceSurfaceSupportKHR.Invoke(VkPhysicalDevice*,System.UInt32,VkSurfaceKHR*,System.UInt32*)"></member>
    <member name="T:vkGetPipelineCacheData">
      <summary>Get the data store from a pipeline cache</summary>
    </member>
    <member name="M:vkGetPipelineCacheData.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetPipelineCacheData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetPipelineCacheData.Invoke(VkDevice*,VkPipelineCache*,System.UInt64*,System.Void*)"></member>
    <member name="T:vkGetQueryPoolResults">
      <summary>Copy results of queries in a query pool to a host memory region</summary>
    </member>
    <member name="M:vkGetQueryPoolResults.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetQueryPoolResults</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetQueryPoolResults.Invoke(VkDevice*,VkQueryPool*,System.UInt32,System.UInt32,System.UInt64,System.Void*,System.UInt64,VkQueryResultFlags)"></member>
    <member name="T:vkGetRefreshCycleDurationGOOGLE"></member>
    <member name="M:vkGetRefreshCycleDurationGOOGLE.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetRefreshCycleDurationGOOGLE</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetRefreshCycleDurationGOOGLE.Invoke(VkDevice*,VkSwapchainKHR*,VkRefreshCycleDurationGOOGLE*)"></member>
    <member name="T:vkGetRenderAreaGranularity">
      <summary>Returns the granularity for optimal render area</summary>
    </member>
    <member name="M:vkGetRenderAreaGranularity.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetRenderAreaGranularity</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetRenderAreaGranularity.Invoke(VkDevice*,VkRenderPass*,VkExtent2D*)"></member>
    <member name="T:vkGetSemaphoreFdKHX"></member>
    <member name="M:vkGetSemaphoreFdKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetSemaphoreFdKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetSemaphoreFdKHX.Invoke(VkDevice*,VkSemaphore*,VkExternalSemaphoreHandleTypeFlagsKHX,System.Int32*)"></member>
    <member name="T:vkGetSwapchainCounterEXT"></member>
    <member name="M:vkGetSwapchainCounterEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetSwapchainCounterEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetSwapchainCounterEXT.Invoke(VkDevice*,VkSwapchainKHR*,VkSurfaceCounterFlagsEXT,System.UInt64*)"></member>
    <member name="T:vkGetSwapchainImagesKHR"></member>
    <member name="M:vkGetSwapchainImagesKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetSwapchainImagesKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetSwapchainImagesKHR.Invoke(VkDevice*,VkSwapchainKHR*,System.UInt32*,VkImage**)"></member>
    <member name="T:vkGetSwapchainStatusKHR"></member>
    <member name="M:vkGetSwapchainStatusKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkGetSwapchainStatusKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkGetSwapchainStatusKHR.Invoke(VkDevice*,VkSwapchainKHR*)"></member>
    <member name="T:VkGraphicsPipelineCreateInfo32">
      <summary>Structure specifying parameters of a newly created graphics pipeline</summary>
    </member>
    <member name="F:VkGraphicsPipelineCreateInfo32.basePipelineHandle"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.basePipelineIndex"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.flags"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.layout"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pColorBlendState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pDepthStencilState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pDynamicState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pInputAssemblyState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pMultisampleState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pNext"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pRasterizationState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pStages"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pTessellationState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pVertexInputState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.pViewportState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.renderPass"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.stageCount"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.sType"></member>
    <member name="F:VkGraphicsPipelineCreateInfo32.subpass"></member>
    <member name="T:VkGraphicsPipelineCreateInfo64">
      <summary>Structure specifying parameters of a newly created graphics pipeline</summary>
    </member>
    <member name="F:VkGraphicsPipelineCreateInfo64.basePipelineHandle"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.basePipelineIndex"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.flags"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.layout"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pColorBlendState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pDepthStencilState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pDynamicState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pInputAssemblyState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pMultisampleState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pNext"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pRasterizationState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pStages"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pTessellationState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pVertexInputState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.pViewportState"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.renderPass"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.stageCount"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.sType"></member>
    <member name="F:VkGraphicsPipelineCreateInfo64.subpass"></member>
    <member name="T:VkHdrMetadataEXT32"></member>
    <member name="F:VkHdrMetadataEXT32.displayPrimaryBlue"></member>
    <member name="F:VkHdrMetadataEXT32.displayPrimaryGreen"></member>
    <member name="F:VkHdrMetadataEXT32.displayPrimaryRed"></member>
    <member name="F:VkHdrMetadataEXT32.maxContentLightLevel"></member>
    <member name="F:VkHdrMetadataEXT32.maxFrameAverageLightLevel"></member>
    <member name="F:VkHdrMetadataEXT32.maxLuminance"></member>
    <member name="F:VkHdrMetadataEXT32.minLuminance"></member>
    <member name="F:VkHdrMetadataEXT32.pNext"></member>
    <member name="F:VkHdrMetadataEXT32.sType"></member>
    <member name="F:VkHdrMetadataEXT32.whitePoint"></member>
    <member name="T:VkHdrMetadataEXT64"></member>
    <member name="F:VkHdrMetadataEXT64.displayPrimaryBlue"></member>
    <member name="F:VkHdrMetadataEXT64.displayPrimaryGreen"></member>
    <member name="F:VkHdrMetadataEXT64.displayPrimaryRed"></member>
    <member name="F:VkHdrMetadataEXT64.maxContentLightLevel"></member>
    <member name="F:VkHdrMetadataEXT64.maxFrameAverageLightLevel"></member>
    <member name="F:VkHdrMetadataEXT64.maxLuminance"></member>
    <member name="F:VkHdrMetadataEXT64.minLuminance"></member>
    <member name="F:VkHdrMetadataEXT64.pNext"></member>
    <member name="F:VkHdrMetadataEXT64.sType"></member>
    <member name="F:VkHdrMetadataEXT64.whitePoint"></member>
    <member name="T:VkImage">
      <summary>Opaque handle to a image object</summary>
    </member>
    <member name="M:VkImage.Cast(System.UInt64)"></member>
    <member name="T:VkImageAspectFlags"></member>
    <member name="F:VkImageAspectFlags.value__"></member>
    <member name="F:VkImageAspectFlags.VK_IMAGE_ASPECT_COLOR_BIT"></member>
    <member name="F:VkImageAspectFlags.VK_IMAGE_ASPECT_DEPTH_BIT"></member>
    <member name="F:VkImageAspectFlags.VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkImageAspectFlags.VK_IMAGE_ASPECT_METADATA_BIT"></member>
    <member name="F:VkImageAspectFlags.VK_IMAGE_ASPECT_STENCIL_BIT"></member>
    <member name="T:VkImageBlit">
      <summary>Structure specifying an image blit operation</summary>
    </member>
    <member name="F:VkImageBlit.dstOffsets"></member>
    <member name="F:VkImageBlit.dstSubresource"></member>
    <member name="F:VkImageBlit.srcOffsets"></member>
    <member name="F:VkImageBlit.srcSubresource"></member>
    <member name="T:VkImageCopy">
      <summary>Structure specifying an image copy operation</summary>
    </member>
    <member name="F:VkImageCopy.dstOffset"></member>
    <member name="F:VkImageCopy.dstSubresource"></member>
    <member name="F:VkImageCopy.extent"></member>
    <member name="F:VkImageCopy.srcOffset"></member>
    <member name="F:VkImageCopy.srcSubresource"></member>
    <member name="T:VkImageCreateFlags"></member>
    <member name="F:VkImageCreateFlags.value__"></member>
    <member name="F:VkImageCreateFlags.VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR"></member>
    <member name="F:VkImageCreateFlags.VK_IMAGE_CREATE_BIND_SFR_BIT_KHX"></member>
    <member name="F:VkImageCreateFlags.VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT"></member>
    <member name="F:VkImageCreateFlags.VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkImageCreateFlags.VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT"></member>
    <member name="F:VkImageCreateFlags.VK_IMAGE_CREATE_SPARSE_ALIASED_BIT"></member>
    <member name="F:VkImageCreateFlags.VK_IMAGE_CREATE_SPARSE_BINDING_BIT"></member>
    <member name="F:VkImageCreateFlags.VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT"></member>
    <member name="T:VkImageCreateInfo32">
      <summary>Structure specifying the parameters of a newly created image object</summary>
    </member>
    <member name="F:VkImageCreateInfo32.arrayLayers"></member>
    <member name="F:VkImageCreateInfo32.extent"></member>
    <member name="F:VkImageCreateInfo32.flags"></member>
    <member name="F:VkImageCreateInfo32.format"></member>
    <member name="F:VkImageCreateInfo32.imageType"></member>
    <member name="F:VkImageCreateInfo32.initialLayout"></member>
    <member name="F:VkImageCreateInfo32.mipLevels"></member>
    <member name="F:VkImageCreateInfo32.pNext"></member>
    <member name="F:VkImageCreateInfo32.pQueueFamilyIndices"></member>
    <member name="F:VkImageCreateInfo32.queueFamilyIndexCount"></member>
    <member name="F:VkImageCreateInfo32.samples"></member>
    <member name="F:VkImageCreateInfo32.sharingMode"></member>
    <member name="F:VkImageCreateInfo32.sType"></member>
    <member name="F:VkImageCreateInfo32.tiling"></member>
    <member name="F:VkImageCreateInfo32.usage"></member>
    <member name="T:VkImageCreateInfo64">
      <summary>Structure specifying the parameters of a newly created image object</summary>
    </member>
    <member name="F:VkImageCreateInfo64.arrayLayers"></member>
    <member name="F:VkImageCreateInfo64.extent"></member>
    <member name="F:VkImageCreateInfo64.flags"></member>
    <member name="F:VkImageCreateInfo64.format"></member>
    <member name="F:VkImageCreateInfo64.imageType"></member>
    <member name="F:VkImageCreateInfo64.initialLayout"></member>
    <member name="F:VkImageCreateInfo64.mipLevels"></member>
    <member name="F:VkImageCreateInfo64.pNext"></member>
    <member name="F:VkImageCreateInfo64.pQueueFamilyIndices"></member>
    <member name="F:VkImageCreateInfo64.queueFamilyIndexCount"></member>
    <member name="F:VkImageCreateInfo64.samples"></member>
    <member name="F:VkImageCreateInfo64.sharingMode"></member>
    <member name="F:VkImageCreateInfo64.sType"></member>
    <member name="F:VkImageCreateInfo64.tiling"></member>
    <member name="F:VkImageCreateInfo64.usage"></member>
    <member name="T:VkImageFormatProperties">
      <summary>Structure specifying a image format properties</summary>
    </member>
    <member name="F:VkImageFormatProperties.maxArrayLayers"></member>
    <member name="F:VkImageFormatProperties.maxExtent"></member>
    <member name="F:VkImageFormatProperties.maxMipLevels"></member>
    <member name="F:VkImageFormatProperties.maxResourceSize"></member>
    <member name="F:VkImageFormatProperties.sampleCounts"></member>
    <member name="T:VkImageFormatProperties2KHR32"></member>
    <member name="F:VkImageFormatProperties2KHR32.imageFormatProperties"></member>
    <member name="F:VkImageFormatProperties2KHR32.pNext"></member>
    <member name="F:VkImageFormatProperties2KHR32.sType"></member>
    <member name="T:VkImageFormatProperties2KHR64"></member>
    <member name="F:VkImageFormatProperties2KHR64.imageFormatProperties"></member>
    <member name="F:VkImageFormatProperties2KHR64.pNext"></member>
    <member name="F:VkImageFormatProperties2KHR64.sType"></member>
    <member name="T:VkImageLayout"></member>
    <member name="F:VkImageLayout.value__"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_BEGIN_RANGE"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_END_RANGE"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_GENERAL"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_MAX_ENUM"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_PREINITIALIZED"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_PRESENT_SRC_KHR"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_RANGE_SIZE"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL"></member>
    <member name="F:VkImageLayout.VK_IMAGE_LAYOUT_UNDEFINED"></member>
    <member name="T:VkImageMemoryBarrier32">
      <summary>Structure specifying the parameters of an image memory barrier</summary>
    </member>
    <member name="F:VkImageMemoryBarrier32.dstAccessMask"></member>
    <member name="F:VkImageMemoryBarrier32.dstQueueFamilyIndex"></member>
    <member name="F:VkImageMemoryBarrier32.image"></member>
    <member name="F:VkImageMemoryBarrier32.newLayout"></member>
    <member name="F:VkImageMemoryBarrier32.oldLayout"></member>
    <member name="F:VkImageMemoryBarrier32.pNext"></member>
    <member name="F:VkImageMemoryBarrier32.srcAccessMask"></member>
    <member name="F:VkImageMemoryBarrier32.srcQueueFamilyIndex"></member>
    <member name="F:VkImageMemoryBarrier32.sType"></member>
    <member name="F:VkImageMemoryBarrier32.subresourceRange"></member>
    <member name="T:VkImageMemoryBarrier64">
      <summary>Structure specifying the parameters of an image memory barrier</summary>
    </member>
    <member name="F:VkImageMemoryBarrier64.dstAccessMask"></member>
    <member name="F:VkImageMemoryBarrier64.dstQueueFamilyIndex"></member>
    <member name="F:VkImageMemoryBarrier64.image"></member>
    <member name="F:VkImageMemoryBarrier64.newLayout"></member>
    <member name="F:VkImageMemoryBarrier64.oldLayout"></member>
    <member name="F:VkImageMemoryBarrier64.pNext"></member>
    <member name="F:VkImageMemoryBarrier64.srcAccessMask"></member>
    <member name="F:VkImageMemoryBarrier64.srcQueueFamilyIndex"></member>
    <member name="F:VkImageMemoryBarrier64.sType"></member>
    <member name="F:VkImageMemoryBarrier64.subresourceRange"></member>
    <member name="T:VkImageResolve">
      <summary>Structure specifying an image resolve operation</summary>
    </member>
    <member name="F:VkImageResolve.dstOffset"></member>
    <member name="F:VkImageResolve.dstSubresource"></member>
    <member name="F:VkImageResolve.extent"></member>
    <member name="F:VkImageResolve.srcOffset"></member>
    <member name="F:VkImageResolve.srcSubresource"></member>
    <member name="T:VkImageSubresource">
      <summary>Structure specifying a image subresource</summary>
    </member>
    <member name="F:VkImageSubresource.arrayLayer"></member>
    <member name="F:VkImageSubresource.aspectMask"></member>
    <member name="F:VkImageSubresource.mipLevel"></member>
    <member name="T:VkImageSubresourceLayers">
      <summary>Structure specifying a image subresource layers</summary>
    </member>
    <member name="F:VkImageSubresourceLayers.aspectMask"></member>
    <member name="F:VkImageSubresourceLayers.baseArrayLayer"></member>
    <member name="F:VkImageSubresourceLayers.layerCount"></member>
    <member name="F:VkImageSubresourceLayers.mipLevel"></member>
    <member name="T:VkImageSubresourceRange">
      <summary>Structure specifying a image subresource range</summary>
    </member>
    <member name="F:VkImageSubresourceRange.aspectMask"></member>
    <member name="F:VkImageSubresourceRange.baseArrayLayer"></member>
    <member name="F:VkImageSubresourceRange.baseMipLevel"></member>
    <member name="F:VkImageSubresourceRange.layerCount"></member>
    <member name="F:VkImageSubresourceRange.levelCount"></member>
    <member name="T:VkImageSwapchainCreateInfoKHX32"></member>
    <member name="F:VkImageSwapchainCreateInfoKHX32.pNext"></member>
    <member name="F:VkImageSwapchainCreateInfoKHX32.sType"></member>
    <member name="F:VkImageSwapchainCreateInfoKHX32.swapchain"></member>
    <member name="T:VkImageSwapchainCreateInfoKHX64"></member>
    <member name="F:VkImageSwapchainCreateInfoKHX64.pNext"></member>
    <member name="F:VkImageSwapchainCreateInfoKHX64.sType"></member>
    <member name="F:VkImageSwapchainCreateInfoKHX64.swapchain"></member>
    <member name="T:VkImageTiling"></member>
    <member name="F:VkImageTiling.value__"></member>
    <member name="F:VkImageTiling.VK_IMAGE_TILING_BEGIN_RANGE"></member>
    <member name="F:VkImageTiling.VK_IMAGE_TILING_END_RANGE"></member>
    <member name="F:VkImageTiling.VK_IMAGE_TILING_LINEAR"></member>
    <member name="F:VkImageTiling.VK_IMAGE_TILING_MAX_ENUM"></member>
    <member name="F:VkImageTiling.VK_IMAGE_TILING_OPTIMAL"></member>
    <member name="F:VkImageTiling.VK_IMAGE_TILING_RANGE_SIZE"></member>
    <member name="T:VkImageType"></member>
    <member name="F:VkImageType.value__"></member>
    <member name="F:VkImageType.VK_IMAGE_TYPE_1D"></member>
    <member name="F:VkImageType.VK_IMAGE_TYPE_2D"></member>
    <member name="F:VkImageType.VK_IMAGE_TYPE_3D"></member>
    <member name="F:VkImageType.VK_IMAGE_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkImageType.VK_IMAGE_TYPE_END_RANGE"></member>
    <member name="F:VkImageType.VK_IMAGE_TYPE_MAX_ENUM"></member>
    <member name="F:VkImageType.VK_IMAGE_TYPE_RANGE_SIZE"></member>
    <member name="T:VkImageUsageFlags"></member>
    <member name="F:VkImageUsageFlags.value__"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_SAMPLED_BIT"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_STORAGE_BIT"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_TRANSFER_DST_BIT"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_TRANSFER_SRC_BIT"></member>
    <member name="F:VkImageUsageFlags.VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT"></member>
    <member name="T:VkImageView">
      <summary>Opaque handle to a image view object</summary>
    </member>
    <member name="M:VkImageView.Cast(System.UInt64)"></member>
    <member name="T:VkImageViewCreateFlags"></member>
    <member name="F:VkImageViewCreateFlags.value__"></member>
    <member name="T:VkImageViewCreateInfo32">
      <summary>Structure specifying parameters of a newly created image view</summary>
    </member>
    <member name="F:VkImageViewCreateInfo32.components"></member>
    <member name="F:VkImageViewCreateInfo32.flags"></member>
    <member name="F:VkImageViewCreateInfo32.format"></member>
    <member name="F:VkImageViewCreateInfo32.image"></member>
    <member name="F:VkImageViewCreateInfo32.pNext"></member>
    <member name="F:VkImageViewCreateInfo32.sType"></member>
    <member name="F:VkImageViewCreateInfo32.subresourceRange"></member>
    <member name="F:VkImageViewCreateInfo32.viewType"></member>
    <member name="T:VkImageViewCreateInfo64">
      <summary>Structure specifying parameters of a newly created image view</summary>
    </member>
    <member name="F:VkImageViewCreateInfo64.components"></member>
    <member name="F:VkImageViewCreateInfo64.flags"></member>
    <member name="F:VkImageViewCreateInfo64.format"></member>
    <member name="F:VkImageViewCreateInfo64.image"></member>
    <member name="F:VkImageViewCreateInfo64.pNext"></member>
    <member name="F:VkImageViewCreateInfo64.sType"></member>
    <member name="F:VkImageViewCreateInfo64.subresourceRange"></member>
    <member name="F:VkImageViewCreateInfo64.viewType"></member>
    <member name="T:VkImageViewType"></member>
    <member name="F:VkImageViewType.value__"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_1D"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_1D_ARRAY"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_2D"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_2D_ARRAY"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_3D"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_CUBE"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_CUBE_ARRAY"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_END_RANGE"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_MAX_ENUM"></member>
    <member name="F:VkImageViewType.VK_IMAGE_VIEW_TYPE_RANGE_SIZE"></member>
    <member name="T:VkImportMemoryFdInfoKHX32"></member>
    <member name="F:VkImportMemoryFdInfoKHX32.fd"></member>
    <member name="F:VkImportMemoryFdInfoKHX32.handleType"></member>
    <member name="F:VkImportMemoryFdInfoKHX32.pNext"></member>
    <member name="F:VkImportMemoryFdInfoKHX32.sType"></member>
    <member name="T:VkImportMemoryFdInfoKHX64"></member>
    <member name="F:VkImportMemoryFdInfoKHX64.fd"></member>
    <member name="F:VkImportMemoryFdInfoKHX64.handleType"></member>
    <member name="F:VkImportMemoryFdInfoKHX64.pNext"></member>
    <member name="F:VkImportMemoryFdInfoKHX64.sType"></member>
    <member name="T:VkImportSemaphoreFdInfoKHX32"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX32.fd"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX32.handleType"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX32.pNext"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX32.semaphore"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX32.sType"></member>
    <member name="T:VkImportSemaphoreFdInfoKHX64"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX64.fd"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX64.handleType"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX64.pNext"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX64.semaphore"></member>
    <member name="F:VkImportSemaphoreFdInfoKHX64.sType"></member>
    <member name="T:vkImportSemaphoreFdKHX"></member>
    <member name="M:vkImportSemaphoreFdKHX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkImportSemaphoreFdKHX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkImportSemaphoreFdKHX.Invoke(VkDevice*,IVkImportSemaphoreFdInfoKHX*)"></member>
    <member name="T:VkIndexType"></member>
    <member name="F:VkIndexType.value__"></member>
    <member name="F:VkIndexType.VK_INDEX_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkIndexType.VK_INDEX_TYPE_END_RANGE"></member>
    <member name="F:VkIndexType.VK_INDEX_TYPE_MAX_ENUM"></member>
    <member name="F:VkIndexType.VK_INDEX_TYPE_RANGE_SIZE"></member>
    <member name="F:VkIndexType.VK_INDEX_TYPE_UINT16"></member>
    <member name="F:VkIndexType.VK_INDEX_TYPE_UINT32"></member>
    <member name="T:VkIndirectCommandsLayoutCreateInfoNVX32"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX32.flags"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX32.pipelineBindPoint"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX32.pNext"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX32.pTokens"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX32.sType"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX32.tokenCount"></member>
    <member name="T:VkIndirectCommandsLayoutCreateInfoNVX64"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX64.flags"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX64.pipelineBindPoint"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX64.pNext"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX64.pTokens"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX64.sType"></member>
    <member name="F:VkIndirectCommandsLayoutCreateInfoNVX64.tokenCount"></member>
    <member name="T:VkIndirectCommandsLayoutNVX"></member>
    <member name="M:VkIndirectCommandsLayoutNVX.Cast(System.UInt64)"></member>
    <member name="T:VkIndirectCommandsLayoutTokenNVX"></member>
    <member name="F:VkIndirectCommandsLayoutTokenNVX.bindingUnit"></member>
    <member name="F:VkIndirectCommandsLayoutTokenNVX.divisor"></member>
    <member name="F:VkIndirectCommandsLayoutTokenNVX.dynamicCount"></member>
    <member name="F:VkIndirectCommandsLayoutTokenNVX.tokenType"></member>
    <member name="T:VkIndirectCommandsLayoutUsageFlagsNVX"></member>
    <member name="F:VkIndirectCommandsLayoutUsageFlagsNVX.value__"></member>
    <member name="F:VkIndirectCommandsLayoutUsageFlagsNVX.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EMPTY_EXECUTIONS_BIT_NVX"></member>
    <member name="F:VkIndirectCommandsLayoutUsageFlagsNVX.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NVX"></member>
    <member name="F:VkIndirectCommandsLayoutUsageFlagsNVX.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NVX"></member>
    <member name="F:VkIndirectCommandsLayoutUsageFlagsNVX.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_SPARSE_SEQUENCES_BIT_NVX"></member>
    <member name="F:VkIndirectCommandsLayoutUsageFlagsNVX.VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NVX"></member>
    <member name="T:VkIndirectCommandsTokenNVX"></member>
    <member name="F:VkIndirectCommandsTokenNVX.buffer"></member>
    <member name="F:VkIndirectCommandsTokenNVX.offset"></member>
    <member name="F:VkIndirectCommandsTokenNVX.tokenType"></member>
    <member name="T:VkIndirectCommandsTokenTypeNVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.value__"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_BEGIN_RANGE_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_DESCRIPTOR_SET_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_END_RANGE_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_RANGE_SIZE_NVX"></member>
    <member name="F:VkIndirectCommandsTokenTypeNVX.VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVX"></member>
    <member name="T:VkInstance">
      <summary>Opaque handle to a instance object</summary>
    </member>
    <member name="M:VkInstance.Cast(System.Void*)"></member>
    <member name="T:VkInstanceCreateFlags"></member>
    <member name="F:VkInstanceCreateFlags.value__"></member>
    <member name="T:VkInstanceCreateInfo32">
      <summary>Structure specifying parameters of a newly created instance</summary>
    </member>
    <member name="F:VkInstanceCreateInfo32.enabledExtensionCount"></member>
    <member name="F:VkInstanceCreateInfo32.enabledLayerCount"></member>
    <member name="F:VkInstanceCreateInfo32.flags"></member>
    <member name="F:VkInstanceCreateInfo32.pApplicationInfo"></member>
    <member name="F:VkInstanceCreateInfo32.pNext"></member>
    <member name="F:VkInstanceCreateInfo32.ppEnabledExtensionNames"></member>
    <member name="F:VkInstanceCreateInfo32.ppEnabledLayerNames"></member>
    <member name="F:VkInstanceCreateInfo32.sType"></member>
    <member name="T:VkInstanceCreateInfo64">
      <summary>Structure specifying parameters of a newly created instance</summary>
    </member>
    <member name="F:VkInstanceCreateInfo64.enabledExtensionCount"></member>
    <member name="F:VkInstanceCreateInfo64.enabledLayerCount"></member>
    <member name="F:VkInstanceCreateInfo64.flags"></member>
    <member name="F:VkInstanceCreateInfo64.pApplicationInfo"></member>
    <member name="F:VkInstanceCreateInfo64.pNext"></member>
    <member name="F:VkInstanceCreateInfo64.ppEnabledExtensionNames"></member>
    <member name="F:VkInstanceCreateInfo64.ppEnabledLayerNames"></member>
    <member name="F:VkInstanceCreateInfo64.sType"></member>
    <member name="T:VkInternalAllocationType"></member>
    <member name="F:VkInternalAllocationType.value__"></member>
    <member name="F:VkInternalAllocationType.VK_INTERNAL_ALLOCATION_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkInternalAllocationType.VK_INTERNAL_ALLOCATION_TYPE_END_RANGE"></member>
    <member name="F:VkInternalAllocationType.VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE"></member>
    <member name="F:VkInternalAllocationType.VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM"></member>
    <member name="F:VkInternalAllocationType.VK_INTERNAL_ALLOCATION_TYPE_RANGE_SIZE"></member>
    <member name="T:vkInvalidateMappedMemoryRanges">
      <summary>Invalidate ranges of mapped memory objects</summary>
    </member>
    <member name="M:vkInvalidateMappedMemoryRanges.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkInvalidateMappedMemoryRanges</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkInvalidateMappedMemoryRanges.Invoke(VkDevice*,System.UInt32,IVkMappedMemoryRange*)"></member>
    <member name="T:VkIOSSurfaceCreateFlagsMVK"></member>
    <member name="F:VkIOSSurfaceCreateFlagsMVK.value__"></member>
    <member name="T:VkLayerProperties">
      <summary>Structure specifying layer properties</summary>
    </member>
    <member name="F:VkLayerProperties.description"></member>
    <member name="F:VkLayerProperties.implementationVersion"></member>
    <member name="F:VkLayerProperties.layerName"></member>
    <member name="F:VkLayerProperties.specVersion"></member>
    <member name="T:VkLogicOp"></member>
    <member name="F:VkLogicOp.value__"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_AND"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_AND_INVERTED"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_AND_REVERSE"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_BEGIN_RANGE"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_CLEAR"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_COPY"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_COPY_INVERTED"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_END_RANGE"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_EQUIVALENT"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_INVERT"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_MAX_ENUM"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_NAND"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_NO_OP"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_NOR"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_OR"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_OR_INVERTED"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_OR_REVERSE"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_RANGE_SIZE"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_SET"></member>
    <member name="F:VkLogicOp.VK_LOGIC_OP_XOR"></member>
    <member name="T:VkMacOSSurfaceCreateFlagsMVK"></member>
    <member name="F:VkMacOSSurfaceCreateFlagsMVK.value__"></member>
    <member name="T:vkMapMemory">
      <summary>Map a memory object into application address space</summary>
    </member>
    <member name="M:vkMapMemory.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkMapMemory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkMapMemory.Invoke(VkDevice*,VkDeviceMemory*,System.UInt64,System.UInt64,VkMemoryMapFlags,System.Void**)"></member>
    <member name="T:VkMappedMemoryRange32">
      <summary>Structure specifying a mapped memory range</summary>
    </member>
    <member name="F:VkMappedMemoryRange32.memory"></member>
    <member name="F:VkMappedMemoryRange32.offset"></member>
    <member name="F:VkMappedMemoryRange32.pNext"></member>
    <member name="F:VkMappedMemoryRange32.size"></member>
    <member name="F:VkMappedMemoryRange32.sType"></member>
    <member name="T:VkMappedMemoryRange64">
      <summary>Structure specifying a mapped memory range</summary>
    </member>
    <member name="F:VkMappedMemoryRange64.memory"></member>
    <member name="F:VkMappedMemoryRange64.offset"></member>
    <member name="F:VkMappedMemoryRange64.pNext"></member>
    <member name="F:VkMappedMemoryRange64.size"></member>
    <member name="F:VkMappedMemoryRange64.sType"></member>
    <member name="T:VkMemoryAllocateFlagsInfoKHX32"></member>
    <member name="F:VkMemoryAllocateFlagsInfoKHX32.deviceMask"></member>
    <member name="F:VkMemoryAllocateFlagsInfoKHX32.flags"></member>
    <member name="F:VkMemoryAllocateFlagsInfoKHX32.pNext"></member>
    <member name="F:VkMemoryAllocateFlagsInfoKHX32.sType"></member>
    <member name="T:VkMemoryAllocateFlagsInfoKHX64"></member>
    <member name="F:VkMemoryAllocateFlagsInfoKHX64.deviceMask"></member>
    <member name="F:VkMemoryAllocateFlagsInfoKHX64.flags"></member>
    <member name="F:VkMemoryAllocateFlagsInfoKHX64.pNext"></member>
    <member name="F:VkMemoryAllocateFlagsInfoKHX64.sType"></member>
    <member name="T:VkMemoryAllocateFlagsKHX"></member>
    <member name="F:VkMemoryAllocateFlagsKHX.value__"></member>
    <member name="F:VkMemoryAllocateFlagsKHX.VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHX"></member>
    <member name="F:VkMemoryAllocateFlagsKHX.VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM_KHX"></member>
    <member name="T:VkMemoryAllocateInfo32">
      <summary>Structure containing parameters of a memory allocation</summary>
    </member>
    <member name="F:VkMemoryAllocateInfo32.allocationSize"></member>
    <member name="F:VkMemoryAllocateInfo32.memoryTypeIndex"></member>
    <member name="F:VkMemoryAllocateInfo32.pNext"></member>
    <member name="F:VkMemoryAllocateInfo32.sType"></member>
    <member name="T:VkMemoryAllocateInfo64">
      <summary>Structure containing parameters of a memory allocation</summary>
    </member>
    <member name="F:VkMemoryAllocateInfo64.allocationSize"></member>
    <member name="F:VkMemoryAllocateInfo64.memoryTypeIndex"></member>
    <member name="F:VkMemoryAllocateInfo64.pNext"></member>
    <member name="F:VkMemoryAllocateInfo64.sType"></member>
    <member name="T:VkMemoryBarrier32">
      <summary>Structure specifying a global memory barrier</summary>
    </member>
    <member name="F:VkMemoryBarrier32.dstAccessMask"></member>
    <member name="F:VkMemoryBarrier32.pNext"></member>
    <member name="F:VkMemoryBarrier32.srcAccessMask"></member>
    <member name="F:VkMemoryBarrier32.sType"></member>
    <member name="T:VkMemoryBarrier64">
      <summary>Structure specifying a global memory barrier</summary>
    </member>
    <member name="F:VkMemoryBarrier64.dstAccessMask"></member>
    <member name="F:VkMemoryBarrier64.pNext"></member>
    <member name="F:VkMemoryBarrier64.srcAccessMask"></member>
    <member name="F:VkMemoryBarrier64.sType"></member>
    <member name="T:VkMemoryFdPropertiesKHX32"></member>
    <member name="F:VkMemoryFdPropertiesKHX32.memoryTypeBits"></member>
    <member name="F:VkMemoryFdPropertiesKHX32.pNext"></member>
    <member name="F:VkMemoryFdPropertiesKHX32.sType"></member>
    <member name="T:VkMemoryFdPropertiesKHX64"></member>
    <member name="F:VkMemoryFdPropertiesKHX64.memoryTypeBits"></member>
    <member name="F:VkMemoryFdPropertiesKHX64.pNext"></member>
    <member name="F:VkMemoryFdPropertiesKHX64.sType"></member>
    <member name="T:VkMemoryHeap">
      <summary>Structure specifying a memory heap</summary>
    </member>
    <member name="F:VkMemoryHeap.flags"></member>
    <member name="F:VkMemoryHeap.size"></member>
    <member name="T:VkMemoryHeapFlags"></member>
    <member name="F:VkMemoryHeapFlags.value__"></member>
    <member name="F:VkMemoryHeapFlags.VK_MEMORY_HEAP_DEVICE_LOCAL_BIT"></member>
    <member name="F:VkMemoryHeapFlags.VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkMemoryHeapFlags.VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHX"></member>
    <member name="T:VkMemoryMapFlags"></member>
    <member name="F:VkMemoryMapFlags.value__"></member>
    <member name="T:VkMemoryPropertyFlags"></member>
    <member name="F:VkMemoryPropertyFlags.value__"></member>
    <member name="F:VkMemoryPropertyFlags.VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT"></member>
    <member name="F:VkMemoryPropertyFlags.VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkMemoryPropertyFlags.VK_MEMORY_PROPERTY_HOST_CACHED_BIT"></member>
    <member name="F:VkMemoryPropertyFlags.VK_MEMORY_PROPERTY_HOST_COHERENT_BIT"></member>
    <member name="F:VkMemoryPropertyFlags.VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT"></member>
    <member name="F:VkMemoryPropertyFlags.VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT"></member>
    <member name="T:VkMemoryRequirements">
      <summary>Structure specifying memory requirements</summary>
    </member>
    <member name="F:VkMemoryRequirements.alignment"></member>
    <member name="F:VkMemoryRequirements.memoryTypeBits"></member>
    <member name="F:VkMemoryRequirements.size"></member>
    <member name="T:VkMemoryType">
      <summary>Structure specifying memory type</summary>
    </member>
    <member name="F:VkMemoryType.heapIndex"></member>
    <member name="F:VkMemoryType.propertyFlags"></member>
    <member name="T:vkMergePipelineCaches">
      <summary>Combine the data stores of pipeline caches</summary>
    </member>
    <member name="M:vkMergePipelineCaches.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkMergePipelineCaches</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkMergePipelineCaches.Invoke(VkDevice*,VkPipelineCache*,System.UInt32,VkPipelineCache**)"></member>
    <member name="T:VkMirSurfaceCreateFlagsKHR"></member>
    <member name="F:VkMirSurfaceCreateFlagsKHR.value__"></member>
    <member name="T:VkObjectEntryTypeNVX"></member>
    <member name="F:VkObjectEntryTypeNVX.value__"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_BEGIN_RANGE_NVX"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_DESCRIPTOR_SET_NVX"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_END_RANGE_NVX"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_INDEX_BUFFER_NVX"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_MAX_ENUM_NVX"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_PIPELINE_NVX"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_PUSH_CONSTANT_NVX"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_RANGE_SIZE_NVX"></member>
    <member name="F:VkObjectEntryTypeNVX.VK_OBJECT_ENTRY_TYPE_VERTEX_BUFFER_NVX"></member>
    <member name="T:VkObjectEntryUsageFlagsNVX"></member>
    <member name="F:VkObjectEntryUsageFlagsNVX.value__"></member>
    <member name="F:VkObjectEntryUsageFlagsNVX.VK_OBJECT_ENTRY_USAGE_COMPUTE_BIT_NVX"></member>
    <member name="F:VkObjectEntryUsageFlagsNVX.VK_OBJECT_ENTRY_USAGE_FLAG_BITS_MAX_ENUM_NVX"></member>
    <member name="F:VkObjectEntryUsageFlagsNVX.VK_OBJECT_ENTRY_USAGE_GRAPHICS_BIT_NVX"></member>
    <member name="T:VkObjectTableCreateInfoNVX32"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.maxPipelineLayouts"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.maxSampledImagesPerDescriptor"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.maxStorageBuffersPerDescriptor"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.maxStorageImagesPerDescriptor"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.maxUniformBuffersPerDescriptor"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.objectCount"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.pNext"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.pObjectEntryCounts"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.pObjectEntryTypes"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.pObjectEntryUsageFlags"></member>
    <member name="F:VkObjectTableCreateInfoNVX32.sType"></member>
    <member name="T:VkObjectTableCreateInfoNVX64"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.maxPipelineLayouts"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.maxSampledImagesPerDescriptor"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.maxStorageBuffersPerDescriptor"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.maxStorageImagesPerDescriptor"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.maxUniformBuffersPerDescriptor"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.objectCount"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.pNext"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.pObjectEntryCounts"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.pObjectEntryTypes"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.pObjectEntryUsageFlags"></member>
    <member name="F:VkObjectTableCreateInfoNVX64.sType"></member>
    <member name="T:VkObjectTableDescriptorSetEntryNVX"></member>
    <member name="F:VkObjectTableDescriptorSetEntryNVX.descriptorSet"></member>
    <member name="F:VkObjectTableDescriptorSetEntryNVX.flags"></member>
    <member name="F:VkObjectTableDescriptorSetEntryNVX.pipelineLayout"></member>
    <member name="F:VkObjectTableDescriptorSetEntryNVX.type"></member>
    <member name="T:VkObjectTableEntryNVX"></member>
    <member name="F:VkObjectTableEntryNVX.flags"></member>
    <member name="F:VkObjectTableEntryNVX.type"></member>
    <member name="T:VkObjectTableIndexBufferEntryNVX"></member>
    <member name="F:VkObjectTableIndexBufferEntryNVX.buffer"></member>
    <member name="F:VkObjectTableIndexBufferEntryNVX.flags"></member>
    <member name="F:VkObjectTableIndexBufferEntryNVX.indexType"></member>
    <member name="F:VkObjectTableIndexBufferEntryNVX.type"></member>
    <member name="T:VkObjectTableNVX"></member>
    <member name="M:VkObjectTableNVX.Cast(System.UInt64)"></member>
    <member name="T:VkObjectTablePipelineEntryNVX"></member>
    <member name="F:VkObjectTablePipelineEntryNVX.flags"></member>
    <member name="F:VkObjectTablePipelineEntryNVX.pipeline"></member>
    <member name="F:VkObjectTablePipelineEntryNVX.type"></member>
    <member name="T:VkObjectTablePushConstantEntryNVX"></member>
    <member name="F:VkObjectTablePushConstantEntryNVX.flags"></member>
    <member name="F:VkObjectTablePushConstantEntryNVX.pipelineLayout"></member>
    <member name="F:VkObjectTablePushConstantEntryNVX.stageFlags"></member>
    <member name="F:VkObjectTablePushConstantEntryNVX.type"></member>
    <member name="T:VkObjectTableVertexBufferEntryNVX"></member>
    <member name="F:VkObjectTableVertexBufferEntryNVX.buffer"></member>
    <member name="F:VkObjectTableVertexBufferEntryNVX.flags"></member>
    <member name="F:VkObjectTableVertexBufferEntryNVX.type"></member>
    <member name="T:VkObjectType"></member>
    <member name="F:VkObjectType.value__"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_BUFFER"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_BUFFER_VIEW"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_COMMAND_BUFFER"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_COMMAND_POOL"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DESCRIPTOR_POOL"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DESCRIPTOR_SET"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DEVICE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DEVICE_MEMORY"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DISPLAY_KHR"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_DISPLAY_MODE_KHR"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_END_RANGE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_EVENT"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_FENCE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_FRAMEBUFFER"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_IMAGE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_IMAGE_VIEW"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVX"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_INSTANCE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_MAX_ENUM"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_OBJECT_TABLE_NVX"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_PHYSICAL_DEVICE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_PIPELINE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_PIPELINE_CACHE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_PIPELINE_LAYOUT"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_QUERY_POOL"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_QUEUE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_RANGE_SIZE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_RENDER_PASS"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_SAMPLER"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_SEMAPHORE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_SHADER_MODULE"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_SURFACE_KHR"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_SWAPCHAIN_KHR"></member>
    <member name="F:VkObjectType.VK_OBJECT_TYPE_UNKNOWN"></member>
    <member name="T:VkOffset2D">
      <summary>Structure specifying a two-dimensional offset</summary>
    </member>
    <member name="F:VkOffset2D.x"></member>
    <member name="F:VkOffset2D.y"></member>
    <member name="T:VkOffset3D">
      <summary>Structure specifying a three-dimensional offset</summary>
    </member>
    <member name="F:VkOffset3D.x"></member>
    <member name="F:VkOffset3D.y"></member>
    <member name="F:VkOffset3D.z"></member>
    <member name="T:VkPastPresentationTimingGOOGLE"></member>
    <member name="F:VkPastPresentationTimingGOOGLE.actualPresentTime"></member>
    <member name="F:VkPastPresentationTimingGOOGLE.desiredPresentTime"></member>
    <member name="F:VkPastPresentationTimingGOOGLE.earliestPresentTime"></member>
    <member name="F:VkPastPresentationTimingGOOGLE.presentID"></member>
    <member name="F:VkPastPresentationTimingGOOGLE.presentMargin"></member>
    <member name="T:VkPeerMemoryFeatureFlagsKHX"></member>
    <member name="F:VkPeerMemoryFeatureFlagsKHX.value__"></member>
    <member name="F:VkPeerMemoryFeatureFlagsKHX.VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHX"></member>
    <member name="F:VkPeerMemoryFeatureFlagsKHX.VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHX"></member>
    <member name="F:VkPeerMemoryFeatureFlagsKHX.VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_KHX"></member>
    <member name="F:VkPeerMemoryFeatureFlagsKHX.VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHX"></member>
    <member name="F:VkPeerMemoryFeatureFlagsKHX.VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHX"></member>
    <member name="T:VkPhysicalDevice">
      <summary>Opaque handle to a physical device object</summary>
    </member>
    <member name="M:VkPhysicalDevice.Cast(System.Void*)"></member>
    <member name="T:VkPhysicalDeviceDiscardRectanglePropertiesEXT32"></member>
    <member name="F:VkPhysicalDeviceDiscardRectanglePropertiesEXT32.maxDiscardRectangles"></member>
    <member name="F:VkPhysicalDeviceDiscardRectanglePropertiesEXT32.pNext"></member>
    <member name="F:VkPhysicalDeviceDiscardRectanglePropertiesEXT32.sType"></member>
    <member name="T:VkPhysicalDeviceDiscardRectanglePropertiesEXT64"></member>
    <member name="F:VkPhysicalDeviceDiscardRectanglePropertiesEXT64.maxDiscardRectangles"></member>
    <member name="F:VkPhysicalDeviceDiscardRectanglePropertiesEXT64.pNext"></member>
    <member name="F:VkPhysicalDeviceDiscardRectanglePropertiesEXT64.sType"></member>
    <member name="T:VkPhysicalDeviceExternalBufferInfoKHX32"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX32.flags"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX32.handleType"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX32.pNext"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX32.sType"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX32.usage"></member>
    <member name="T:VkPhysicalDeviceExternalBufferInfoKHX64"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX64.flags"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX64.handleType"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX64.pNext"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX64.sType"></member>
    <member name="F:VkPhysicalDeviceExternalBufferInfoKHX64.usage"></member>
    <member name="T:VkPhysicalDeviceExternalImageFormatInfoKHX32"></member>
    <member name="F:VkPhysicalDeviceExternalImageFormatInfoKHX32.handleType"></member>
    <member name="F:VkPhysicalDeviceExternalImageFormatInfoKHX32.pNext"></member>
    <member name="F:VkPhysicalDeviceExternalImageFormatInfoKHX32.sType"></member>
    <member name="T:VkPhysicalDeviceExternalImageFormatInfoKHX64"></member>
    <member name="F:VkPhysicalDeviceExternalImageFormatInfoKHX64.handleType"></member>
    <member name="F:VkPhysicalDeviceExternalImageFormatInfoKHX64.pNext"></member>
    <member name="F:VkPhysicalDeviceExternalImageFormatInfoKHX64.sType"></member>
    <member name="T:VkPhysicalDeviceExternalSemaphoreInfoKHX32"></member>
    <member name="F:VkPhysicalDeviceExternalSemaphoreInfoKHX32.handleType"></member>
    <member name="F:VkPhysicalDeviceExternalSemaphoreInfoKHX32.pNext"></member>
    <member name="F:VkPhysicalDeviceExternalSemaphoreInfoKHX32.sType"></member>
    <member name="T:VkPhysicalDeviceExternalSemaphoreInfoKHX64"></member>
    <member name="F:VkPhysicalDeviceExternalSemaphoreInfoKHX64.handleType"></member>
    <member name="F:VkPhysicalDeviceExternalSemaphoreInfoKHX64.pNext"></member>
    <member name="F:VkPhysicalDeviceExternalSemaphoreInfoKHX64.sType"></member>
    <member name="T:VkPhysicalDeviceFeatures">
      <summary>Structure describing the fine-grained features that can be supported by an implementation</summary>
    </member>
    <member name="F:VkPhysicalDeviceFeatures.alphaToOne"></member>
    <member name="F:VkPhysicalDeviceFeatures.depthBiasClamp"></member>
    <member name="F:VkPhysicalDeviceFeatures.depthBounds"></member>
    <member name="F:VkPhysicalDeviceFeatures.depthClamp"></member>
    <member name="F:VkPhysicalDeviceFeatures.drawIndirectFirstInstance"></member>
    <member name="F:VkPhysicalDeviceFeatures.dualSrcBlend"></member>
    <member name="F:VkPhysicalDeviceFeatures.fillModeNonSolid"></member>
    <member name="F:VkPhysicalDeviceFeatures.fragmentStoresAndAtomics"></member>
    <member name="F:VkPhysicalDeviceFeatures.fullDrawIndexUint32"></member>
    <member name="F:VkPhysicalDeviceFeatures.geometryShader"></member>
    <member name="F:VkPhysicalDeviceFeatures.imageCubeArray"></member>
    <member name="F:VkPhysicalDeviceFeatures.independentBlend"></member>
    <member name="F:VkPhysicalDeviceFeatures.inheritedQueries"></member>
    <member name="F:VkPhysicalDeviceFeatures.largePoints"></member>
    <member name="F:VkPhysicalDeviceFeatures.logicOp"></member>
    <member name="F:VkPhysicalDeviceFeatures.multiDrawIndirect"></member>
    <member name="F:VkPhysicalDeviceFeatures.multiViewport"></member>
    <member name="F:VkPhysicalDeviceFeatures.occlusionQueryPrecise"></member>
    <member name="F:VkPhysicalDeviceFeatures.pipelineStatisticsQuery"></member>
    <member name="F:VkPhysicalDeviceFeatures.robustBufferAccess"></member>
    <member name="F:VkPhysicalDeviceFeatures.samplerAnisotropy"></member>
    <member name="F:VkPhysicalDeviceFeatures.sampleRateShading"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderClipDistance"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderCullDistance"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderFloat64"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderImageGatherExtended"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderInt16"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderInt64"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderResourceMinLod"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderResourceResidency"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderSampledImageArrayDynamicIndexing"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderStorageBufferArrayDynamicIndexing"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderStorageImageArrayDynamicIndexing"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderStorageImageExtendedFormats"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderStorageImageMultisample"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderStorageImageReadWithoutFormat"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderStorageImageWriteWithoutFormat"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderTessellationAndGeometryPointSize"></member>
    <member name="F:VkPhysicalDeviceFeatures.shaderUniformBufferArrayDynamicIndexing"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseBinding"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseResidency16Samples"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseResidency2Samples"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseResidency4Samples"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseResidency8Samples"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseResidencyAliased"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseResidencyBuffer"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseResidencyImage2D"></member>
    <member name="F:VkPhysicalDeviceFeatures.sparseResidencyImage3D"></member>
    <member name="F:VkPhysicalDeviceFeatures.tessellationShader"></member>
    <member name="F:VkPhysicalDeviceFeatures.textureCompressionASTC_LDR"></member>
    <member name="F:VkPhysicalDeviceFeatures.textureCompressionBC"></member>
    <member name="F:VkPhysicalDeviceFeatures.textureCompressionETC2"></member>
    <member name="F:VkPhysicalDeviceFeatures.variableMultisampleRate"></member>
    <member name="F:VkPhysicalDeviceFeatures.vertexPipelineStoresAndAtomics"></member>
    <member name="F:VkPhysicalDeviceFeatures.wideLines"></member>
    <member name="T:VkPhysicalDeviceFeatures2KHR32"></member>
    <member name="F:VkPhysicalDeviceFeatures2KHR32.features"></member>
    <member name="F:VkPhysicalDeviceFeatures2KHR32.pNext"></member>
    <member name="F:VkPhysicalDeviceFeatures2KHR32.sType"></member>
    <member name="T:VkPhysicalDeviceFeatures2KHR64"></member>
    <member name="F:VkPhysicalDeviceFeatures2KHR64.features"></member>
    <member name="F:VkPhysicalDeviceFeatures2KHR64.pNext"></member>
    <member name="F:VkPhysicalDeviceFeatures2KHR64.sType"></member>
    <member name="T:VkPhysicalDeviceGroupPropertiesKHX32"></member>
    <member name="F:VkPhysicalDeviceGroupPropertiesKHX32.physicalDeviceCount"></member>
    <member name="M:VkPhysicalDeviceGroupPropertiesKHX32.physicalDevices(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceGroupPropertiesKHX32.pNext"></member>
    <member name="F:VkPhysicalDeviceGroupPropertiesKHX32.sType"></member>
    <member name="F:VkPhysicalDeviceGroupPropertiesKHX32.subsetAllocation"></member>
    <member name="T:VkPhysicalDeviceGroupPropertiesKHX64"></member>
    <member name="F:VkPhysicalDeviceGroupPropertiesKHX64.physicalDeviceCount"></member>
    <member name="M:VkPhysicalDeviceGroupPropertiesKHX64.physicalDevices(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceGroupPropertiesKHX64.pNext"></member>
    <member name="F:VkPhysicalDeviceGroupPropertiesKHX64.sType"></member>
    <member name="F:VkPhysicalDeviceGroupPropertiesKHX64.subsetAllocation"></member>
    <member name="T:VkPhysicalDeviceIDPropertiesKHX32"></member>
    <member name="M:VkPhysicalDeviceIDPropertiesKHX32.deviceLUID(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceIDPropertiesKHX32.deviceLUIDValid"></member>
    <member name="M:VkPhysicalDeviceIDPropertiesKHX32.deviceUUID(System.Int32)"></member>
    <member name="M:VkPhysicalDeviceIDPropertiesKHX32.driverUUID(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceIDPropertiesKHX32.pNext"></member>
    <member name="F:VkPhysicalDeviceIDPropertiesKHX32.sType"></member>
    <member name="T:VkPhysicalDeviceIDPropertiesKHX64"></member>
    <member name="M:VkPhysicalDeviceIDPropertiesKHX64.deviceLUID(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceIDPropertiesKHX64.deviceLUIDValid"></member>
    <member name="M:VkPhysicalDeviceIDPropertiesKHX64.deviceUUID(System.Int32)"></member>
    <member name="M:VkPhysicalDeviceIDPropertiesKHX64.driverUUID(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceIDPropertiesKHX64.pNext"></member>
    <member name="F:VkPhysicalDeviceIDPropertiesKHX64.sType"></member>
    <member name="T:VkPhysicalDeviceImageFormatInfo2KHR32"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR32.flags"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR32.format"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR32.pNext"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR32.sType"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR32.tiling"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR32.type"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR32.usage"></member>
    <member name="T:VkPhysicalDeviceImageFormatInfo2KHR64"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR64.flags"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR64.format"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR64.pNext"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR64.sType"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR64.tiling"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR64.type"></member>
    <member name="F:VkPhysicalDeviceImageFormatInfo2KHR64.usage"></member>
    <member name="T:VkPhysicalDeviceLimits32">
      <summary>Structure reporting implementation-dependent physical device limits</summary>
    </member>
    <member name="F:VkPhysicalDeviceLimits32.bufferImageGranularity"></member>
    <member name="F:VkPhysicalDeviceLimits32.discreteQueuePriorities"></member>
    <member name="F:VkPhysicalDeviceLimits32.framebufferColorSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.framebufferDepthSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.framebufferNoAttachmentsSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.framebufferStencilSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.lineWidthGranularity"></member>
    <member name="M:VkPhysicalDeviceLimits32.lineWidthRange(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxBoundDescriptorSets"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxClipDistances"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxColorAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxCombinedClipAndCullDistances"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxComputeSharedMemorySize"></member>
    <member name="M:VkPhysicalDeviceLimits32.maxComputeWorkGroupCount(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxComputeWorkGroupInvocations"></member>
    <member name="M:VkPhysicalDeviceLimits32.maxComputeWorkGroupSize(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxCullDistances"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDescriptorSetInputAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDescriptorSetSampledImages"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDescriptorSetSamplers"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDescriptorSetStorageBuffers"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDescriptorSetStorageBuffersDynamic"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDescriptorSetStorageImages"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDescriptorSetUniformBuffers"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDescriptorSetUniformBuffersDynamic"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDrawIndexedIndexValue"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxDrawIndirectCount"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxFragmentCombinedOutputResources"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxFragmentDualSrcAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxFragmentInputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxFragmentOutputAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxFramebufferHeight"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxFramebufferLayers"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxFramebufferWidth"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxGeometryInputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxGeometryOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxGeometryOutputVertices"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxGeometryShaderInvocations"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxGeometryTotalOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxImageArrayLayers"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxImageDimension1D"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxImageDimension2D"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxImageDimension3D"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxImageDimensionCube"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxInterpolationOffset"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxMemoryAllocationCount"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxPerStageDescriptorInputAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxPerStageDescriptorSampledImages"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxPerStageDescriptorSamplers"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxPerStageDescriptorStorageBuffers"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxPerStageDescriptorStorageImages"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxPerStageDescriptorUniformBuffers"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxPerStageResources"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxPushConstantsSize"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxSampleMaskWords"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxSamplerAllocationCount"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxSamplerAnisotropy"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxSamplerLodBias"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxStorageBufferRange"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTessellationControlPerPatchOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTessellationControlPerVertexInputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTessellationControlPerVertexOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTessellationControlTotalOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTessellationEvaluationInputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTessellationEvaluationOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTessellationGenerationLevel"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTessellationPatchSize"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTexelBufferElements"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTexelGatherOffset"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxTexelOffset"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxUniformBufferRange"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxVertexInputAttributeOffset"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxVertexInputAttributes"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxVertexInputBindings"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxVertexInputBindingStride"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxVertexOutputComponents"></member>
    <member name="M:VkPhysicalDeviceLimits32.maxViewportDimensions(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits32.maxViewports"></member>
    <member name="F:VkPhysicalDeviceLimits32.minInterpolationOffset"></member>
    <member name="F:VkPhysicalDeviceLimits32.minMemoryMapAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits32.minStorageBufferOffsetAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits32.minTexelBufferOffsetAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits32.minTexelGatherOffset"></member>
    <member name="F:VkPhysicalDeviceLimits32.minTexelOffset"></member>
    <member name="F:VkPhysicalDeviceLimits32.minUniformBufferOffsetAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits32.mipmapPrecisionBits"></member>
    <member name="F:VkPhysicalDeviceLimits32.nonCoherentAtomSize"></member>
    <member name="F:VkPhysicalDeviceLimits32.optimalBufferCopyOffsetAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits32.optimalBufferCopyRowPitchAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits32.pointSizeGranularity"></member>
    <member name="M:VkPhysicalDeviceLimits32.pointSizeRange(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits32.sampledImageColorSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.sampledImageDepthSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.sampledImageIntegerSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.sampledImageStencilSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.sparseAddressSpaceSize"></member>
    <member name="F:VkPhysicalDeviceLimits32.standardSampleLocations"></member>
    <member name="F:VkPhysicalDeviceLimits32.storageImageSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits32.strictLines"></member>
    <member name="F:VkPhysicalDeviceLimits32.subPixelInterpolationOffsetBits"></member>
    <member name="F:VkPhysicalDeviceLimits32.subPixelPrecisionBits"></member>
    <member name="F:VkPhysicalDeviceLimits32.subTexelPrecisionBits"></member>
    <member name="F:VkPhysicalDeviceLimits32.timestampComputeAndGraphics"></member>
    <member name="F:VkPhysicalDeviceLimits32.timestampPeriod"></member>
    <member name="M:VkPhysicalDeviceLimits32.viewportBoundsRange(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits32.viewportSubPixelBits"></member>
    <member name="T:VkPhysicalDeviceLimits64">
      <summary>Structure reporting implementation-dependent physical device limits</summary>
    </member>
    <member name="F:VkPhysicalDeviceLimits64.bufferImageGranularity"></member>
    <member name="F:VkPhysicalDeviceLimits64.discreteQueuePriorities"></member>
    <member name="F:VkPhysicalDeviceLimits64.framebufferColorSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.framebufferDepthSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.framebufferNoAttachmentsSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.framebufferStencilSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.lineWidthGranularity"></member>
    <member name="M:VkPhysicalDeviceLimits64.lineWidthRange(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxBoundDescriptorSets"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxClipDistances"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxColorAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxCombinedClipAndCullDistances"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxComputeSharedMemorySize"></member>
    <member name="M:VkPhysicalDeviceLimits64.maxComputeWorkGroupCount(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxComputeWorkGroupInvocations"></member>
    <member name="M:VkPhysicalDeviceLimits64.maxComputeWorkGroupSize(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxCullDistances"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDescriptorSetInputAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDescriptorSetSampledImages"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDescriptorSetSamplers"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDescriptorSetStorageBuffers"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDescriptorSetStorageBuffersDynamic"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDescriptorSetStorageImages"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDescriptorSetUniformBuffers"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDescriptorSetUniformBuffersDynamic"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDrawIndexedIndexValue"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxDrawIndirectCount"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxFragmentCombinedOutputResources"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxFragmentDualSrcAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxFragmentInputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxFragmentOutputAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxFramebufferHeight"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxFramebufferLayers"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxFramebufferWidth"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxGeometryInputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxGeometryOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxGeometryOutputVertices"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxGeometryShaderInvocations"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxGeometryTotalOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxImageArrayLayers"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxImageDimension1D"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxImageDimension2D"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxImageDimension3D"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxImageDimensionCube"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxInterpolationOffset"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxMemoryAllocationCount"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxPerStageDescriptorInputAttachments"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxPerStageDescriptorSampledImages"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxPerStageDescriptorSamplers"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxPerStageDescriptorStorageBuffers"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxPerStageDescriptorStorageImages"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxPerStageDescriptorUniformBuffers"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxPerStageResources"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxPushConstantsSize"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxSampleMaskWords"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxSamplerAllocationCount"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxSamplerAnisotropy"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxSamplerLodBias"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxStorageBufferRange"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTessellationControlPerPatchOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTessellationControlPerVertexInputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTessellationControlPerVertexOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTessellationControlTotalOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTessellationEvaluationInputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTessellationEvaluationOutputComponents"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTessellationGenerationLevel"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTessellationPatchSize"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTexelBufferElements"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTexelGatherOffset"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxTexelOffset"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxUniformBufferRange"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxVertexInputAttributeOffset"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxVertexInputAttributes"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxVertexInputBindings"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxVertexInputBindingStride"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxVertexOutputComponents"></member>
    <member name="M:VkPhysicalDeviceLimits64.maxViewportDimensions(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits64.maxViewports"></member>
    <member name="F:VkPhysicalDeviceLimits64.minInterpolationOffset"></member>
    <member name="F:VkPhysicalDeviceLimits64.minMemoryMapAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits64.minStorageBufferOffsetAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits64.minTexelBufferOffsetAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits64.minTexelGatherOffset"></member>
    <member name="F:VkPhysicalDeviceLimits64.minTexelOffset"></member>
    <member name="F:VkPhysicalDeviceLimits64.minUniformBufferOffsetAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits64.mipmapPrecisionBits"></member>
    <member name="F:VkPhysicalDeviceLimits64.nonCoherentAtomSize"></member>
    <member name="F:VkPhysicalDeviceLimits64.optimalBufferCopyOffsetAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits64.optimalBufferCopyRowPitchAlignment"></member>
    <member name="F:VkPhysicalDeviceLimits64.pointSizeGranularity"></member>
    <member name="M:VkPhysicalDeviceLimits64.pointSizeRange(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits64.sampledImageColorSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.sampledImageDepthSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.sampledImageIntegerSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.sampledImageStencilSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.sparseAddressSpaceSize"></member>
    <member name="F:VkPhysicalDeviceLimits64.standardSampleLocations"></member>
    <member name="F:VkPhysicalDeviceLimits64.storageImageSampleCounts"></member>
    <member name="F:VkPhysicalDeviceLimits64.strictLines"></member>
    <member name="F:VkPhysicalDeviceLimits64.subPixelInterpolationOffsetBits"></member>
    <member name="F:VkPhysicalDeviceLimits64.subPixelPrecisionBits"></member>
    <member name="F:VkPhysicalDeviceLimits64.subTexelPrecisionBits"></member>
    <member name="F:VkPhysicalDeviceLimits64.timestampComputeAndGraphics"></member>
    <member name="F:VkPhysicalDeviceLimits64.timestampPeriod"></member>
    <member name="M:VkPhysicalDeviceLimits64.viewportBoundsRange(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceLimits64.viewportSubPixelBits"></member>
    <member name="T:VkPhysicalDeviceMemoryProperties">
      <summary>Structure specifying physical device memory properties</summary>
    </member>
    <member name="F:VkPhysicalDeviceMemoryProperties.memoryHeapCount"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties.memoryHeaps"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties.memoryTypeCount"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties.memoryTypes"></member>
    <member name="T:VkPhysicalDeviceMemoryProperties2KHR32"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties2KHR32.memoryProperties"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties2KHR32.pNext"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties2KHR32.sType"></member>
    <member name="T:VkPhysicalDeviceMemoryProperties2KHR64"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties2KHR64.memoryProperties"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties2KHR64.pNext"></member>
    <member name="F:VkPhysicalDeviceMemoryProperties2KHR64.sType"></member>
    <member name="T:VkPhysicalDeviceMultiviewFeaturesKHX32"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX32.multiview"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX32.multiviewGeometryShader"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX32.multiviewTessellationShader"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX32.pNext"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX32.sType"></member>
    <member name="T:VkPhysicalDeviceMultiviewFeaturesKHX64"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX64.multiview"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX64.multiviewGeometryShader"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX64.multiviewTessellationShader"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX64.pNext"></member>
    <member name="F:VkPhysicalDeviceMultiviewFeaturesKHX64.sType"></member>
    <member name="T:VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX32"></member>
    <member name="F:VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX32.perViewPositionAllComponents"></member>
    <member name="F:VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX32.pNext"></member>
    <member name="F:VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX32.sType"></member>
    <member name="T:VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX64"></member>
    <member name="F:VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX64.perViewPositionAllComponents"></member>
    <member name="F:VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX64.pNext"></member>
    <member name="F:VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX64.sType"></member>
    <member name="T:VkPhysicalDeviceMultiviewPropertiesKHX32"></member>
    <member name="F:VkPhysicalDeviceMultiviewPropertiesKHX32.maxMultiviewInstanceIndex"></member>
    <member name="F:VkPhysicalDeviceMultiviewPropertiesKHX32.maxMultiviewViewCount"></member>
    <member name="F:VkPhysicalDeviceMultiviewPropertiesKHX32.pNext"></member>
    <member name="F:VkPhysicalDeviceMultiviewPropertiesKHX32.sType"></member>
    <member name="T:VkPhysicalDeviceMultiviewPropertiesKHX64"></member>
    <member name="F:VkPhysicalDeviceMultiviewPropertiesKHX64.maxMultiviewInstanceIndex"></member>
    <member name="F:VkPhysicalDeviceMultiviewPropertiesKHX64.maxMultiviewViewCount"></member>
    <member name="F:VkPhysicalDeviceMultiviewPropertiesKHX64.pNext"></member>
    <member name="F:VkPhysicalDeviceMultiviewPropertiesKHX64.sType"></member>
    <member name="T:VkPhysicalDeviceProperties2KHR32"></member>
    <member name="F:VkPhysicalDeviceProperties2KHR32.pNext"></member>
    <member name="F:VkPhysicalDeviceProperties2KHR32.properties"></member>
    <member name="F:VkPhysicalDeviceProperties2KHR32.sType"></member>
    <member name="T:VkPhysicalDeviceProperties2KHR64"></member>
    <member name="F:VkPhysicalDeviceProperties2KHR64.pNext"></member>
    <member name="F:VkPhysicalDeviceProperties2KHR64.properties"></member>
    <member name="F:VkPhysicalDeviceProperties2KHR64.sType"></member>
    <member name="T:VkPhysicalDeviceProperties32">
      <summary>Structure specifying physical device properties</summary>
    </member>
    <member name="F:VkPhysicalDeviceProperties32.apiVersion"></member>
    <member name="F:VkPhysicalDeviceProperties32.deviceID"></member>
    <member name="M:VkPhysicalDeviceProperties32.deviceName(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceProperties32.deviceType"></member>
    <member name="F:VkPhysicalDeviceProperties32.driverVersion"></member>
    <member name="F:VkPhysicalDeviceProperties32.limits"></member>
    <member name="M:VkPhysicalDeviceProperties32.pipelineCacheUUID(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceProperties32.sparseProperties"></member>
    <member name="F:VkPhysicalDeviceProperties32.vendorID"></member>
    <member name="T:VkPhysicalDeviceProperties64">
      <summary>Structure specifying physical device properties</summary>
    </member>
    <member name="F:VkPhysicalDeviceProperties64.apiVersion"></member>
    <member name="F:VkPhysicalDeviceProperties64.deviceID"></member>
    <member name="M:VkPhysicalDeviceProperties64.deviceName(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceProperties64.deviceType"></member>
    <member name="F:VkPhysicalDeviceProperties64.driverVersion"></member>
    <member name="F:VkPhysicalDeviceProperties64.limits"></member>
    <member name="M:VkPhysicalDeviceProperties64.pipelineCacheUUID(System.Int32)"></member>
    <member name="F:VkPhysicalDeviceProperties64.sparseProperties"></member>
    <member name="F:VkPhysicalDeviceProperties64.vendorID"></member>
    <member name="T:VkPhysicalDevicePushDescriptorPropertiesKHR32"></member>
    <member name="F:VkPhysicalDevicePushDescriptorPropertiesKHR32.maxPushDescriptors"></member>
    <member name="F:VkPhysicalDevicePushDescriptorPropertiesKHR32.pNext"></member>
    <member name="F:VkPhysicalDevicePushDescriptorPropertiesKHR32.sType"></member>
    <member name="T:VkPhysicalDevicePushDescriptorPropertiesKHR64"></member>
    <member name="F:VkPhysicalDevicePushDescriptorPropertiesKHR64.maxPushDescriptors"></member>
    <member name="F:VkPhysicalDevicePushDescriptorPropertiesKHR64.pNext"></member>
    <member name="F:VkPhysicalDevicePushDescriptorPropertiesKHR64.sType"></member>
    <member name="T:VkPhysicalDeviceSparseImageFormatInfo2KHR32"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR32.format"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR32.pNext"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR32.samples"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR32.sType"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR32.tiling"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR32.type"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR32.usage"></member>
    <member name="T:VkPhysicalDeviceSparseImageFormatInfo2KHR64"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR64.format"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR64.pNext"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR64.samples"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR64.sType"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR64.tiling"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR64.type"></member>
    <member name="F:VkPhysicalDeviceSparseImageFormatInfo2KHR64.usage"></member>
    <member name="T:VkPhysicalDeviceSparseProperties">
      <summary>Structure specifying physical device sparse memory properties</summary>
    </member>
    <member name="F:VkPhysicalDeviceSparseProperties.residencyAlignedMipSize"></member>
    <member name="F:VkPhysicalDeviceSparseProperties.residencyNonResidentStrict"></member>
    <member name="F:VkPhysicalDeviceSparseProperties.residencyStandard2DBlockShape"></member>
    <member name="F:VkPhysicalDeviceSparseProperties.residencyStandard2DMultisampleBlockShape"></member>
    <member name="F:VkPhysicalDeviceSparseProperties.residencyStandard3DBlockShape"></member>
    <member name="T:VkPhysicalDeviceSurfaceInfo2KHR32"></member>
    <member name="F:VkPhysicalDeviceSurfaceInfo2KHR32.pNext"></member>
    <member name="F:VkPhysicalDeviceSurfaceInfo2KHR32.sType"></member>
    <member name="F:VkPhysicalDeviceSurfaceInfo2KHR32.surface"></member>
    <member name="T:VkPhysicalDeviceSurfaceInfo2KHR64"></member>
    <member name="F:VkPhysicalDeviceSurfaceInfo2KHR64.pNext"></member>
    <member name="F:VkPhysicalDeviceSurfaceInfo2KHR64.sType"></member>
    <member name="F:VkPhysicalDeviceSurfaceInfo2KHR64.surface"></member>
    <member name="T:VkPhysicalDeviceType"></member>
    <member name="F:VkPhysicalDeviceType.value__"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_CPU"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_END_RANGE"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_OTHER"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_RANGE_SIZE"></member>
    <member name="F:VkPhysicalDeviceType.VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU"></member>
    <member name="T:VkPipeline">
      <summary>Opaque handle to a pipeline object</summary>
    </member>
    <member name="M:VkPipeline.Cast(System.UInt64)"></member>
    <member name="T:VkPipelineBindPoint"></member>
    <member name="F:VkPipelineBindPoint.value__"></member>
    <member name="F:VkPipelineBindPoint.VK_PIPELINE_BIND_POINT_BEGIN_RANGE"></member>
    <member name="F:VkPipelineBindPoint.VK_PIPELINE_BIND_POINT_COMPUTE"></member>
    <member name="F:VkPipelineBindPoint.VK_PIPELINE_BIND_POINT_END_RANGE"></member>
    <member name="F:VkPipelineBindPoint.VK_PIPELINE_BIND_POINT_GRAPHICS"></member>
    <member name="F:VkPipelineBindPoint.VK_PIPELINE_BIND_POINT_MAX_ENUM"></member>
    <member name="F:VkPipelineBindPoint.VK_PIPELINE_BIND_POINT_RANGE_SIZE"></member>
    <member name="T:VkPipelineCache">
      <summary>Opaque handle to a pipeline cache object</summary>
    </member>
    <member name="M:VkPipelineCache.Cast(System.UInt64)"></member>
    <member name="T:VkPipelineCacheCreateFlags"></member>
    <member name="F:VkPipelineCacheCreateFlags.value__"></member>
    <member name="T:VkPipelineCacheCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline cache</summary>
    </member>
    <member name="F:VkPipelineCacheCreateInfo32.flags"></member>
    <member name="F:VkPipelineCacheCreateInfo32.initialDataSize"></member>
    <member name="F:VkPipelineCacheCreateInfo32.pInitialData"></member>
    <member name="F:VkPipelineCacheCreateInfo32.pNext"></member>
    <member name="F:VkPipelineCacheCreateInfo32.sType"></member>
    <member name="T:VkPipelineCacheCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline cache</summary>
    </member>
    <member name="F:VkPipelineCacheCreateInfo64.flags"></member>
    <member name="F:VkPipelineCacheCreateInfo64.initialDataSize"></member>
    <member name="F:VkPipelineCacheCreateInfo64.pInitialData"></member>
    <member name="F:VkPipelineCacheCreateInfo64.pNext"></member>
    <member name="F:VkPipelineCacheCreateInfo64.sType"></member>
    <member name="T:VkPipelineCacheHeaderVersion"></member>
    <member name="F:VkPipelineCacheHeaderVersion.value__"></member>
    <member name="F:VkPipelineCacheHeaderVersion.VK_PIPELINE_CACHE_HEADER_VERSION_BEGIN_RANGE"></member>
    <member name="F:VkPipelineCacheHeaderVersion.VK_PIPELINE_CACHE_HEADER_VERSION_END_RANGE"></member>
    <member name="F:VkPipelineCacheHeaderVersion.VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM"></member>
    <member name="F:VkPipelineCacheHeaderVersion.VK_PIPELINE_CACHE_HEADER_VERSION_ONE"></member>
    <member name="F:VkPipelineCacheHeaderVersion.VK_PIPELINE_CACHE_HEADER_VERSION_RANGE_SIZE"></member>
    <member name="T:VkPipelineColorBlendAttachmentState">
      <summary>Structure specifying a pipeline color blend attachment state</summary>
    </member>
    <member name="F:VkPipelineColorBlendAttachmentState.alphaBlendOp"></member>
    <member name="F:VkPipelineColorBlendAttachmentState.blendEnable"></member>
    <member name="F:VkPipelineColorBlendAttachmentState.colorBlendOp"></member>
    <member name="F:VkPipelineColorBlendAttachmentState.colorWriteMask"></member>
    <member name="F:VkPipelineColorBlendAttachmentState.dstAlphaBlendFactor"></member>
    <member name="F:VkPipelineColorBlendAttachmentState.dstColorBlendFactor"></member>
    <member name="F:VkPipelineColorBlendAttachmentState.srcAlphaBlendFactor"></member>
    <member name="F:VkPipelineColorBlendAttachmentState.srcColorBlendFactor"></member>
    <member name="T:VkPipelineColorBlendStateCreateFlags"></member>
    <member name="F:VkPipelineColorBlendStateCreateFlags.value__"></member>
    <member name="T:VkPipelineColorBlendStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline color blend state</summary>
    </member>
    <member name="F:VkPipelineColorBlendStateCreateInfo32.attachmentCount"></member>
    <member name="M:VkPipelineColorBlendStateCreateInfo32.blendConstants(System.Int32)"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo32.logicOp"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo32.logicOpEnable"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo32.pAttachments"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo32.sType"></member>
    <member name="T:VkPipelineColorBlendStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline color blend state</summary>
    </member>
    <member name="F:VkPipelineColorBlendStateCreateInfo64.attachmentCount"></member>
    <member name="M:VkPipelineColorBlendStateCreateInfo64.blendConstants(System.Int32)"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo64.logicOp"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo64.logicOpEnable"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo64.pAttachments"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineColorBlendStateCreateInfo64.sType"></member>
    <member name="T:VkPipelineCreateFlags"></member>
    <member name="F:VkPipelineCreateFlags.value__"></member>
    <member name="F:VkPipelineCreateFlags.VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT"></member>
    <member name="F:VkPipelineCreateFlags.VK_PIPELINE_CREATE_DERIVATIVE_BIT"></member>
    <member name="F:VkPipelineCreateFlags.VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT"></member>
    <member name="F:VkPipelineCreateFlags.VK_PIPELINE_CREATE_DISPATCH_BASE_KHX"></member>
    <member name="F:VkPipelineCreateFlags.VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkPipelineCreateFlags.VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHX"></member>
    <member name="T:VkPipelineDepthStencilStateCreateFlags"></member>
    <member name="F:VkPipelineDepthStencilStateCreateFlags.value__"></member>
    <member name="T:VkPipelineDepthStencilStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline depth stencil state</summary>
    </member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.back"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.depthBoundsTestEnable"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.depthCompareOp"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.depthTestEnable"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.depthWriteEnable"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.front"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.maxDepthBounds"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.minDepthBounds"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.stencilTestEnable"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo32.sType"></member>
    <member name="T:VkPipelineDepthStencilStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline depth stencil state</summary>
    </member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.back"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.depthBoundsTestEnable"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.depthCompareOp"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.depthTestEnable"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.depthWriteEnable"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.front"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.maxDepthBounds"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.minDepthBounds"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.stencilTestEnable"></member>
    <member name="F:VkPipelineDepthStencilStateCreateInfo64.sType"></member>
    <member name="T:VkPipelineDiscardRectangleStateCreateFlagsEXT"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateFlagsEXT.value__"></member>
    <member name="T:VkPipelineDiscardRectangleStateCreateInfoEXT32"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT32.discardRectangleCount"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT32.discardRectangleMode"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT32.flags"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT32.pDiscardRectangles"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT32.pNext"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT32.sType"></member>
    <member name="T:VkPipelineDiscardRectangleStateCreateInfoEXT64"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT64.discardRectangleCount"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT64.discardRectangleMode"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT64.flags"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT64.pDiscardRectangles"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT64.pNext"></member>
    <member name="F:VkPipelineDiscardRectangleStateCreateInfoEXT64.sType"></member>
    <member name="T:VkPipelineDynamicStateCreateFlags"></member>
    <member name="F:VkPipelineDynamicStateCreateFlags.value__"></member>
    <member name="T:VkPipelineDynamicStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline dynamic state</summary>
    </member>
    <member name="F:VkPipelineDynamicStateCreateInfo32.dynamicStateCount"></member>
    <member name="F:VkPipelineDynamicStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineDynamicStateCreateInfo32.pDynamicStates"></member>
    <member name="F:VkPipelineDynamicStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineDynamicStateCreateInfo32.sType"></member>
    <member name="T:VkPipelineDynamicStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline dynamic state</summary>
    </member>
    <member name="F:VkPipelineDynamicStateCreateInfo64.dynamicStateCount"></member>
    <member name="F:VkPipelineDynamicStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineDynamicStateCreateInfo64.pDynamicStates"></member>
    <member name="F:VkPipelineDynamicStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineDynamicStateCreateInfo64.sType"></member>
    <member name="T:VkPipelineInputAssemblyStateCreateFlags"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateFlags.value__"></member>
    <member name="T:VkPipelineInputAssemblyStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline input assembly state</summary>
    </member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo32.primitiveRestartEnable"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo32.sType"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo32.topology"></member>
    <member name="T:VkPipelineInputAssemblyStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline input assembly state</summary>
    </member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo64.primitiveRestartEnable"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo64.sType"></member>
    <member name="F:VkPipelineInputAssemblyStateCreateInfo64.topology"></member>
    <member name="T:VkPipelineLayout">
      <summary>Opaque handle to a pipeline layout object</summary>
    </member>
    <member name="M:VkPipelineLayout.Cast(System.UInt64)"></member>
    <member name="T:VkPipelineLayoutCreateFlags"></member>
    <member name="F:VkPipelineLayoutCreateFlags.value__"></member>
    <member name="T:VkPipelineLayoutCreateInfo32">
      <summary>Structure specifying the parameters of a newly created pipeline layout object</summary>
    </member>
    <member name="F:VkPipelineLayoutCreateInfo32.flags"></member>
    <member name="F:VkPipelineLayoutCreateInfo32.pNext"></member>
    <member name="F:VkPipelineLayoutCreateInfo32.pPushConstantRanges"></member>
    <member name="F:VkPipelineLayoutCreateInfo32.pSetLayouts"></member>
    <member name="F:VkPipelineLayoutCreateInfo32.pushConstantRangeCount"></member>
    <member name="F:VkPipelineLayoutCreateInfo32.setLayoutCount"></member>
    <member name="F:VkPipelineLayoutCreateInfo32.sType"></member>
    <member name="T:VkPipelineLayoutCreateInfo64">
      <summary>Structure specifying the parameters of a newly created pipeline layout object</summary>
    </member>
    <member name="F:VkPipelineLayoutCreateInfo64.flags"></member>
    <member name="F:VkPipelineLayoutCreateInfo64.pNext"></member>
    <member name="F:VkPipelineLayoutCreateInfo64.pPushConstantRanges"></member>
    <member name="F:VkPipelineLayoutCreateInfo64.pSetLayouts"></member>
    <member name="F:VkPipelineLayoutCreateInfo64.pushConstantRangeCount"></member>
    <member name="F:VkPipelineLayoutCreateInfo64.setLayoutCount"></member>
    <member name="F:VkPipelineLayoutCreateInfo64.sType"></member>
    <member name="T:VkPipelineMultisampleStateCreateFlags"></member>
    <member name="F:VkPipelineMultisampleStateCreateFlags.value__"></member>
    <member name="T:VkPipelineMultisampleStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline multisample state</summary>
    </member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.alphaToCoverageEnable"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.alphaToOneEnable"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.minSampleShading"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.pSampleMask"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.rasterizationSamples"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.sampleShadingEnable"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo32.sType"></member>
    <member name="T:VkPipelineMultisampleStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline multisample state</summary>
    </member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.alphaToCoverageEnable"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.alphaToOneEnable"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.minSampleShading"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.pSampleMask"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.rasterizationSamples"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.sampleShadingEnable"></member>
    <member name="F:VkPipelineMultisampleStateCreateInfo64.sType"></member>
    <member name="T:VkPipelineRasterizationStateCreateFlags"></member>
    <member name="F:VkPipelineRasterizationStateCreateFlags.value__"></member>
    <member name="T:VkPipelineRasterizationStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline rasterization state</summary>
    </member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.cullMode"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.depthBiasClamp"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.depthBiasConstantFactor"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.depthBiasEnable"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.depthBiasSlopeFactor"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.depthClampEnable"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.frontFace"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.lineWidth"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.polygonMode"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.rasterizerDiscardEnable"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo32.sType"></member>
    <member name="T:VkPipelineRasterizationStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline rasterization state</summary>
    </member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.cullMode"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.depthBiasClamp"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.depthBiasConstantFactor"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.depthBiasEnable"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.depthBiasSlopeFactor"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.depthClampEnable"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.frontFace"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.lineWidth"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.polygonMode"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.rasterizerDiscardEnable"></member>
    <member name="F:VkPipelineRasterizationStateCreateInfo64.sType"></member>
    <member name="T:VkPipelineRasterizationStateRasterizationOrderAMD32"></member>
    <member name="F:VkPipelineRasterizationStateRasterizationOrderAMD32.pNext"></member>
    <member name="F:VkPipelineRasterizationStateRasterizationOrderAMD32.rasterizationOrder"></member>
    <member name="F:VkPipelineRasterizationStateRasterizationOrderAMD32.sType"></member>
    <member name="T:VkPipelineRasterizationStateRasterizationOrderAMD64"></member>
    <member name="F:VkPipelineRasterizationStateRasterizationOrderAMD64.pNext"></member>
    <member name="F:VkPipelineRasterizationStateRasterizationOrderAMD64.rasterizationOrder"></member>
    <member name="F:VkPipelineRasterizationStateRasterizationOrderAMD64.sType"></member>
    <member name="T:VkPipelineShaderStageCreateFlags"></member>
    <member name="F:VkPipelineShaderStageCreateFlags.value__"></member>
    <member name="T:VkPipelineShaderStageCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline shader stage</summary>
    </member>
    <member name="F:VkPipelineShaderStageCreateInfo32.flags"></member>
    <member name="F:VkPipelineShaderStageCreateInfo32.module"></member>
    <member name="F:VkPipelineShaderStageCreateInfo32.pName"></member>
    <member name="F:VkPipelineShaderStageCreateInfo32.pNext"></member>
    <member name="F:VkPipelineShaderStageCreateInfo32.pSpecializationInfo"></member>
    <member name="F:VkPipelineShaderStageCreateInfo32.stage"></member>
    <member name="F:VkPipelineShaderStageCreateInfo32.sType"></member>
    <member name="T:VkPipelineShaderStageCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline shader stage</summary>
    </member>
    <member name="F:VkPipelineShaderStageCreateInfo64.flags"></member>
    <member name="F:VkPipelineShaderStageCreateInfo64.module"></member>
    <member name="F:VkPipelineShaderStageCreateInfo64.pName"></member>
    <member name="F:VkPipelineShaderStageCreateInfo64.pNext"></member>
    <member name="F:VkPipelineShaderStageCreateInfo64.pSpecializationInfo"></member>
    <member name="F:VkPipelineShaderStageCreateInfo64.stage"></member>
    <member name="F:VkPipelineShaderStageCreateInfo64.sType"></member>
    <member name="T:VkPipelineStageFlags"></member>
    <member name="F:VkPipelineStageFlags.value__"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_ALL_COMMANDS_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_HOST_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_TRANSFER_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_VERTEX_INPUT_BIT"></member>
    <member name="F:VkPipelineStageFlags.VK_PIPELINE_STAGE_VERTEX_SHADER_BIT"></member>
    <member name="T:VkPipelineTessellationStateCreateFlags"></member>
    <member name="F:VkPipelineTessellationStateCreateFlags.value__"></member>
    <member name="T:VkPipelineTessellationStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline tessellation state</summary>
    </member>
    <member name="F:VkPipelineTessellationStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineTessellationStateCreateInfo32.patchControlPoints"></member>
    <member name="F:VkPipelineTessellationStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineTessellationStateCreateInfo32.sType"></member>
    <member name="T:VkPipelineTessellationStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline tessellation state</summary>
    </member>
    <member name="F:VkPipelineTessellationStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineTessellationStateCreateInfo64.patchControlPoints"></member>
    <member name="F:VkPipelineTessellationStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineTessellationStateCreateInfo64.sType"></member>
    <member name="T:VkPipelineVertexInputStateCreateFlags"></member>
    <member name="F:VkPipelineVertexInputStateCreateFlags.value__"></member>
    <member name="T:VkPipelineVertexInputStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline vertex input state</summary>
    </member>
    <member name="F:VkPipelineVertexInputStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo32.pVertexAttributeDescriptions"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo32.pVertexBindingDescriptions"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo32.sType"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo32.vertexAttributeDescriptionCount"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo32.vertexBindingDescriptionCount"></member>
    <member name="T:VkPipelineVertexInputStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline vertex input state</summary>
    </member>
    <member name="F:VkPipelineVertexInputStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo64.pVertexAttributeDescriptions"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo64.pVertexBindingDescriptions"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo64.sType"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo64.vertexAttributeDescriptionCount"></member>
    <member name="F:VkPipelineVertexInputStateCreateInfo64.vertexBindingDescriptionCount"></member>
    <member name="T:VkPipelineViewportStateCreateFlags"></member>
    <member name="F:VkPipelineViewportStateCreateFlags.value__"></member>
    <member name="T:VkPipelineViewportStateCreateInfo32">
      <summary>Structure specifying parameters of a newly created pipeline viewport state</summary>
    </member>
    <member name="F:VkPipelineViewportStateCreateInfo32.flags"></member>
    <member name="F:VkPipelineViewportStateCreateInfo32.pNext"></member>
    <member name="F:VkPipelineViewportStateCreateInfo32.pScissors"></member>
    <member name="F:VkPipelineViewportStateCreateInfo32.pViewports"></member>
    <member name="F:VkPipelineViewportStateCreateInfo32.scissorCount"></member>
    <member name="F:VkPipelineViewportStateCreateInfo32.sType"></member>
    <member name="F:VkPipelineViewportStateCreateInfo32.viewportCount"></member>
    <member name="T:VkPipelineViewportStateCreateInfo64">
      <summary>Structure specifying parameters of a newly created pipeline viewport state</summary>
    </member>
    <member name="F:VkPipelineViewportStateCreateInfo64.flags"></member>
    <member name="F:VkPipelineViewportStateCreateInfo64.pNext"></member>
    <member name="F:VkPipelineViewportStateCreateInfo64.pScissors"></member>
    <member name="F:VkPipelineViewportStateCreateInfo64.pViewports"></member>
    <member name="F:VkPipelineViewportStateCreateInfo64.scissorCount"></member>
    <member name="F:VkPipelineViewportStateCreateInfo64.sType"></member>
    <member name="F:VkPipelineViewportStateCreateInfo64.viewportCount"></member>
    <member name="T:VkPipelineViewportSwizzleStateCreateFlagsNV"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateFlagsNV.value__"></member>
    <member name="T:VkPipelineViewportSwizzleStateCreateInfoNV32"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV32.flags"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV32.pNext"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV32.pViewportSwizzles"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV32.sType"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV32.viewportCount"></member>
    <member name="T:VkPipelineViewportSwizzleStateCreateInfoNV64"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV64.flags"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV64.pNext"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV64.pViewportSwizzles"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV64.sType"></member>
    <member name="F:VkPipelineViewportSwizzleStateCreateInfoNV64.viewportCount"></member>
    <member name="T:VkPipelineViewportWScalingStateCreateInfoNV32"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV32.pNext"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV32.pViewportWScalings"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV32.sType"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV32.viewportCount"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV32.viewportWScalingEnable"></member>
    <member name="T:VkPipelineViewportWScalingStateCreateInfoNV64"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV64.pNext"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV64.pViewportWScalings"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV64.sType"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV64.viewportCount"></member>
    <member name="F:VkPipelineViewportWScalingStateCreateInfoNV64.viewportWScalingEnable"></member>
    <member name="T:VkPolygonMode"></member>
    <member name="F:VkPolygonMode.value__"></member>
    <member name="F:VkPolygonMode.VK_POLYGON_MODE_BEGIN_RANGE"></member>
    <member name="F:VkPolygonMode.VK_POLYGON_MODE_END_RANGE"></member>
    <member name="F:VkPolygonMode.VK_POLYGON_MODE_FILL"></member>
    <member name="F:VkPolygonMode.VK_POLYGON_MODE_LINE"></member>
    <member name="F:VkPolygonMode.VK_POLYGON_MODE_MAX_ENUM"></member>
    <member name="F:VkPolygonMode.VK_POLYGON_MODE_POINT"></member>
    <member name="F:VkPolygonMode.VK_POLYGON_MODE_RANGE_SIZE"></member>
    <member name="T:VkPresentInfoKHR32"></member>
    <member name="F:VkPresentInfoKHR32.pImageIndices"></member>
    <member name="F:VkPresentInfoKHR32.pNext"></member>
    <member name="F:VkPresentInfoKHR32.pResults"></member>
    <member name="F:VkPresentInfoKHR32.pSwapchains"></member>
    <member name="F:VkPresentInfoKHR32.pWaitSemaphores"></member>
    <member name="F:VkPresentInfoKHR32.sType"></member>
    <member name="F:VkPresentInfoKHR32.swapchainCount"></member>
    <member name="F:VkPresentInfoKHR32.waitSemaphoreCount"></member>
    <member name="T:VkPresentInfoKHR64"></member>
    <member name="F:VkPresentInfoKHR64.pImageIndices"></member>
    <member name="F:VkPresentInfoKHR64.pNext"></member>
    <member name="F:VkPresentInfoKHR64.pResults"></member>
    <member name="F:VkPresentInfoKHR64.pSwapchains"></member>
    <member name="F:VkPresentInfoKHR64.pWaitSemaphores"></member>
    <member name="F:VkPresentInfoKHR64.sType"></member>
    <member name="F:VkPresentInfoKHR64.swapchainCount"></member>
    <member name="F:VkPresentInfoKHR64.waitSemaphoreCount"></member>
    <member name="T:VkPresentModeKHR"></member>
    <member name="F:VkPresentModeKHR.value__"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_BEGIN_RANGE_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_END_RANGE_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_FIFO_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_FIFO_RELAXED_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_IMMEDIATE_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_MAILBOX_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_MAX_ENUM_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_RANGE_SIZE_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR"></member>
    <member name="F:VkPresentModeKHR.VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR"></member>
    <member name="T:VkPresentRegionKHR32"></member>
    <member name="F:VkPresentRegionKHR32.pRectangles"></member>
    <member name="F:VkPresentRegionKHR32.rectangleCount"></member>
    <member name="T:VkPresentRegionKHR64"></member>
    <member name="F:VkPresentRegionKHR64.pRectangles"></member>
    <member name="F:VkPresentRegionKHR64.rectangleCount"></member>
    <member name="T:VkPresentRegionsKHR32"></member>
    <member name="F:VkPresentRegionsKHR32.pNext"></member>
    <member name="F:VkPresentRegionsKHR32.pRegions"></member>
    <member name="F:VkPresentRegionsKHR32.sType"></member>
    <member name="F:VkPresentRegionsKHR32.swapchainCount"></member>
    <member name="T:VkPresentRegionsKHR64"></member>
    <member name="F:VkPresentRegionsKHR64.pNext"></member>
    <member name="F:VkPresentRegionsKHR64.pRegions"></member>
    <member name="F:VkPresentRegionsKHR64.sType"></member>
    <member name="F:VkPresentRegionsKHR64.swapchainCount"></member>
    <member name="T:VkPresentTimeGOOGLE"></member>
    <member name="F:VkPresentTimeGOOGLE.desiredPresentTime"></member>
    <member name="F:VkPresentTimeGOOGLE.presentID"></member>
    <member name="T:VkPresentTimesInfoGOOGLE32"></member>
    <member name="F:VkPresentTimesInfoGOOGLE32.pNext"></member>
    <member name="F:VkPresentTimesInfoGOOGLE32.pTimes"></member>
    <member name="F:VkPresentTimesInfoGOOGLE32.sType"></member>
    <member name="F:VkPresentTimesInfoGOOGLE32.swapchainCount"></member>
    <member name="T:VkPresentTimesInfoGOOGLE64"></member>
    <member name="F:VkPresentTimesInfoGOOGLE64.pNext"></member>
    <member name="F:VkPresentTimesInfoGOOGLE64.pTimes"></member>
    <member name="F:VkPresentTimesInfoGOOGLE64.sType"></member>
    <member name="F:VkPresentTimesInfoGOOGLE64.swapchainCount"></member>
    <member name="T:VkPrimitiveTopology"></member>
    <member name="F:VkPrimitiveTopology.value__"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_BEGIN_RANGE"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_END_RANGE"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_LINE_LIST"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_LINE_STRIP"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_MAX_ENUM"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_PATCH_LIST"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_POINT_LIST"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_RANGE_SIZE"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP"></member>
    <member name="F:VkPrimitiveTopology.VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY"></member>
    <member name="T:VkPushConstantRange">
      <summary>Structure specifying a push constant range</summary>
    </member>
    <member name="F:VkPushConstantRange.offset"></member>
    <member name="F:VkPushConstantRange.size"></member>
    <member name="F:VkPushConstantRange.stageFlags"></member>
    <member name="T:VkQueryControlFlags"></member>
    <member name="F:VkQueryControlFlags.value__"></member>
    <member name="F:VkQueryControlFlags.VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkQueryControlFlags.VK_QUERY_CONTROL_PRECISE_BIT"></member>
    <member name="T:VkQueryPipelineStatisticFlags"></member>
    <member name="F:VkQueryPipelineStatisticFlags.value__"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT"></member>
    <member name="F:VkQueryPipelineStatisticFlags.VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT"></member>
    <member name="T:VkQueryPool">
      <summary>Opaque handle to a query pool object</summary>
    </member>
    <member name="M:VkQueryPool.Cast(System.UInt64)"></member>
    <member name="T:VkQueryPoolCreateFlags"></member>
    <member name="F:VkQueryPoolCreateFlags.value__"></member>
    <member name="T:VkQueryPoolCreateInfo32">
      <summary>Structure specifying parameters of a newly created query pool</summary>
    </member>
    <member name="F:VkQueryPoolCreateInfo32.flags"></member>
    <member name="F:VkQueryPoolCreateInfo32.pipelineStatistics"></member>
    <member name="F:VkQueryPoolCreateInfo32.pNext"></member>
    <member name="F:VkQueryPoolCreateInfo32.queryCount"></member>
    <member name="F:VkQueryPoolCreateInfo32.queryType"></member>
    <member name="F:VkQueryPoolCreateInfo32.sType"></member>
    <member name="T:VkQueryPoolCreateInfo64">
      <summary>Structure specifying parameters of a newly created query pool</summary>
    </member>
    <member name="F:VkQueryPoolCreateInfo64.flags"></member>
    <member name="F:VkQueryPoolCreateInfo64.pipelineStatistics"></member>
    <member name="F:VkQueryPoolCreateInfo64.pNext"></member>
    <member name="F:VkQueryPoolCreateInfo64.queryCount"></member>
    <member name="F:VkQueryPoolCreateInfo64.queryType"></member>
    <member name="F:VkQueryPoolCreateInfo64.sType"></member>
    <member name="T:VkQueryResultFlags"></member>
    <member name="F:VkQueryResultFlags.value__"></member>
    <member name="F:VkQueryResultFlags.VK_QUERY_RESULT_64_BIT"></member>
    <member name="F:VkQueryResultFlags.VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkQueryResultFlags.VK_QUERY_RESULT_PARTIAL_BIT"></member>
    <member name="F:VkQueryResultFlags.VK_QUERY_RESULT_WAIT_BIT"></member>
    <member name="F:VkQueryResultFlags.VK_QUERY_RESULT_WITH_AVAILABILITY_BIT"></member>
    <member name="T:VkQueryType"></member>
    <member name="F:VkQueryType.value__"></member>
    <member name="F:VkQueryType.VK_QUERY_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkQueryType.VK_QUERY_TYPE_END_RANGE"></member>
    <member name="F:VkQueryType.VK_QUERY_TYPE_MAX_ENUM"></member>
    <member name="F:VkQueryType.VK_QUERY_TYPE_OCCLUSION"></member>
    <member name="F:VkQueryType.VK_QUERY_TYPE_PIPELINE_STATISTICS"></member>
    <member name="F:VkQueryType.VK_QUERY_TYPE_RANGE_SIZE"></member>
    <member name="F:VkQueryType.VK_QUERY_TYPE_TIMESTAMP"></member>
    <member name="T:VkQueue">
      <summary>Opaque handle to a queue object</summary>
    </member>
    <member name="M:VkQueue.Cast(System.Void*)"></member>
    <member name="T:vkQueueBindSparse">
      <summary>Bind device memory to a sparse resource object</summary>
    </member>
    <member name="M:vkQueueBindSparse.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkQueueBindSparse</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkQueueBindSparse.Invoke(VkQueue*,System.UInt32,IVkBindSparseInfo*,VkFence*)"></member>
    <member name="T:VkQueueFamilyProperties">
      <summary>Structure providing information about a queue family</summary>
    </member>
    <member name="F:VkQueueFamilyProperties.minImageTransferGranularity"></member>
    <member name="F:VkQueueFamilyProperties.queueCount"></member>
    <member name="F:VkQueueFamilyProperties.queueFlags"></member>
    <member name="F:VkQueueFamilyProperties.timestampValidBits"></member>
    <member name="T:VkQueueFamilyProperties2KHR32"></member>
    <member name="F:VkQueueFamilyProperties2KHR32.pNext"></member>
    <member name="F:VkQueueFamilyProperties2KHR32.queueFamilyProperties"></member>
    <member name="F:VkQueueFamilyProperties2KHR32.sType"></member>
    <member name="T:VkQueueFamilyProperties2KHR64"></member>
    <member name="F:VkQueueFamilyProperties2KHR64.pNext"></member>
    <member name="F:VkQueueFamilyProperties2KHR64.queueFamilyProperties"></member>
    <member name="F:VkQueueFamilyProperties2KHR64.sType"></member>
    <member name="T:VkQueueFlags"></member>
    <member name="F:VkQueueFlags.value__"></member>
    <member name="F:VkQueueFlags.VK_QUEUE_COMPUTE_BIT"></member>
    <member name="F:VkQueueFlags.VK_QUEUE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkQueueFlags.VK_QUEUE_GRAPHICS_BIT"></member>
    <member name="F:VkQueueFlags.VK_QUEUE_SPARSE_BINDING_BIT"></member>
    <member name="F:VkQueueFlags.VK_QUEUE_TRANSFER_BIT"></member>
    <member name="T:vkQueuePresentKHR"></member>
    <member name="M:vkQueuePresentKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkQueuePresentKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkQueuePresentKHR.Invoke(VkQueue*,IVkPresentInfoKHR*)"></member>
    <member name="T:vkQueueSubmit">
      <summary>Submits a sequence of semaphores or command buffers to a queue</summary>
    </member>
    <member name="M:vkQueueSubmit.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkQueueSubmit</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkQueueSubmit.Invoke(VkQueue*,System.UInt32,IVkSubmitInfo*,VkFence*)"></member>
    <member name="T:vkQueueWaitIdle">
      <summary>Wait for a queue to become idle</summary>
    </member>
    <member name="M:vkQueueWaitIdle.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkQueueWaitIdle</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkQueueWaitIdle.Invoke(VkQueue*)"></member>
    <member name="T:VkRasterizationOrderAMD"></member>
    <member name="F:VkRasterizationOrderAMD.value__"></member>
    <member name="F:VkRasterizationOrderAMD.VK_RASTERIZATION_ORDER_BEGIN_RANGE_AMD"></member>
    <member name="F:VkRasterizationOrderAMD.VK_RASTERIZATION_ORDER_END_RANGE_AMD"></member>
    <member name="F:VkRasterizationOrderAMD.VK_RASTERIZATION_ORDER_MAX_ENUM_AMD"></member>
    <member name="F:VkRasterizationOrderAMD.VK_RASTERIZATION_ORDER_RANGE_SIZE_AMD"></member>
    <member name="F:VkRasterizationOrderAMD.VK_RASTERIZATION_ORDER_RELAXED_AMD"></member>
    <member name="F:VkRasterizationOrderAMD.VK_RASTERIZATION_ORDER_STRICT_AMD"></member>
    <member name="T:VkRect2D">
      <summary>Structure specifying a two-dimensional subregion</summary>
    </member>
    <member name="F:VkRect2D.extent"></member>
    <member name="F:VkRect2D.offset"></member>
    <member name="T:VkRectLayerKHR"></member>
    <member name="F:VkRectLayerKHR.extent"></member>
    <member name="F:VkRectLayerKHR.layer"></member>
    <member name="F:VkRectLayerKHR.offset"></member>
    <member name="T:VkRefreshCycleDurationGOOGLE"></member>
    <member name="F:VkRefreshCycleDurationGOOGLE.refreshDuration"></member>
    <member name="T:vkRegisterDeviceEventEXT"></member>
    <member name="M:vkRegisterDeviceEventEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkRegisterDeviceEventEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkRegisterDeviceEventEXT.Invoke(VkDevice*,IVkDeviceEventInfoEXT*,IVkAllocationCallbacks*,VkFence**)"></member>
    <member name="T:vkRegisterDisplayEventEXT"></member>
    <member name="M:vkRegisterDisplayEventEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkRegisterDisplayEventEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkRegisterDisplayEventEXT.Invoke(VkDevice*,VkDisplayKHR*,IVkDisplayEventInfoEXT*,IVkAllocationCallbacks*,VkFence**)"></member>
    <member name="T:vkRegisterObjectsNVX"></member>
    <member name="M:vkRegisterObjectsNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkRegisterObjectsNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkRegisterObjectsNVX.Invoke(VkDevice*,VkObjectTableNVX*,System.UInt32,VkObjectTableEntryNVX**,System.UInt32*)"></member>
    <member name="T:vkReleaseDisplayEXT"></member>
    <member name="M:vkReleaseDisplayEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkReleaseDisplayEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkReleaseDisplayEXT.Invoke(VkPhysicalDevice*,VkDisplayKHR*)"></member>
    <member name="T:VkRenderPass">
      <summary>Opaque handle to a render pass object</summary>
    </member>
    <member name="M:VkRenderPass.Cast(System.UInt64)"></member>
    <member name="T:VkRenderPassBeginInfo32">
      <summary>Structure specifying render pass begin info</summary>
    </member>
    <member name="F:VkRenderPassBeginInfo32.clearValueCount"></member>
    <member name="F:VkRenderPassBeginInfo32.framebuffer"></member>
    <member name="F:VkRenderPassBeginInfo32.pClearValues"></member>
    <member name="F:VkRenderPassBeginInfo32.pNext"></member>
    <member name="F:VkRenderPassBeginInfo32.renderArea"></member>
    <member name="F:VkRenderPassBeginInfo32.renderPass"></member>
    <member name="F:VkRenderPassBeginInfo32.sType"></member>
    <member name="T:VkRenderPassBeginInfo64">
      <summary>Structure specifying render pass begin info</summary>
    </member>
    <member name="F:VkRenderPassBeginInfo64.clearValueCount"></member>
    <member name="F:VkRenderPassBeginInfo64.framebuffer"></member>
    <member name="F:VkRenderPassBeginInfo64.pClearValues"></member>
    <member name="F:VkRenderPassBeginInfo64.pNext"></member>
    <member name="F:VkRenderPassBeginInfo64.renderArea"></member>
    <member name="F:VkRenderPassBeginInfo64.renderPass"></member>
    <member name="F:VkRenderPassBeginInfo64.sType"></member>
    <member name="T:VkRenderPassCreateFlags"></member>
    <member name="F:VkRenderPassCreateFlags.value__"></member>
    <member name="T:VkRenderPassCreateInfo32">
      <summary>Structure specifying parameters of a newly created render pass</summary>
    </member>
    <member name="F:VkRenderPassCreateInfo32.attachmentCount"></member>
    <member name="F:VkRenderPassCreateInfo32.dependencyCount"></member>
    <member name="F:VkRenderPassCreateInfo32.flags"></member>
    <member name="F:VkRenderPassCreateInfo32.pAttachments"></member>
    <member name="F:VkRenderPassCreateInfo32.pDependencies"></member>
    <member name="F:VkRenderPassCreateInfo32.pNext"></member>
    <member name="F:VkRenderPassCreateInfo32.pSubpasses"></member>
    <member name="F:VkRenderPassCreateInfo32.sType"></member>
    <member name="F:VkRenderPassCreateInfo32.subpassCount"></member>
    <member name="T:VkRenderPassCreateInfo64">
      <summary>Structure specifying parameters of a newly created render pass</summary>
    </member>
    <member name="F:VkRenderPassCreateInfo64.attachmentCount"></member>
    <member name="F:VkRenderPassCreateInfo64.dependencyCount"></member>
    <member name="F:VkRenderPassCreateInfo64.flags"></member>
    <member name="F:VkRenderPassCreateInfo64.pAttachments"></member>
    <member name="F:VkRenderPassCreateInfo64.pDependencies"></member>
    <member name="F:VkRenderPassCreateInfo64.pNext"></member>
    <member name="F:VkRenderPassCreateInfo64.pSubpasses"></member>
    <member name="F:VkRenderPassCreateInfo64.sType"></member>
    <member name="F:VkRenderPassCreateInfo64.subpassCount"></member>
    <member name="T:VkRenderPassMultiviewCreateInfoKHX32"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX32.correlationMaskCount"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX32.dependencyCount"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX32.pCorrelationMasks"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX32.pNext"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX32.pViewMasks"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX32.pViewOffsets"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX32.sType"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX32.subpassCount"></member>
    <member name="T:VkRenderPassMultiviewCreateInfoKHX64"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX64.correlationMaskCount"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX64.dependencyCount"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX64.pCorrelationMasks"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX64.pNext"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX64.pViewMasks"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX64.pViewOffsets"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX64.sType"></member>
    <member name="F:VkRenderPassMultiviewCreateInfoKHX64.subpassCount"></member>
    <member name="T:vkResetCommandBuffer">
      <summary>Reset a command buffer to the initial state</summary>
    </member>
    <member name="M:vkResetCommandBuffer.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkResetCommandBuffer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkResetCommandBuffer.Invoke(VkCommandBuffer*,VkCommandBufferResetFlags)"></member>
    <member name="T:vkResetCommandPool">
      <summary>Reset a command pool</summary>
    </member>
    <member name="M:vkResetCommandPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkResetCommandPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkResetCommandPool.Invoke(VkDevice*,VkCommandPool*,VkCommandPoolResetFlags)"></member>
    <member name="T:vkResetDescriptorPool">
      <summary>Resets a descriptor pool object</summary>
    </member>
    <member name="M:vkResetDescriptorPool.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkResetDescriptorPool</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkResetDescriptorPool.Invoke(VkDevice*,VkDescriptorPool*,VkDescriptorPoolResetFlags)"></member>
    <member name="T:vkResetEvent">
      <summary>Reset an event to non-signaled state</summary>
    </member>
    <member name="M:vkResetEvent.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkResetEvent</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkResetEvent.Invoke(VkDevice*,VkEvent*)"></member>
    <member name="T:vkResetFences">
      <summary>Resets one or more fence objects</summary>
    </member>
    <member name="M:vkResetFences.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkResetFences</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkResetFences.Invoke(VkDevice*,System.UInt32,VkFence**)"></member>
    <member name="T:VkResult"></member>
    <member name="F:VkResult.value__"></member>
    <member name="F:VkResult.VK_ERROR_DEVICE_LOST"></member>
    <member name="F:VkResult.VK_ERROR_EXTENSION_NOT_PRESENT"></member>
    <member name="F:VkResult.VK_ERROR_FEATURE_NOT_PRESENT"></member>
    <member name="F:VkResult.VK_ERROR_FORMAT_NOT_SUPPORTED"></member>
    <member name="F:VkResult.VK_ERROR_FRAGMENTED_POOL"></member>
    <member name="F:VkResult.VK_ERROR_INCOMPATIBLE_DISPLAY_KHR"></member>
    <member name="F:VkResult.VK_ERROR_INCOMPATIBLE_DRIVER"></member>
    <member name="F:VkResult.VK_ERROR_INITIALIZATION_FAILED"></member>
    <member name="F:VkResult.VK_ERROR_INVALID_EXTERNAL_HANDLE_KHX"></member>
    <member name="F:VkResult.VK_ERROR_INVALID_SHADER_NV"></member>
    <member name="F:VkResult.VK_ERROR_LAYER_NOT_PRESENT"></member>
    <member name="F:VkResult.VK_ERROR_MEMORY_MAP_FAILED"></member>
    <member name="F:VkResult.VK_ERROR_NATIVE_WINDOW_IN_USE_KHR"></member>
    <member name="F:VkResult.VK_ERROR_OUT_OF_DATE_KHR"></member>
    <member name="F:VkResult.VK_ERROR_OUT_OF_DEVICE_MEMORY"></member>
    <member name="F:VkResult.VK_ERROR_OUT_OF_HOST_MEMORY"></member>
    <member name="F:VkResult.VK_ERROR_OUT_OF_POOL_MEMORY_KHR"></member>
    <member name="F:VkResult.VK_ERROR_SURFACE_LOST_KHR"></member>
    <member name="F:VkResult.VK_ERROR_TOO_MANY_OBJECTS"></member>
    <member name="F:VkResult.VK_ERROR_VALIDATION_FAILED_EXT"></member>
    <member name="F:VkResult.VK_EVENT_RESET"></member>
    <member name="F:VkResult.VK_EVENT_SET"></member>
    <member name="F:VkResult.VK_INCOMPLETE"></member>
    <member name="F:VkResult.VK_NOT_READY"></member>
    <member name="F:VkResult.VK_RESULT_BEGIN_RANGE"></member>
    <member name="F:VkResult.VK_RESULT_END_RANGE"></member>
    <member name="F:VkResult.VK_RESULT_MAX_ENUM"></member>
    <member name="F:VkResult.VK_RESULT_RANGE_SIZE"></member>
    <member name="F:VkResult.VK_SUBOPTIMAL_KHR"></member>
    <member name="F:VkResult.VK_SUCCESS"></member>
    <member name="F:VkResult.VK_TIMEOUT"></member>
    <member name="T:VkSampleCountFlags"></member>
    <member name="F:VkSampleCountFlags.value__"></member>
    <member name="F:VkSampleCountFlags.VK_SAMPLE_COUNT_1_BIT"></member>
    <member name="F:VkSampleCountFlags.VK_SAMPLE_COUNT_16_BIT"></member>
    <member name="F:VkSampleCountFlags.VK_SAMPLE_COUNT_2_BIT"></member>
    <member name="F:VkSampleCountFlags.VK_SAMPLE_COUNT_32_BIT"></member>
    <member name="F:VkSampleCountFlags.VK_SAMPLE_COUNT_4_BIT"></member>
    <member name="F:VkSampleCountFlags.VK_SAMPLE_COUNT_64_BIT"></member>
    <member name="F:VkSampleCountFlags.VK_SAMPLE_COUNT_8_BIT"></member>
    <member name="F:VkSampleCountFlags.VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM"></member>
    <member name="T:VkSampler">
      <summary>Opaque handle to a sampler object</summary>
    </member>
    <member name="M:VkSampler.Cast(System.UInt64)"></member>
    <member name="T:VkSamplerAddressMode"></member>
    <member name="F:VkSamplerAddressMode.value__"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_BEGIN_RANGE"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_END_RANGE"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_MAX_ENUM"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_RANGE_SIZE"></member>
    <member name="F:VkSamplerAddressMode.VK_SAMPLER_ADDRESS_MODE_REPEAT"></member>
    <member name="T:VkSamplerCreateFlags"></member>
    <member name="F:VkSamplerCreateFlags.value__"></member>
    <member name="T:VkSamplerCreateInfo32">
      <summary>Structure specifying parameters of a newly created sampler</summary>
    </member>
    <member name="F:VkSamplerCreateInfo32.addressModeU"></member>
    <member name="F:VkSamplerCreateInfo32.addressModeV"></member>
    <member name="F:VkSamplerCreateInfo32.addressModeW"></member>
    <member name="F:VkSamplerCreateInfo32.anisotropyEnable"></member>
    <member name="F:VkSamplerCreateInfo32.borderColor"></member>
    <member name="F:VkSamplerCreateInfo32.compareEnable"></member>
    <member name="F:VkSamplerCreateInfo32.compareOp"></member>
    <member name="F:VkSamplerCreateInfo32.flags"></member>
    <member name="F:VkSamplerCreateInfo32.magFilter"></member>
    <member name="F:VkSamplerCreateInfo32.maxAnisotropy"></member>
    <member name="F:VkSamplerCreateInfo32.maxLod"></member>
    <member name="F:VkSamplerCreateInfo32.minFilter"></member>
    <member name="F:VkSamplerCreateInfo32.minLod"></member>
    <member name="F:VkSamplerCreateInfo32.mipLodBias"></member>
    <member name="F:VkSamplerCreateInfo32.mipmapMode"></member>
    <member name="F:VkSamplerCreateInfo32.pNext"></member>
    <member name="F:VkSamplerCreateInfo32.sType"></member>
    <member name="F:VkSamplerCreateInfo32.unnormalizedCoordinates"></member>
    <member name="T:VkSamplerCreateInfo64">
      <summary>Structure specifying parameters of a newly created sampler</summary>
    </member>
    <member name="F:VkSamplerCreateInfo64.addressModeU"></member>
    <member name="F:VkSamplerCreateInfo64.addressModeV"></member>
    <member name="F:VkSamplerCreateInfo64.addressModeW"></member>
    <member name="F:VkSamplerCreateInfo64.anisotropyEnable"></member>
    <member name="F:VkSamplerCreateInfo64.borderColor"></member>
    <member name="F:VkSamplerCreateInfo64.compareEnable"></member>
    <member name="F:VkSamplerCreateInfo64.compareOp"></member>
    <member name="F:VkSamplerCreateInfo64.flags"></member>
    <member name="F:VkSamplerCreateInfo64.magFilter"></member>
    <member name="F:VkSamplerCreateInfo64.maxAnisotropy"></member>
    <member name="F:VkSamplerCreateInfo64.maxLod"></member>
    <member name="F:VkSamplerCreateInfo64.minFilter"></member>
    <member name="F:VkSamplerCreateInfo64.minLod"></member>
    <member name="F:VkSamplerCreateInfo64.mipLodBias"></member>
    <member name="F:VkSamplerCreateInfo64.mipmapMode"></member>
    <member name="F:VkSamplerCreateInfo64.pNext"></member>
    <member name="F:VkSamplerCreateInfo64.sType"></member>
    <member name="F:VkSamplerCreateInfo64.unnormalizedCoordinates"></member>
    <member name="T:VkSamplerMipmapMode"></member>
    <member name="F:VkSamplerMipmapMode.value__"></member>
    <member name="F:VkSamplerMipmapMode.VK_SAMPLER_MIPMAP_MODE_BEGIN_RANGE"></member>
    <member name="F:VkSamplerMipmapMode.VK_SAMPLER_MIPMAP_MODE_END_RANGE"></member>
    <member name="F:VkSamplerMipmapMode.VK_SAMPLER_MIPMAP_MODE_LINEAR"></member>
    <member name="F:VkSamplerMipmapMode.VK_SAMPLER_MIPMAP_MODE_MAX_ENUM"></member>
    <member name="F:VkSamplerMipmapMode.VK_SAMPLER_MIPMAP_MODE_NEAREST"></member>
    <member name="F:VkSamplerMipmapMode.VK_SAMPLER_MIPMAP_MODE_RANGE_SIZE"></member>
    <member name="T:VkSemaphore">
      <summary>Opaque handle to a semaphore object</summary>
    </member>
    <member name="M:VkSemaphore.Cast(System.UInt64)"></member>
    <member name="T:VkSemaphoreCreateFlags"></member>
    <member name="F:VkSemaphoreCreateFlags.value__"></member>
    <member name="T:VkSemaphoreCreateInfo32">
      <summary>Structure specifying parameters of a newly created semaphore</summary>
    </member>
    <member name="F:VkSemaphoreCreateInfo32.flags"></member>
    <member name="F:VkSemaphoreCreateInfo32.pNext"></member>
    <member name="F:VkSemaphoreCreateInfo32.sType"></member>
    <member name="T:VkSemaphoreCreateInfo64">
      <summary>Structure specifying parameters of a newly created semaphore</summary>
    </member>
    <member name="F:VkSemaphoreCreateInfo64.flags"></member>
    <member name="F:VkSemaphoreCreateInfo64.pNext"></member>
    <member name="F:VkSemaphoreCreateInfo64.sType"></member>
    <member name="T:vkSetEvent">
      <summary>Set an event to signaled state</summary>
    </member>
    <member name="M:vkSetEvent.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkSetEvent</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkSetEvent.Invoke(VkDevice*,VkEvent*)"></member>
    <member name="T:vkSetHdrMetadataEXT"></member>
    <member name="M:vkSetHdrMetadataEXT.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkSetHdrMetadataEXT</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkSetHdrMetadataEXT.Invoke(VkDevice*,System.UInt32,VkSwapchainKHR**,IVkHdrMetadataEXT*)"></member>
    <member name="T:VkShaderModule">
      <summary>Opaque handle to a shader module object</summary>
    </member>
    <member name="M:VkShaderModule.Cast(System.UInt64)"></member>
    <member name="T:VkShaderModuleCreateFlags"></member>
    <member name="F:VkShaderModuleCreateFlags.value__"></member>
    <member name="T:VkShaderModuleCreateInfo32">
      <summary>Structure specifying parameters of a newly created shader module</summary>
    </member>
    <member name="F:VkShaderModuleCreateInfo32.codeSize"></member>
    <member name="F:VkShaderModuleCreateInfo32.flags"></member>
    <member name="F:VkShaderModuleCreateInfo32.pCode"></member>
    <member name="F:VkShaderModuleCreateInfo32.pNext"></member>
    <member name="F:VkShaderModuleCreateInfo32.sType"></member>
    <member name="T:VkShaderModuleCreateInfo64">
      <summary>Structure specifying parameters of a newly created shader module</summary>
    </member>
    <member name="F:VkShaderModuleCreateInfo64.codeSize"></member>
    <member name="F:VkShaderModuleCreateInfo64.flags"></member>
    <member name="F:VkShaderModuleCreateInfo64.pCode"></member>
    <member name="F:VkShaderModuleCreateInfo64.pNext"></member>
    <member name="F:VkShaderModuleCreateInfo64.sType"></member>
    <member name="T:VkShaderStageFlags"></member>
    <member name="F:VkShaderStageFlags.value__"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_ALL"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_ALL_GRAPHICS"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_COMPUTE_BIT"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_FRAGMENT_BIT"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_GEOMETRY_BIT"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT"></member>
    <member name="F:VkShaderStageFlags.VK_SHADER_STAGE_VERTEX_BIT"></member>
    <member name="T:VkSharedPresentSurfaceCapabilitiesKHR32"></member>
    <member name="F:VkSharedPresentSurfaceCapabilitiesKHR32.pNext"></member>
    <member name="F:VkSharedPresentSurfaceCapabilitiesKHR32.sharedPresentSupportedUsageFlags"></member>
    <member name="F:VkSharedPresentSurfaceCapabilitiesKHR32.sType"></member>
    <member name="T:VkSharedPresentSurfaceCapabilitiesKHR64"></member>
    <member name="F:VkSharedPresentSurfaceCapabilitiesKHR64.pNext"></member>
    <member name="F:VkSharedPresentSurfaceCapabilitiesKHR64.sharedPresentSupportedUsageFlags"></member>
    <member name="F:VkSharedPresentSurfaceCapabilitiesKHR64.sType"></member>
    <member name="T:VkSharingMode"></member>
    <member name="F:VkSharingMode.value__"></member>
    <member name="F:VkSharingMode.VK_SHARING_MODE_BEGIN_RANGE"></member>
    <member name="F:VkSharingMode.VK_SHARING_MODE_CONCURRENT"></member>
    <member name="F:VkSharingMode.VK_SHARING_MODE_END_RANGE"></member>
    <member name="F:VkSharingMode.VK_SHARING_MODE_EXCLUSIVE"></member>
    <member name="F:VkSharingMode.VK_SHARING_MODE_MAX_ENUM"></member>
    <member name="F:VkSharingMode.VK_SHARING_MODE_RANGE_SIZE"></member>
    <member name="T:VkSparseBufferMemoryBindInfo32">
      <summary>Structure specifying a sparse buffer memory bind operation</summary>
    </member>
    <member name="F:VkSparseBufferMemoryBindInfo32.bindCount"></member>
    <member name="F:VkSparseBufferMemoryBindInfo32.buffer"></member>
    <member name="F:VkSparseBufferMemoryBindInfo32.pBinds"></member>
    <member name="T:VkSparseBufferMemoryBindInfo64">
      <summary>Structure specifying a sparse buffer memory bind operation</summary>
    </member>
    <member name="F:VkSparseBufferMemoryBindInfo64.bindCount"></member>
    <member name="F:VkSparseBufferMemoryBindInfo64.buffer"></member>
    <member name="F:VkSparseBufferMemoryBindInfo64.pBinds"></member>
    <member name="T:VkSparseImageFormatFlags"></member>
    <member name="F:VkSparseImageFormatFlags.value__"></member>
    <member name="F:VkSparseImageFormatFlags.VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT"></member>
    <member name="F:VkSparseImageFormatFlags.VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkSparseImageFormatFlags.VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT"></member>
    <member name="F:VkSparseImageFormatFlags.VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT"></member>
    <member name="T:VkSparseImageFormatProperties">
      <summary>Structure specifying sparse image format properties</summary>
    </member>
    <member name="F:VkSparseImageFormatProperties.aspectMask"></member>
    <member name="F:VkSparseImageFormatProperties.flags"></member>
    <member name="F:VkSparseImageFormatProperties.imageGranularity"></member>
    <member name="T:VkSparseImageFormatProperties2KHR32"></member>
    <member name="F:VkSparseImageFormatProperties2KHR32.pNext"></member>
    <member name="F:VkSparseImageFormatProperties2KHR32.properties"></member>
    <member name="F:VkSparseImageFormatProperties2KHR32.sType"></member>
    <member name="T:VkSparseImageFormatProperties2KHR64"></member>
    <member name="F:VkSparseImageFormatProperties2KHR64.pNext"></member>
    <member name="F:VkSparseImageFormatProperties2KHR64.properties"></member>
    <member name="F:VkSparseImageFormatProperties2KHR64.sType"></member>
    <member name="T:VkSparseImageMemoryBind">
      <summary>Structure specifying sparse image memory bind</summary>
    </member>
    <member name="F:VkSparseImageMemoryBind.extent"></member>
    <member name="F:VkSparseImageMemoryBind.flags"></member>
    <member name="F:VkSparseImageMemoryBind.memory"></member>
    <member name="F:VkSparseImageMemoryBind.memoryOffset"></member>
    <member name="F:VkSparseImageMemoryBind.offset"></member>
    <member name="F:VkSparseImageMemoryBind.subresource"></member>
    <member name="T:VkSparseImageMemoryBindInfo32">
      <summary>Structure specifying sparse image memory bind info</summary>
    </member>
    <member name="F:VkSparseImageMemoryBindInfo32.bindCount"></member>
    <member name="F:VkSparseImageMemoryBindInfo32.image"></member>
    <member name="F:VkSparseImageMemoryBindInfo32.pBinds"></member>
    <member name="T:VkSparseImageMemoryBindInfo64">
      <summary>Structure specifying sparse image memory bind info</summary>
    </member>
    <member name="F:VkSparseImageMemoryBindInfo64.bindCount"></member>
    <member name="F:VkSparseImageMemoryBindInfo64.image"></member>
    <member name="F:VkSparseImageMemoryBindInfo64.pBinds"></member>
    <member name="T:VkSparseImageMemoryRequirements">
      <summary>Structure specifying sparse image memory requirements</summary>
    </member>
    <member name="F:VkSparseImageMemoryRequirements.formatProperties"></member>
    <member name="F:VkSparseImageMemoryRequirements.imageMipTailFirstLod"></member>
    <member name="F:VkSparseImageMemoryRequirements.imageMipTailOffset"></member>
    <member name="F:VkSparseImageMemoryRequirements.imageMipTailSize"></member>
    <member name="F:VkSparseImageMemoryRequirements.imageMipTailStride"></member>
    <member name="T:VkSparseImageOpaqueMemoryBindInfo32">
      <summary>Structure specifying sparse image opaque memory bind info</summary>
    </member>
    <member name="F:VkSparseImageOpaqueMemoryBindInfo32.bindCount"></member>
    <member name="F:VkSparseImageOpaqueMemoryBindInfo32.image"></member>
    <member name="F:VkSparseImageOpaqueMemoryBindInfo32.pBinds"></member>
    <member name="T:VkSparseImageOpaqueMemoryBindInfo64">
      <summary>Structure specifying sparse image opaque memory bind info</summary>
    </member>
    <member name="F:VkSparseImageOpaqueMemoryBindInfo64.bindCount"></member>
    <member name="F:VkSparseImageOpaqueMemoryBindInfo64.image"></member>
    <member name="F:VkSparseImageOpaqueMemoryBindInfo64.pBinds"></member>
    <member name="T:VkSparseMemoryBind">
      <summary>Structure specifying a sparse memory bind operation</summary>
    </member>
    <member name="F:VkSparseMemoryBind.flags"></member>
    <member name="F:VkSparseMemoryBind.memory"></member>
    <member name="F:VkSparseMemoryBind.memoryOffset"></member>
    <member name="F:VkSparseMemoryBind.resourceOffset"></member>
    <member name="F:VkSparseMemoryBind.size"></member>
    <member name="T:VkSparseMemoryBindFlags"></member>
    <member name="F:VkSparseMemoryBindFlags.value__"></member>
    <member name="F:VkSparseMemoryBindFlags.VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkSparseMemoryBindFlags.VK_SPARSE_MEMORY_BIND_METADATA_BIT"></member>
    <member name="T:VkSpecializationInfo32">
      <summary>Structure specifying specialization info</summary>
    </member>
    <member name="F:VkSpecializationInfo32.dataSize"></member>
    <member name="F:VkSpecializationInfo32.mapEntryCount"></member>
    <member name="F:VkSpecializationInfo32.pData"></member>
    <member name="F:VkSpecializationInfo32.pMapEntries"></member>
    <member name="T:VkSpecializationInfo64">
      <summary>Structure specifying specialization info</summary>
    </member>
    <member name="F:VkSpecializationInfo64.dataSize"></member>
    <member name="F:VkSpecializationInfo64.mapEntryCount"></member>
    <member name="F:VkSpecializationInfo64.pData"></member>
    <member name="F:VkSpecializationInfo64.pMapEntries"></member>
    <member name="T:VkSpecializationMapEntry32">
      <summary>Structure specifying a specialization map entry</summary>
    </member>
    <member name="F:VkSpecializationMapEntry32.constantID"></member>
    <member name="F:VkSpecializationMapEntry32.offset"></member>
    <member name="F:VkSpecializationMapEntry32.size"></member>
    <member name="T:VkSpecializationMapEntry64">
      <summary>Structure specifying a specialization map entry</summary>
    </member>
    <member name="F:VkSpecializationMapEntry64.constantID"></member>
    <member name="F:VkSpecializationMapEntry64.offset"></member>
    <member name="F:VkSpecializationMapEntry64.size"></member>
    <member name="T:VkStencilFaceFlags"></member>
    <member name="F:VkStencilFaceFlags.value__"></member>
    <member name="F:VkStencilFaceFlags.VK_STENCIL_FACE_BACK_BIT"></member>
    <member name="F:VkStencilFaceFlags.VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkStencilFaceFlags.VK_STENCIL_FACE_FRONT_BIT"></member>
    <member name="F:VkStencilFaceFlags.VK_STENCIL_FRONT_AND_BACK"></member>
    <member name="T:VkStencilOp"></member>
    <member name="F:VkStencilOp.value__"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_BEGIN_RANGE"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_DECREMENT_AND_CLAMP"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_DECREMENT_AND_WRAP"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_END_RANGE"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_INCREMENT_AND_CLAMP"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_INCREMENT_AND_WRAP"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_INVERT"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_KEEP"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_MAX_ENUM"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_RANGE_SIZE"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_REPLACE"></member>
    <member name="F:VkStencilOp.VK_STENCIL_OP_ZERO"></member>
    <member name="T:VkStencilOpState">
      <summary>Structure specifying stencil operation state</summary>
    </member>
    <member name="F:VkStencilOpState.compareMask"></member>
    <member name="F:VkStencilOpState.compareOp"></member>
    <member name="F:VkStencilOpState.depthFailOp"></member>
    <member name="F:VkStencilOpState.failOp"></member>
    <member name="F:VkStencilOpState.passOp"></member>
    <member name="F:VkStencilOpState.reference"></member>
    <member name="F:VkStencilOpState.writeMask"></member>
    <member name="T:VkStructureType"></member>
    <member name="F:VkStructureType.value__"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_APPLICATION_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_BEGIN_RANGE"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_BIND_SPARSE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_END_RANGE"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EVENT_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_FENCE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_HDR_METADATA_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MAX_ENUM"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MEMORY_BARRIER"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PRESENT_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_RANGE_SIZE"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SUBMIT_INFO"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHX"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR"></member>
    <member name="F:VkStructureType.VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR"></member>
    <member name="T:VkSubmitInfo32">
      <summary>Structure specifying a queue submit operation</summary>
    </member>
    <member name="F:VkSubmitInfo32.commandBufferCount"></member>
    <member name="F:VkSubmitInfo32.pCommandBuffers"></member>
    <member name="F:VkSubmitInfo32.pNext"></member>
    <member name="F:VkSubmitInfo32.pSignalSemaphores"></member>
    <member name="F:VkSubmitInfo32.pWaitDstStageMask"></member>
    <member name="F:VkSubmitInfo32.pWaitSemaphores"></member>
    <member name="F:VkSubmitInfo32.signalSemaphoreCount"></member>
    <member name="F:VkSubmitInfo32.sType"></member>
    <member name="F:VkSubmitInfo32.waitSemaphoreCount"></member>
    <member name="T:VkSubmitInfo64">
      <summary>Structure specifying a queue submit operation</summary>
    </member>
    <member name="F:VkSubmitInfo64.commandBufferCount"></member>
    <member name="F:VkSubmitInfo64.pCommandBuffers"></member>
    <member name="F:VkSubmitInfo64.pNext"></member>
    <member name="F:VkSubmitInfo64.pSignalSemaphores"></member>
    <member name="F:VkSubmitInfo64.pWaitDstStageMask"></member>
    <member name="F:VkSubmitInfo64.pWaitSemaphores"></member>
    <member name="F:VkSubmitInfo64.signalSemaphoreCount"></member>
    <member name="F:VkSubmitInfo64.sType"></member>
    <member name="F:VkSubmitInfo64.waitSemaphoreCount"></member>
    <member name="T:VkSubpassContents"></member>
    <member name="F:VkSubpassContents.value__"></member>
    <member name="F:VkSubpassContents.VK_SUBPASS_CONTENTS_BEGIN_RANGE"></member>
    <member name="F:VkSubpassContents.VK_SUBPASS_CONTENTS_END_RANGE"></member>
    <member name="F:VkSubpassContents.VK_SUBPASS_CONTENTS_INLINE"></member>
    <member name="F:VkSubpassContents.VK_SUBPASS_CONTENTS_MAX_ENUM"></member>
    <member name="F:VkSubpassContents.VK_SUBPASS_CONTENTS_RANGE_SIZE"></member>
    <member name="F:VkSubpassContents.VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS"></member>
    <member name="T:VkSubpassDependency">
      <summary>Structure specifying a subpass dependency</summary>
    </member>
    <member name="F:VkSubpassDependency.dependencyFlags"></member>
    <member name="F:VkSubpassDependency.dstAccessMask"></member>
    <member name="F:VkSubpassDependency.dstStageMask"></member>
    <member name="F:VkSubpassDependency.dstSubpass"></member>
    <member name="F:VkSubpassDependency.srcAccessMask"></member>
    <member name="F:VkSubpassDependency.srcStageMask"></member>
    <member name="F:VkSubpassDependency.srcSubpass"></member>
    <member name="T:VkSubpassDescription32">
      <summary>Structure specifying a subpass description</summary>
    </member>
    <member name="F:VkSubpassDescription32.colorAttachmentCount"></member>
    <member name="F:VkSubpassDescription32.flags"></member>
    <member name="F:VkSubpassDescription32.inputAttachmentCount"></member>
    <member name="F:VkSubpassDescription32.pColorAttachments"></member>
    <member name="F:VkSubpassDescription32.pDepthStencilAttachment"></member>
    <member name="F:VkSubpassDescription32.pInputAttachments"></member>
    <member name="F:VkSubpassDescription32.pipelineBindPoint"></member>
    <member name="F:VkSubpassDescription32.pPreserveAttachments"></member>
    <member name="F:VkSubpassDescription32.preserveAttachmentCount"></member>
    <member name="F:VkSubpassDescription32.pResolveAttachments"></member>
    <member name="T:VkSubpassDescription64">
      <summary>Structure specifying a subpass description</summary>
    </member>
    <member name="F:VkSubpassDescription64.colorAttachmentCount"></member>
    <member name="F:VkSubpassDescription64.flags"></member>
    <member name="F:VkSubpassDescription64.inputAttachmentCount"></member>
    <member name="F:VkSubpassDescription64.pColorAttachments"></member>
    <member name="F:VkSubpassDescription64.pDepthStencilAttachment"></member>
    <member name="F:VkSubpassDescription64.pInputAttachments"></member>
    <member name="F:VkSubpassDescription64.pipelineBindPoint"></member>
    <member name="F:VkSubpassDescription64.pPreserveAttachments"></member>
    <member name="F:VkSubpassDescription64.preserveAttachmentCount"></member>
    <member name="F:VkSubpassDescription64.pResolveAttachments"></member>
    <member name="T:VkSubpassDescriptionFlags"></member>
    <member name="F:VkSubpassDescriptionFlags.value__"></member>
    <member name="F:VkSubpassDescriptionFlags.VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM"></member>
    <member name="F:VkSubpassDescriptionFlags.VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX"></member>
    <member name="F:VkSubpassDescriptionFlags.VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX"></member>
    <member name="T:VkSubresourceLayout">
      <summary>Structure specifying subresource layout</summary>
    </member>
    <member name="F:VkSubresourceLayout.arrayPitch"></member>
    <member name="F:VkSubresourceLayout.depthPitch"></member>
    <member name="F:VkSubresourceLayout.offset"></member>
    <member name="F:VkSubresourceLayout.rowPitch"></member>
    <member name="F:VkSubresourceLayout.size"></member>
    <member name="T:VkSurfaceCapabilities2EXT32"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.currentExtent"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.currentTransform"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.maxImageArrayLayers"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.maxImageCount"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.maxImageExtent"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.minImageCount"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.minImageExtent"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.pNext"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.sType"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.supportedCompositeAlpha"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.supportedSurfaceCounters"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.supportedTransforms"></member>
    <member name="F:VkSurfaceCapabilities2EXT32.supportedUsageFlags"></member>
    <member name="T:VkSurfaceCapabilities2EXT64"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.currentExtent"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.currentTransform"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.maxImageArrayLayers"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.maxImageCount"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.maxImageExtent"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.minImageCount"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.minImageExtent"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.pNext"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.sType"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.supportedCompositeAlpha"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.supportedSurfaceCounters"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.supportedTransforms"></member>
    <member name="F:VkSurfaceCapabilities2EXT64.supportedUsageFlags"></member>
    <member name="T:VkSurfaceCapabilities2KHR32"></member>
    <member name="F:VkSurfaceCapabilities2KHR32.pNext"></member>
    <member name="F:VkSurfaceCapabilities2KHR32.sType"></member>
    <member name="F:VkSurfaceCapabilities2KHR32.surfaceCapabilities"></member>
    <member name="T:VkSurfaceCapabilities2KHR64"></member>
    <member name="F:VkSurfaceCapabilities2KHR64.pNext"></member>
    <member name="F:VkSurfaceCapabilities2KHR64.sType"></member>
    <member name="F:VkSurfaceCapabilities2KHR64.surfaceCapabilities"></member>
    <member name="T:VkSurfaceCapabilitiesKHR"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.currentExtent"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.currentTransform"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.maxImageArrayLayers"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.maxImageCount"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.maxImageExtent"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.minImageCount"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.minImageExtent"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.supportedCompositeAlpha"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.supportedTransforms"></member>
    <member name="F:VkSurfaceCapabilitiesKHR.supportedUsageFlags"></member>
    <member name="T:VkSurfaceCounterFlagsEXT"></member>
    <member name="F:VkSurfaceCounterFlagsEXT.value__"></member>
    <member name="F:VkSurfaceCounterFlagsEXT.VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT"></member>
    <member name="F:VkSurfaceCounterFlagsEXT.VK_SURFACE_COUNTER_VBLANK_EXT"></member>
    <member name="T:VkSurfaceFormat2KHR32"></member>
    <member name="F:VkSurfaceFormat2KHR32.pNext"></member>
    <member name="F:VkSurfaceFormat2KHR32.sType"></member>
    <member name="F:VkSurfaceFormat2KHR32.surfaceFormat"></member>
    <member name="T:VkSurfaceFormat2KHR64"></member>
    <member name="F:VkSurfaceFormat2KHR64.pNext"></member>
    <member name="F:VkSurfaceFormat2KHR64.sType"></member>
    <member name="F:VkSurfaceFormat2KHR64.surfaceFormat"></member>
    <member name="T:VkSurfaceFormatKHR"></member>
    <member name="F:VkSurfaceFormatKHR.colorSpace"></member>
    <member name="F:VkSurfaceFormatKHR.format"></member>
    <member name="T:VkSurfaceKHR"></member>
    <member name="M:VkSurfaceKHR.Cast(System.UInt64)"></member>
    <member name="T:VkSurfaceTransformFlagsKHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.value__"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR"></member>
    <member name="F:VkSurfaceTransformFlagsKHR.VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR"></member>
    <member name="T:VkSwapchainCounterCreateInfoEXT32"></member>
    <member name="F:VkSwapchainCounterCreateInfoEXT32.pNext"></member>
    <member name="F:VkSwapchainCounterCreateInfoEXT32.sType"></member>
    <member name="F:VkSwapchainCounterCreateInfoEXT32.surfaceCounters"></member>
    <member name="T:VkSwapchainCounterCreateInfoEXT64"></member>
    <member name="F:VkSwapchainCounterCreateInfoEXT64.pNext"></member>
    <member name="F:VkSwapchainCounterCreateInfoEXT64.sType"></member>
    <member name="F:VkSwapchainCounterCreateInfoEXT64.surfaceCounters"></member>
    <member name="T:VkSwapchainCreateFlagsKHR"></member>
    <member name="F:VkSwapchainCreateFlagsKHR.value__"></member>
    <member name="F:VkSwapchainCreateFlagsKHR.VK_SWAPCHAIN_CREATE_BIND_SFR_BIT_KHX"></member>
    <member name="F:VkSwapchainCreateFlagsKHR.VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR"></member>
    <member name="T:VkSwapchainCreateInfoKHR32"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.clipped"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.compositeAlpha"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.flags"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.imageArrayLayers"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.imageColorSpace"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.imageExtent"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.imageFormat"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.imageSharingMode"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.imageUsage"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.minImageCount"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.oldSwapchain"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.pNext"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.pQueueFamilyIndices"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.presentMode"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.preTransform"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.queueFamilyIndexCount"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.sType"></member>
    <member name="F:VkSwapchainCreateInfoKHR32.surface"></member>
    <member name="T:VkSwapchainCreateInfoKHR64"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.clipped"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.compositeAlpha"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.flags"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.imageArrayLayers"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.imageColorSpace"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.imageExtent"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.imageFormat"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.imageSharingMode"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.imageUsage"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.minImageCount"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.oldSwapchain"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.pNext"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.pQueueFamilyIndices"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.presentMode"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.preTransform"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.queueFamilyIndexCount"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.sType"></member>
    <member name="F:VkSwapchainCreateInfoKHR64.surface"></member>
    <member name="T:VkSwapchainKHR"></member>
    <member name="M:VkSwapchainKHR.Cast(System.UInt64)"></member>
    <member name="T:VkSystemAllocationScope"></member>
    <member name="F:VkSystemAllocationScope.value__"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_BEGIN_RANGE"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_CACHE"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_COMMAND"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_DEVICE"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_END_RANGE"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_OBJECT"></member>
    <member name="F:VkSystemAllocationScope.VK_SYSTEM_ALLOCATION_SCOPE_RANGE_SIZE"></member>
    <member name="T:VkTextureLODGatherFormatPropertiesAMD32"></member>
    <member name="F:VkTextureLODGatherFormatPropertiesAMD32.pNext"></member>
    <member name="F:VkTextureLODGatherFormatPropertiesAMD32.sType"></member>
    <member name="F:VkTextureLODGatherFormatPropertiesAMD32.supportsTextureGatherLODBiasAMD"></member>
    <member name="T:VkTextureLODGatherFormatPropertiesAMD64"></member>
    <member name="F:VkTextureLODGatherFormatPropertiesAMD64.pNext"></member>
    <member name="F:VkTextureLODGatherFormatPropertiesAMD64.sType"></member>
    <member name="F:VkTextureLODGatherFormatPropertiesAMD64.supportsTextureGatherLODBiasAMD"></member>
    <member name="T:vkTrimCommandPoolKHR"></member>
    <member name="M:vkTrimCommandPoolKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkTrimCommandPoolKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkTrimCommandPoolKHR.Invoke(VkDevice*,VkCommandPool*,VkCommandPoolTrimFlagsKHR)"></member>
    <member name="T:vkUnmapMemory">
      <summary>Unmap a previously mapped memory object</summary>
    </member>
    <member name="M:vkUnmapMemory.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkUnmapMemory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkUnmapMemory.Invoke(VkDevice*,VkDeviceMemory*)"></member>
    <member name="T:vkUnregisterObjectsNVX"></member>
    <member name="M:vkUnregisterObjectsNVX.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkUnregisterObjectsNVX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkUnregisterObjectsNVX.Invoke(VkDevice*,VkObjectTableNVX*,System.UInt32,VkObjectEntryTypeNVX*,System.UInt32*)"></member>
    <member name="T:vkUpdateDescriptorSets">
      <summary>Update the contents of a descriptor set object</summary>
    </member>
    <member name="M:vkUpdateDescriptorSets.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkUpdateDescriptorSets</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkUpdateDescriptorSets.Invoke(VkDevice*,System.UInt32,IVkWriteDescriptorSet*,System.UInt32,IVkCopyDescriptorSet*)"></member>
    <member name="T:vkUpdateDescriptorSetWithTemplateKHR"></member>
    <member name="M:vkUpdateDescriptorSetWithTemplateKHR.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkUpdateDescriptorSetWithTemplateKHR</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkUpdateDescriptorSetWithTemplateKHR.Invoke(VkDevice*,VkDescriptorSet*,VkDescriptorUpdateTemplateKHR*,System.Void*)"></member>
    <member name="T:VkValidationCheckEXT"></member>
    <member name="F:VkValidationCheckEXT.value__"></member>
    <member name="F:VkValidationCheckEXT.VK_VALIDATION_CHECK_ALL_EXT"></member>
    <member name="F:VkValidationCheckEXT.VK_VALIDATION_CHECK_BEGIN_RANGE_EXT"></member>
    <member name="F:VkValidationCheckEXT.VK_VALIDATION_CHECK_END_RANGE_EXT"></member>
    <member name="F:VkValidationCheckEXT.VK_VALIDATION_CHECK_MAX_ENUM_EXT"></member>
    <member name="F:VkValidationCheckEXT.VK_VALIDATION_CHECK_RANGE_SIZE_EXT"></member>
    <member name="F:VkValidationCheckEXT.VK_VALIDATION_CHECK_SHADERS_EXT"></member>
    <member name="T:VkValidationFlagsEXT32"></member>
    <member name="F:VkValidationFlagsEXT32.disabledValidationCheckCount"></member>
    <member name="F:VkValidationFlagsEXT32.pDisabledValidationChecks"></member>
    <member name="F:VkValidationFlagsEXT32.pNext"></member>
    <member name="F:VkValidationFlagsEXT32.sType"></member>
    <member name="T:VkValidationFlagsEXT64"></member>
    <member name="F:VkValidationFlagsEXT64.disabledValidationCheckCount"></member>
    <member name="F:VkValidationFlagsEXT64.pDisabledValidationChecks"></member>
    <member name="F:VkValidationFlagsEXT64.pNext"></member>
    <member name="F:VkValidationFlagsEXT64.sType"></member>
    <member name="T:VkVertexInputAttributeDescription">
      <summary>Structure specifying vertex input attribute description</summary>
    </member>
    <member name="F:VkVertexInputAttributeDescription.binding"></member>
    <member name="F:VkVertexInputAttributeDescription.format"></member>
    <member name="F:VkVertexInputAttributeDescription.location"></member>
    <member name="F:VkVertexInputAttributeDescription.offset"></member>
    <member name="T:VkVertexInputBindingDescription">
      <summary>Structure specifying vertex input binding description</summary>
    </member>
    <member name="F:VkVertexInputBindingDescription.binding"></member>
    <member name="F:VkVertexInputBindingDescription.inputRate"></member>
    <member name="F:VkVertexInputBindingDescription.stride"></member>
    <member name="T:VkVertexInputRate"></member>
    <member name="F:VkVertexInputRate.value__"></member>
    <member name="F:VkVertexInputRate.VK_VERTEX_INPUT_RATE_BEGIN_RANGE"></member>
    <member name="F:VkVertexInputRate.VK_VERTEX_INPUT_RATE_END_RANGE"></member>
    <member name="F:VkVertexInputRate.VK_VERTEX_INPUT_RATE_INSTANCE"></member>
    <member name="F:VkVertexInputRate.VK_VERTEX_INPUT_RATE_MAX_ENUM"></member>
    <member name="F:VkVertexInputRate.VK_VERTEX_INPUT_RATE_RANGE_SIZE"></member>
    <member name="F:VkVertexInputRate.VK_VERTEX_INPUT_RATE_VERTEX"></member>
    <member name="T:VkViewport">
      <summary>Structure specifying a viewport</summary>
    </member>
    <member name="F:VkViewport.height"></member>
    <member name="F:VkViewport.maxDepth"></member>
    <member name="F:VkViewport.minDepth"></member>
    <member name="F:VkViewport.width"></member>
    <member name="F:VkViewport.x"></member>
    <member name="F:VkViewport.y"></member>
    <member name="T:VkViewportCoordinateSwizzleNV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.value__"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_BEGIN_RANGE_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_END_RANGE_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV"></member>
    <member name="F:VkViewportCoordinateSwizzleNV.VK_VIEWPORT_COORDINATE_SWIZZLE_RANGE_SIZE_NV"></member>
    <member name="T:VkViewportSwizzleNV"></member>
    <member name="F:VkViewportSwizzleNV.w"></member>
    <member name="F:VkViewportSwizzleNV.x"></member>
    <member name="F:VkViewportSwizzleNV.y"></member>
    <member name="F:VkViewportSwizzleNV.z"></member>
    <member name="T:VkViewportWScalingNV"></member>
    <member name="F:VkViewportWScalingNV.xcoeff"></member>
    <member name="F:VkViewportWScalingNV.ycoeff"></member>
    <member name="T:VkViSurfaceCreateFlagsNN"></member>
    <member name="F:VkViSurfaceCreateFlagsNN.value__"></member>
    <member name="T:vkWaitForFences">
      <summary>Wait for one or more fences to become signaled</summary>
    </member>
    <member name="M:vkWaitForFences.#ctor(System.Object,System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>vkWaitForFences</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:vkWaitForFences.Invoke(VkDevice*,System.UInt32,VkFence**,System.UInt32,System.UInt64)"></member>
    <member name="T:VkWaylandSurfaceCreateFlagsKHR"></member>
    <member name="F:VkWaylandSurfaceCreateFlagsKHR.value__"></member>
    <member name="T:VkWin32SurfaceCreateFlagsKHR"></member>
    <member name="F:VkWin32SurfaceCreateFlagsKHR.value__"></member>
    <member name="T:VkWriteDescriptorSet32">
      <summary>Structure specifying the parameters of a descriptor set write operation</summary>
    </member>
    <member name="F:VkWriteDescriptorSet32.descriptorCount"></member>
    <member name="F:VkWriteDescriptorSet32.descriptorType"></member>
    <member name="F:VkWriteDescriptorSet32.dstArrayElement"></member>
    <member name="F:VkWriteDescriptorSet32.dstBinding"></member>
    <member name="F:VkWriteDescriptorSet32.dstSet"></member>
    <member name="F:VkWriteDescriptorSet32.pBufferInfo"></member>
    <member name="F:VkWriteDescriptorSet32.pImageInfo"></member>
    <member name="F:VkWriteDescriptorSet32.pNext"></member>
    <member name="F:VkWriteDescriptorSet32.pTexelBufferView"></member>
    <member name="F:VkWriteDescriptorSet32.sType"></member>
    <member name="T:VkWriteDescriptorSet64">
      <summary>Structure specifying the parameters of a descriptor set write operation</summary>
    </member>
    <member name="F:VkWriteDescriptorSet64.descriptorCount"></member>
    <member name="F:VkWriteDescriptorSet64.descriptorType"></member>
    <member name="F:VkWriteDescriptorSet64.dstArrayElement"></member>
    <member name="F:VkWriteDescriptorSet64.dstBinding"></member>
    <member name="F:VkWriteDescriptorSet64.dstSet"></member>
    <member name="F:VkWriteDescriptorSet64.pBufferInfo"></member>
    <member name="F:VkWriteDescriptorSet64.pImageInfo"></member>
    <member name="F:VkWriteDescriptorSet64.pNext"></member>
    <member name="F:VkWriteDescriptorSet64.pTexelBufferView"></member>
    <member name="F:VkWriteDescriptorSet64.sType"></member>
    <member name="T:VkXcbSurfaceCreateFlagsKHR"></member>
    <member name="F:VkXcbSurfaceCreateFlagsKHR.value__"></member>
    <member name="T:VkXlibSurfaceCreateFlagsKHR"></member>
    <member name="F:VkXlibSurfaceCreateFlagsKHR.value__"></member>
    <member name="T:VkXYColorEXT"></member>
    <member name="F:VkXYColorEXT.x"></member>
    <member name="F:VkXYColorEXT.y"></member>
    <member name="T:Vulkan"></member>
    <member name="T:Interop.BinderGeneratedAttribute"></member>
    <member name="M:Interop.BinderGeneratedAttribute.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.BinderGeneratedAttribute</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Interop.HandleInt32`1"></member>
    <member name="M:Interop.HandleInt32`1.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.HandleInt32`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Interop.HandleInt32`1.Equals(Interop.HandleInt32{`0})"></member>
    <member name="M:Interop.HandleInt32`1.Equals(System.Object)"></member>
    <member name="M:Interop.HandleInt32`1.GetHashCode"></member>
    <member name="M:Interop.HandleInt32`1.op_Equality(Interop.HandleInt32{`0},Interop.HandleInt32{`0})"></member>
    <member name="M:Interop.HandleInt32`1.op_Implicit(Interop.HandleInt32{`0})~System.Int32"></member>
    <member name="M:Interop.HandleInt32`1.op_Implicit(System.Int32)~Interop.HandleInt32{`0}"></member>
    <member name="M:Interop.HandleInt32`1.op_Inequality(Interop.HandleInt32{`0},Interop.HandleInt32{`0})"></member>
    <member name="F:Interop.HandleInt32`1.Value"></member>
    <member name="T:Interop.HandleInt64`1"></member>
    <member name="M:Interop.HandleInt64`1.#ctor(System.Int64)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.HandleInt64`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Interop.HandleInt64`1.Equals(Interop.HandleInt64{`0})"></member>
    <member name="M:Interop.HandleInt64`1.Equals(System.Object)"></member>
    <member name="M:Interop.HandleInt64`1.GetHashCode"></member>
    <member name="M:Interop.HandleInt64`1.op_Equality(Interop.HandleInt64{`0},Interop.HandleInt64{`0})"></member>
    <member name="M:Interop.HandleInt64`1.op_Implicit(Interop.HandleInt64{`0})~System.Int64"></member>
    <member name="M:Interop.HandleInt64`1.op_Implicit(System.Int64)~Interop.HandleInt64{`0}"></member>
    <member name="M:Interop.HandleInt64`1.op_Inequality(Interop.HandleInt64{`0},Interop.HandleInt64{`0})"></member>
    <member name="F:Interop.HandleInt64`1.Value"></member>
    <member name="T:Interop.HandleIntPtr`1"></member>
    <member name="M:Interop.HandleIntPtr`1.#ctor(System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.HandleIntPtr`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Interop.HandleIntPtr`1.Equals(Interop.HandleIntPtr{`0})"></member>
    <member name="M:Interop.HandleIntPtr`1.Equals(System.Object)"></member>
    <member name="M:Interop.HandleIntPtr`1.GetHashCode"></member>
    <member name="M:Interop.HandleIntPtr`1.op_Equality(Interop.HandleIntPtr{`0},Interop.HandleIntPtr{`0})"></member>
    <member name="M:Interop.HandleIntPtr`1.op_Implicit(Interop.HandleIntPtr{`0})~System.IntPtr"></member>
    <member name="M:Interop.HandleIntPtr`1.op_Implicit(System.IntPtr)~Interop.HandleIntPtr{`0}"></member>
    <member name="M:Interop.HandleIntPtr`1.op_Implicit(System.Void*)~Interop.HandleIntPtr{`0}"></member>
    <member name="M:Interop.HandleIntPtr`1.op_Inequality(Interop.HandleIntPtr{`0},Interop.HandleIntPtr{`0})"></member>
    <member name="F:Interop.HandleIntPtr`1.Value"></member>
    <member name="T:Interop.HandleUInt32`1"></member>
    <member name="M:Interop.HandleUInt32`1.#ctor(System.UInt32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.HandleUInt32`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Interop.HandleUInt32`1.Equals(Interop.HandleUInt32{`0})"></member>
    <member name="M:Interop.HandleUInt32`1.Equals(System.Object)"></member>
    <member name="M:Interop.HandleUInt32`1.GetHashCode"></member>
    <member name="M:Interop.HandleUInt32`1.op_Equality(Interop.HandleUInt32{`0},Interop.HandleUInt32{`0})"></member>
    <member name="M:Interop.HandleUInt32`1.op_Implicit(Interop.HandleUInt32{`0})~System.UInt32"></member>
    <member name="M:Interop.HandleUInt32`1.op_Implicit(System.UInt32)~Interop.HandleUInt32{`0}"></member>
    <member name="M:Interop.HandleUInt32`1.op_Inequality(Interop.HandleUInt32{`0},Interop.HandleUInt32{`0})"></member>
    <member name="F:Interop.HandleUInt32`1.Value"></member>
    <member name="T:Interop.HandleUInt64`1"></member>
    <member name="M:Interop.HandleUInt64`1.#ctor(System.UInt64)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.HandleUInt64`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Interop.HandleUInt64`1.Equals(Interop.HandleUInt64{`0})"></member>
    <member name="M:Interop.HandleUInt64`1.Equals(System.Object)"></member>
    <member name="M:Interop.HandleUInt64`1.GetHashCode"></member>
    <member name="M:Interop.HandleUInt64`1.op_Equality(Interop.HandleUInt64{`0},Interop.HandleUInt64{`0})"></member>
    <member name="M:Interop.HandleUInt64`1.op_Implicit(Interop.HandleUInt64{`0})~System.UInt64"></member>
    <member name="M:Interop.HandleUInt64`1.op_Implicit(System.UInt64)~Interop.HandleUInt64{`0}"></member>
    <member name="M:Interop.HandleUInt64`1.op_Inequality(Interop.HandleUInt64{`0},Interop.HandleUInt64{`0})"></member>
    <member name="F:Interop.HandleUInt64`1.Value"></member>
    <member name="T:Interop.HandleUIntPtr`1"></member>
    <member name="M:Interop.HandleUIntPtr`1.#ctor(System.UIntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.HandleUIntPtr`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Interop.HandleUIntPtr`1.Equals(Interop.HandleUIntPtr{`0})"></member>
    <member name="M:Interop.HandleUIntPtr`1.Equals(System.Object)"></member>
    <member name="M:Interop.HandleUIntPtr`1.GetHashCode"></member>
    <member name="M:Interop.HandleUIntPtr`1.op_Equality(Interop.HandleUIntPtr{`0},Interop.HandleUIntPtr{`0})"></member>
    <member name="M:Interop.HandleUIntPtr`1.op_Implicit(Interop.HandleUIntPtr{`0})~System.UIntPtr"></member>
    <member name="M:Interop.HandleUIntPtr`1.op_Implicit(System.UIntPtr)~Interop.HandleUIntPtr{`0}"></member>
    <member name="M:Interop.HandleUIntPtr`1.op_Implicit(System.Void*)~Interop.HandleUIntPtr{`0}"></member>
    <member name="M:Interop.HandleUIntPtr`1.op_Inequality(Interop.HandleUIntPtr{`0},Interop.HandleUIntPtr{`0})"></member>
    <member name="F:Interop.HandleUIntPtr`1.Value"></member>
    <member name="T:Interop.IHandle`1"></member>
    <member name="T:Interop.ITypedHandle"></member>
    <member name="P:Interop.ITypedHandle.Value"></member>
    <member name="T:Interop.ITypedHandle`1"></member>
    <member name="P:Interop.ITypedHandle`1.Value"></member>
    <member name="T:Interop.SplitPointer`3"></member>
    <member name="M:Interop.SplitPointer`3.#ctor(System.IntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.SplitPointer`3</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Interop.SplitPointer`3.#ctor(System.UIntPtr)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.SplitPointer`3</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Interop.SplitPointer`3.#ctor(System.Void*)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Interop.SplitPointer`3</parameter>
          </include>
        </markup>
      </summary>
    </member>
  </members>
</doc>